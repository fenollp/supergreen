on: [push]
name: CLIs
jobs:


  meta-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: ./hack/clis.sh | tee .github/workflows/clis.yml
    - run: git --no-pager diff --exit-code
    - name: Run shellcheck
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        check_together: 'yes'
        severity: error

  bin:
    runs-on: ubuntu-latest
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v4

    - name: Cache `cargo fetch`
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ github.job }}-${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-cargo-deps-

    - name: Cache `cargo install`
      uses: actions/cache@v4
      with:
        path: ~/instmp
        key: ${{ runner.os }}-cargo-install-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-install-

    - name: Compile HEAD cargo-green
      run: |
        CARGO_TARGET_DIR=~/instmp cargo install --locked --force --path=./cargo-green
    - run: ls -lha ~/instmp/release/
    - run: ls -lha /home/runner/.cargo/bin/

    - uses: actions/upload-artifact@v4
      with:
        name: bin-artifacts
        path: /home/runner/.cargo/bin/cargo-green

  buildxargs_master:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  buildxargs_master-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  cargo-llvm-cov_0-5-36:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - run: rustup component add llvm-tools-preview

    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force cargo-llvm-cov@0.5.36 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force cargo-llvm-cov@0.5.36  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  cross_0-2-5:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  cross_0-2-5-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  hickory-dns_0-25-0-alpha-1:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  hickory-dns_0-25-0-alpha-1-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls 2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  qcow2-rs_0-1-2:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force qcow2-rs@0.1.2 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force qcow2-rs@0.1.2  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  qcow2-rs_0-1-2-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force qcow2-rs@0.1.2 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force qcow2-rs@0.1.2  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  ripgrep_14-1-0:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force ripgrep@14.1.0 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force ripgrep@14.1.0  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  ripgrep_14-1-0-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force ripgrep@14.1.0 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force ripgrep@14.1.0  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  vixargs_0-1-0:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force vixargs@0.1.0 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=1
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=1 --locked --force vixargs@0.1.0  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

  vixargs_0-1-0-J:
    runs-on: ubuntu-latest
    needs: bin
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable


    - name: Retrieve saved bin
      uses: actions/download-artifact@v4
      with:
        name: bin-artifacts
    - run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        ./cargo-green --version | grep cargo-green
        mv ./cargo-green /home/runner/.cargo/bin/
        cargo green --version

    - uses: actions/checkout@v4

    - name: Docker info
      run: docker info

    - name: Buildx version
      run: docker buildx version

    - name: Podman version
      run: podman version || true

    - name: Rust version
      run: rustc -Vv

    - name: Envs
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Envs again
      run: /home/runner/.cargo/bin/cargo-green green supergreen env

    - name: Disk usage
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force vixargs@0.1.0 

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt ; echo >logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - name: cargo install net=ON cache=ON remote=OFF jobs=3
      run: |
        CARGOGREEN_LOG=debug \
        RUSTCBUILDX_LOG_PATH="$PWD"/logs.txt \
          CARGO_TARGET_DIR=~/instst cargo green -vv install --jobs=3 --locked --force vixargs@0.1.0  2>&1 | tee _

    - if: ${{ failure() || success() }}
      run: tail -n9999999 logs.txt

    - name: Disk usage
      if: ${{ failure() || success() }}
      run: |
        docker system df
        docker buildx du
        sudo du -sh /var/lib/docker

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh ~/instst

    - if: ${{ failure() || success() }}
      name: Finishes fast
      run: |
        grep Finished _
        grep Finished _ | grep -E [012]...s

    - if: ${{ failure() || success() }}
      run: |
        grep Fresh _

    - if: ${{ failure() || success() }}
      name: Did not recompile things (yay!)
      run: |
        ! grep Compiling _

    - if: ${{ failure() || success() }}
      run: |
        ! grep 'DEBUG|INFO|WARN|ERROR' _
        ! grep 'Falling back' _
        ! grep 'BUG[: ]' _

    - if: ${{ failure() || success() }}
      run: cat _ || true

