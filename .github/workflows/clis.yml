on: [push]
name: CLIs
jobs:


  bin:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        cache-on-failure: true

    - uses: actions/checkout@v5

    - name: Cache `cargo fetch` index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry/index/
        key: ${{ github.job }}-${{ runner.os }}-cargo-deps-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-cargo-deps-index-

    - name: Cache `cargo fetch` cache
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry/cache/
        key: ${{ github.job }}-${{ runner.os }}-cargo-deps-cache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-cargo-deps-cache-

    - name: Cache `cargo fetch` gitdb
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git/db/
        key: ${{ github.job }}-${{ runner.os }}-cargo-deps-gitdb-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-cargo-deps-gitdb-

    - name: Cache `cargo install`
      uses: actions/cache@v4
      with:
        path: ~/instmp
        key: ${{ runner.os }}-cargo-install-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-install-

    - name: Compile HEAD cargo-green
      run: |
        CARGO_TARGET_DIR=~/instmp cargo install --locked --force --path=./cargo-green

    - uses: actions/upload-artifact@v4
      with:
        name: cargo-green
        path: /home/runner/.cargo/bin/cargo-green

  buildxargs_master_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-buildxargs_master
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/buildxargs@master.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: buildxargs@master.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  cargo-llvm-cov_0-5-36_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-llvm-cov_0-5-36
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/cargo-llvm-cov@0.5.36.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true
    - run: rustup component add llvm-tools-preview

    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cargo-llvm-cov@0.5.36  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-llvm-cov@0.5.36  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-llvm-cov@0.5.36.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cargo-llvm-cov@0.5.36  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  cross_0-2-5_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cross_0-2-5
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/cross@0.2.5.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cross@0.2.5.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  dbcc_2-2-1_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-dbcc_2-2-1
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/dbcc@2.2.1.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=TYPENUM_BUILD_CONSTS,TYPENUM_BUILD_OP \
          cargo green -vv install --jobs=3 --locked --force dbcc@2.2.1  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=TYPENUM_BUILD_CONSTS,TYPENUM_BUILD_OP \
          cargo green -vv install --jobs=1 --locked --force dbcc@2.2.1  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: dbcc@2.2.1.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=TYPENUM_BUILD_CONSTS,TYPENUM_BUILD_OP \
          cargo green -vv install --jobs=3 --locked --force dbcc@2.2.1  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  diesel_cli_2-3-2_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-diesel_cli_2-3-2
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/diesel_cli@2.3.2.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libpq-dev \
          cargo green -vv install --jobs=3 --locked --force diesel_cli@2.3.2 --no-default-features --features=postgres |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libpq-dev \
          cargo green -vv install --jobs=1 --locked --force diesel_cli@2.3.2 --no-default-features --features=postgres |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: diesel_cli@2.3.2.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libpq-dev \
          cargo green -vv install --jobs=3 --locked --force diesel_cli@2.3.2 --no-default-features --features=postgres |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  hickory-dns_0-25-0-alpha-1_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-hickory-dns_0-25-0-alpha-1
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/hickory-dns@0.25.0-alpha.1.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=RING_CORE_PREFIX \
          cargo green -vv install --jobs=3 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: hickory-dns@0.25.0-alpha.1.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=RING_CORE_PREFIX \
          cargo green -vv install --jobs=3 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  mussh_3-1-3_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-mussh_3-1-3
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/mussh@3.1.3.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libsqlite3-dev,libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=3 --locked --force mussh@3.1.3  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libsqlite3-dev,libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force mussh@3.1.3  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: mussh@3.1.3.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libsqlite3-dev,libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=3 --locked --force mussh@3.1.3  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  ntpd_1-2-3_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-ntpd_1-2-3
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/ntpd@1.2.3.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt
      NTPD_RS_GIT_REV: c7945250c378f65f65b2a75748132edf75063b3b
      NTPD_RS_GIT_DATE: 2025-05-09
    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=NTPD_RS_GIT_DATE,NTPD_RS_GIT_REV,RING_CORE_PREFIX \
          cargo green -vv install --jobs=3 --locked --force ntpd@1.2.3  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=NTPD_RS_GIT_DATE,NTPD_RS_GIT_REV,RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force ntpd@1.2.3  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: ntpd@1.2.3.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=NTPD_RS_GIT_DATE,NTPD_RS_GIT_REV,RING_CORE_PREFIX \
          cargo green -vv install --jobs=3 --locked --force ntpd@1.2.3  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  qcow2-rs_0-1-2_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-qcow2-rs_0-1-2
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/qcow2-rs@0.1.2.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force qcow2-rs@0.1.2  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force qcow2-rs@0.1.2  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: qcow2-rs@0.1.2.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force qcow2-rs@0.1.2  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  ripgrep_14-1-0_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-ripgrep_14-1-0
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/ripgrep@14.1.0.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force ripgrep@14.1.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force ripgrep@14.1.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: ripgrep@14.1.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force ripgrep@14.1.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  rublk_0-2-0_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-rublk_0-2-0
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/rublk@0.2.0.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force rublk@0.2.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force rublk@0.2.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: rublk@0.2.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force rublk@0.2.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  vixargs_0-1-0_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-vixargs_0-1-0
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/vixargs@0.1.0.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force vixargs@0.1.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force vixargs@0.1.0  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: vixargs@0.1.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force vixargs@0.1.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  cargo-config2_0-1-34_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-config2_0-1-34
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/cargo-config2@0.1.34.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cargo-config2@0.1.34 --example=get |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-config2@0.1.34 --example=get |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-config2@0.1.34.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=3 --locked --force cargo-config2@0.1.34 --example=get |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

  cargo-udeps_0-1-55_3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != '1.90.0' }}
    strategy:
      matrix:
        toolchain:
        - 1.90.0
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-udeps_0-1-55
      CARGOGREEN_CACHE_FROM_IMAGES: docker-image://localhost:12345/${{ github.repository }}
      CARGOGREEN_CACHE_TO_IMAGES: docker-image://localhost:23456/${{ github.repository }}
      CARGOGREEN_FINAL_PATH: recipes/cargo-udeps@0.1.55.Dockerfile
      CARGOGREEN_FINAL_PATH_NONPRIMARY: 1 # dumps on each build call
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: docker/login-action@v3
      if: ${{ ! startsWith(github.ref, 'refs/heads/dependabot/') }}
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        rustflags: ''
        cache-on-failure: true


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v5
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Prepare local private registry cache
      run: |
        # https://github.com/fenollp/supergreen/actions/caches
        mkdir -p /tmp/.local-registry
        mkdir -p /tmp/.local-registry-new
    - name: ðŸ”µ Restore local private registry cache
      uses: actions/cache/restore@v4
      with:
        path: /tmp/.local-registry
        # github.run_id: https://github.com/actions/toolkit/issues/658#issuecomment-2640690759
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}
        restore-keys: |
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-
          localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-
          localprivatereg-${{ runner.os }}-
          localprivatereg-

    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: Pull regist3 image
      run: |
        false \
        || docker build --tag regist3 - <<<'FROM docker.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM mirror.gcr.io/registry:3' \
        || docker build --tag regist3 - <<<'FROM public.ecr.aws/docker/registry:3' \
        || exit 1
    - name: Start "cache from" image registry
      run: docker run --name=reg-from --rm --detach -p 12345:5000 --user $(id -u):$(id -g) -v     /tmp/.local-registry:/var/lib/registry regist3
    - name: Start "cache to" image registry
      run: docker run --name=reg-to   --rm --detach -p 23456:5000 --user $(id -u):$(id -g) -v /tmp/.local-registry-new:/var/lib/registry regist3

    - run: docker pull localhost:12345/${{ github.repository }} || true
    - run: docker build --push --tag localhost:12345/${{ github.repository }} - <<<'FROM scratch'
    - run: docker pull localhost:12345/${{ github.repository }}
    - run: curl -fsSL http://localhost:12345/v2/${{ github.repository }}/blobs/sha256:1720a10883c7ebbf9080c7d8399b21cb883271cb3dfec3e30a4248b636628779 || true
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new

    - name: ðŸ”µ Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != '1.90.0' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - run: BUILDX_BUILDER=supergreen docker buildx inspect
    - name: ðŸ”µ Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=OFF remote=OFF jobs=3
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=3 --locked --force cargo-udeps@0.1.55  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - name: ðŸ”µ cargo install net=ON cache=ON remote=OFF jobs=1
      if: ${{ failure() }}
      run: |
        rm _ || true
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force cargo-udeps@0.1.55  |& tee _
    - run: ls -lha /tmp/.local-registry
    - run: du -sh /tmp/.local-registry
    - run: du -sh /tmp/.local-registry-new
    - run: ls -lha /tmp/.local-registry-new
    - if: ${{ matrix.toolchain != '1.90.0' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-udeps@0.1.55.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH
    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

    - name: ðŸ”µ Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=3 --locked --force cargo-udeps@0.1.55  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's cargo's error text
      run: |
        ! grep -C20 -E '-[a-f0-9]{16} [eE]rror:' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> 429 Too Many Requests
      run: |
        ! grep -C20 -F '429 Too Many Requests' $CARGOGREEN_LOG_PATH _

    - if: ${{ always() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ always() && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != '1.90.0' }}
      name: ðŸŒ€ Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH

    - if: ${{ always() }}
      name: ðŸŒ€ cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - name: ðŸ”µ Compare old/new local private registry image digests
      run: |
        diff --width=150 -y \
          <(find /tmp/.local-registry/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u) \
          <(find /tmp/.local-registry-new/docker/registry/v2/blobs/sha256/??/ -type d | awk -F/ '{print $NF}' | sort -u)
    - name: Local private registry cache dance
      run: |
        # [ci: caches keep growing](https://github.com/moby/buildkit/issues/1850)
        docker stop --timeout 10 reg-from reg-to
        rm -rf /tmp/.local-registry
        mv /tmp/.local-registry-new /tmp/.local-registry
    - name: Save local private registry cache
      uses: actions/cache/save@v4
      if: ${{ false }} # TODO: drop when digests are stable
      with:
        path: /tmp/.local-registry
        key: localprivatereg-${{ runner.os }}-${{ matrix.toolchain }}-${{ github.job }}-${{ github.run_id }}

    - run: sudo du -sh /var/lib/docker || true
    - run: docker system df
    - run: docker system df --verbose
    - run: BUILDX_BUILDER=supergreen docker buildx du | head || true
    - run: BUILDX_BUILDER=supergreen docker buildx du | tail || true
    - run: BUILDX_BUILDER=supergreen docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR || true

