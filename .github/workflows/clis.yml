on: [push]
name: CLIs
jobs:


  meta-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    steps:
    - uses: actions/checkout@v4
    - run: ./hack/clis.sh | tee .github/workflows/clis.yml
    - run: ./hack/self.sh | tee .github/workflows/self.yml
    - run: git --no-pager diff --exit-code
    - name: Run shellcheck
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        check_together: 'yes'
        severity: error

  bin:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - uses: actions/checkout@v4

    - name: Cache `cargo fetch`
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: ${{ github.job }}-${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ github.job }}-${{ runner.os }}-cargo-deps-

    - name: Cache `cargo install`
      uses: actions/cache@v4
      with:
        path: ~/instmp
        key: ${{ runner.os }}-cargo-install-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-install-

    - name: Compile HEAD cargo-green
      run: |
        CARGO_TARGET_DIR=~/instmp cargo install --locked --force --path=./cargo-green

    - uses: actions/upload-artifact@v4
      with:
        name: cargo-green
        path: /home/runner/.cargo/bin/cargo-green

  buildxargs_master:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-buildxargs_master
      CARGOGREEN_FINAL_PATH: recipes/buildxargs@master.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: buildxargs@master.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force buildxargs --git https://github.com/fenollp/buildxargs.git |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  cargo-llvm-cov_0-5-36:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-llvm-cov_0-5-36
      CARGOGREEN_FINAL_PATH: recipes/cargo-llvm-cov@0.5.36.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
    - run: rustup component add llvm-tools-preview

    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-llvm-cov@0.5.36  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-llvm-cov@0.5.36.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-llvm-cov@0.5.36  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  cross_0-2-5:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cross_0-2-5
      CARGOGREEN_FINAL_PATH: recipes/cross@0.2.5.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cross@0.2.5.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cross@0.2.5 --git https://github.com/cross-rs/cross.git --tag=v0.2.5 cross |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  dbcc_2-2-1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-dbcc_2-2-1
      CARGOGREEN_FINAL_PATH: recipes/dbcc@2.2.1.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=TYPENUM_BUILD_CONSTS,TYPENUM_BUILD_OP \
          cargo green -vv install --jobs=1 --locked --force dbcc@2.2.1  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: dbcc@2.2.1.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=TYPENUM_BUILD_CONSTS,TYPENUM_BUILD_OP \
          cargo green -vv install --jobs=1 --locked --force dbcc@2.2.1  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  diesel_cli_2-1-1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-diesel_cli_2-1-1
      CARGOGREEN_FINAL_PATH: recipes/diesel_cli@2.1.1.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libpq-dev \
          cargo green -vv install --jobs=1 --locked --force diesel_cli@2.1.1 --no-default-features --features=postgres |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: diesel_cli@2.1.1.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libpq-dev \
          cargo green -vv install --jobs=1 --locked --force diesel_cli@2.1.1 --no-default-features --features=postgres |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  hickory-dns_0-25-0-alpha-1:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-hickory-dns_0-25-0-alpha-1
      CARGOGREEN_FINAL_PATH: recipes/hickory-dns@0.25.0-alpha.1.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: hickory-dns@0.25.0-alpha.1.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force hickory-dns@0.25.0-alpha.1 --features=dns-over-rustls |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  mussh_3-1-3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-mussh_3-1-3
      CARGOGREEN_FINAL_PATH: recipes/mussh@3.1.3.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libsqlite3-dev,libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force mussh@3.1.3  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: mussh@3.1.3.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libsqlite3-dev,libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force mussh@3.1.3  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  ntpd_1-2-3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-ntpd_1-2-3
      CARGOGREEN_FINAL_PATH: recipes/ntpd@1.2.3.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt
      NTPD_RS_GIT_REV: c7945250c378f65f65b2a75748132edf75063b3b
      NTPD_RS_GIT_DATE: 2025-05-09
    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=NTPD_RS_GIT_DATE,NTPD_RS_GIT_REV,RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force ntpd@1.2.3  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: ntpd@1.2.3.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_SET_ENVS=NTPD_RS_GIT_DATE,NTPD_RS_GIT_REV,RING_CORE_PREFIX \
          cargo green -vv install --jobs=1 --locked --force ntpd@1.2.3  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  qcow2-rs_0-1-2:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-qcow2-rs_0-1-2
      CARGOGREEN_FINAL_PATH: recipes/qcow2-rs@0.1.2.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force qcow2-rs@0.1.2  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: qcow2-rs@0.1.2.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force qcow2-rs@0.1.2  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  ripgrep_14-1-0:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-ripgrep_14-1-0
      CARGOGREEN_FINAL_PATH: recipes/ripgrep@14.1.0.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force ripgrep@14.1.0  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: ripgrep@14.1.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force ripgrep@14.1.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  rublk_0-2-0:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-rublk_0-2-0
      CARGOGREEN_FINAL_PATH: recipes/rublk@0.2.0.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force rublk@0.2.0  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: rublk@0.2.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force rublk@0.2.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  vixargs_0-1-0:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-vixargs_0-1-0
      CARGOGREEN_FINAL_PATH: recipes/vixargs@0.1.0.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force vixargs@0.1.0  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: vixargs@0.1.0.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force vixargs@0.1.0  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  cargo-config2_0-1-34:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-config2_0-1-34
      CARGOGREEN_FINAL_PATH: recipes/cargo-config2@0.1.34.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-config2@0.1.34 --example=get |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-config2@0.1.34.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env  \
          cargo green -vv install --jobs=1 --locked --force cargo-config2@0.1.34 --example=get |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

  cargo-udeps_0-1-55:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -euo pipefail {0}
    continue-on-error: ${{ matrix.toolchain != 'stable' }}
    strategy:
      matrix:
        toolchain:
        - stable
        - 1.86.0
    env:
      CARGO_TARGET_DIR: /tmp/clis-cargo-udeps_0-1-55
      CARGOGREEN_FINAL_PATH: recipes/cargo-udeps@0.1.55.Dockerfile
      CARGOGREEN_LOG: trace
      CARGOGREEN_LOG_PATH: logs.txt

    needs: bin
    steps:
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        cache: false
        rustflags: ''
    - name: Unset envs set by toolchain action
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY


    - name: Retrieve saved bin
      uses: actions/download-artifact@v5
      with:
        name: cargo-green

    - name: Install saved bin
      shell: bash -eu {0}
      run: | # TODO: whence https://github.com/actions/download-artifact/issues/236
        chmod +x ./cargo-green
        { ! ./cargo-green --version ; } | grep cargo-green
        mv ./cargo-green ~/.cargo/bin/
    - uses: actions/checkout@v4
    - run: docker info
    - run: docker buildx version
    - run: docker buildx build --help
    - run: podman version || true
    - run: cargo -Vv
    - run: docker buildx prune --all --force

    - name: Envs
      run: ~/.cargo/bin/cargo-green green supergreen env
    - if: ${{ matrix.toolchain != 'stable' }}
      run: ~/.cargo/bin/cargo-green green supergreen env CARGOGREEN_BASE_IMAGE | grep '${{ matrix.toolchain }}'
    - name: Envs again
      run: ~/.cargo/bin/cargo-green green supergreen env

    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose
    - name: cargo install net=ON cache=OFF remote=OFF jobs=1
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force cargo-udeps@0.1.55  |& tee _
    - if: ${{ matrix.toolchain != 'stable' }}
      uses: actions/upload-artifact@v4
      name: Upload recipe
      with:
        name: cargo-udeps@0.1.55.Dockerfile
        path: ${{ env.CARGOGREEN_FINAL_PATH }}
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

    - name: Ensure running the same command twice without modifications...
      run: |
        unset CARGO_INCREMENTAL
        unset CARGO_PROFILE_DEV_DEBUG
        unset CARGO_REGISTRIES_CRATES_IO_PROTOCOL
        unset CARGO_TERM_COLOR
        unset CARGO_UNSTABLE_SPARSE_REGISTRY
        env CARGOGREEN_ADD_APT=libssl-dev,zlib1g-dev \
          cargo green -vv install --jobs=1 --locked --force cargo-udeps@0.1.55  |& tee _
    - name: ...doesn't recompile anything
      run: |
        err=0
        grep Finished  _ | grep -E [012]...s || err=1
        grep Dirty     _                     && err=1
        grep Compiling _                     && err=1
        exit $err
    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that cargo issue https://github.com/rust-lang/cargo/pull/14322
      run: |
        ! grep -C20 -F 'src/cargo/util/dependency_queue.rs:' _

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's again that docker issue https://github.com/moby/buildkit/issues/5217
      run: |
        ! grep -C20 -F 'ResourceExhausted: grpc: received message larger than max' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> it's this HTTP/2 code = Unavailable desc = error reading from server-- connection error-- COMPRESSION_ERROR
      run: |
        ! grep -C20 -F 'connection error: COMPRESSION_ERROR' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some panic!s
      run: |
        ! grep -C20 -F ' panicked at ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> there's some BUGs
      run: |
        ! grep -C20 -F 'BUG: ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: ðŸ”´ =means=> here's relevant logs
      run: |
        ! grep -C20 -F ' >>> ' $CARGOGREEN_LOG_PATH

    - if: ${{ failure() || success() }}
      name: cargo-green logs
      run: tail -n9999999 $CARGOGREEN_LOG_PATH ; echo >$CARGOGREEN_LOG_PATH

    - if: ${{ ( failure() || success() ) && env.CARGOGREEN_FINAL_PATH != '' && matrix.toolchain != 'stable' }}
      name: Maybe show final path diff
      run: |
        case "$GITHUB_JOB" in
          cross*|ntpd*) exit 0 ;; # TODO: fix undeterministic final paths for git crates
          *) ;;
        esac
        git --no-pager diff --exit-code           --ignore-matching-lines='^# Generated by'           --ignore-matching-lines=' AS rust-base$'           --ignore-matching-lines='^# syntax=docker.io/docker/dockerfile:1@'           --ignore-matching-lines="^##     '\{"           -- $CARGOGREEN_FINAL_PATH
    - run: sudo du -sh /var/lib/docker
    - run: docker system df
    - run: docker system df --verbose
    - run: docker buildx du | head || true
    - run: docker buildx du | tail || true
    - run: docker buildx du --verbose

    - name: Target dir disk usage
      if: ${{ failure() || success() }}
      run: du -sh $CARGO_TARGET_DIR

