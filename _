---

https://bevy.org/learn/quick-start/getting-started/setup/#enable-fast-compiles-optional
https://www.reddit.com/r/bevy/comments/1mrvcis/compiling_is_slow/

---

test with 

* CARGOGREEN_BUILDER_IMAGE="docker-image://docker.io/moby/buildkit:buildx-stable-1-rootless"

* a matrix of earlier and earlier versions of: buildkit x buildx/docker x cargo/rustc 

* /etc/docker/daemon.json <'{  "registry-mirrors": ["https://docker-proxy.infra.online.net"] }'

---

Cargo --timings green overhead

---

https://codeberg.org/willempx/qair/

---

https://doc.rust-lang.org/nightly/unstable-book/compiler-flags/hint-mostly-unused.html
how to cache with this tho

---

switch to mentioning debian name: 
1-slim-trixie, 1.89-slim-trixie, 1.89.0-slim-trixie, slim-trixie


1.89.0-slim-trixie

---

moby/ubildkit tags
https://github.com/moby/buildkit/pull/5944#issue-3015470909
https://hub.docker.com/r/moby/buildkit

---

 Looking for a consistently "latest" BuildKit image tag #6134 
https://github.com/moby/buildkit/discussions/6134

https://github.com/moby/buildkit/issues/6118
docker/dockerfile image tags are late #6118

https://github.com/docker/buildx/issues/3150
FR: an option to delay --cache-to pushes #3150


https://github.com/docker/buildx/issues/3367
Support --format=json for buildx du --verbose #3367 













https://github.com/moby/buildkit/issues/6123
allow exporting cache layers in parallel to the remote registry #6123

https://github.com/moby/buildkit/issues/6097
remote docker buildx build with large dockerfile gives trying to send message larger than max (22482550 vs. 16777216) error #6097

---

https://www.reddit.com/r/rust/comments/1mlzz5l/media_everytime_i_try_to_use_tauri_for_android_why/
 [Media] Everytime I try to use Tauri for Android... Why? 

 => on size of compilation artifacts
 => > ultimately the "real" solution has got to be a complete overhaul of the entire compilation system to be entirely on-demand in a granular basis, rather than "compile every crate in the dependency tree wholesale". 
 => suggestion to use a shared target folder
 
---

https://git.sr.ht/~ireas/rusty-man

---

CARGOGREEN_LOG=trace CARGOGREEN_LOG_PATH=_ CARGO_TARGET_DIR=green cargo green clippy --jobs=1 --locked --frozen --offline --all-targets -- --no-deps

130 43s ipam.git main λ rm -rf _ ./green ; cargo green fetch && CARGOGREEN_LOG=trace CARGOGREEN_LOG_PATH=_ CARGOGREEN_SET_ENVS=RING_CORE_PREFIX CARGO_TARGET_DIR=green  cargo green clippy --jobs=1 --locked --frozen --offline --all-targets -- --no-deps



     validator.git add-custom-returning-multiple-errs-0.16 λ cfmt && CARGO_TARGET_DIR=${CARGO_TARGET_DIR:-target/clippy} cargo clippy --locked --frozen --offline --all-targets -- --no-deps  
rm -rf _ ./green ; cargo green fetch && CARGOGREEN_LOG=trace CARGOGREEN_LOG_PATH=_ CARGO_TARGET_DIR=green  cargo green clippy --locked --frozen --offline --all-targets -- --no-deps

---

env option to not include toml in finalpath containerfile

CARGOGREEN_FINALPATH_VERBOSE=1

---

DOCKER_HOST=ssh://oomphy jobs=1 ./hack/clis.sh rublk clean

ssh root@oomphy journalctl -fu docker

---

ci? https://github.com/asterinas/asterinas

https://github.com/microsoft/edit

=> does toolchain file impact whole project or just primary crate?

---

https://github.com/untitaker/rust-atomicwrites

---

only transfers missing layers
https://news.ycombinator.com/item?id=44314085
https://github.com/psviderski/unregistry

---

cargo install --locked --git https://fuchsia.googlesource.com/fargo fargo

---

https://lib.rs/crates/tryhard

---

https://github.com/CyberTimon/RapidRAW

---

https://linux.die.net/man/1/distcc

https://github.com/garentyler/distrustc
https://github.com/mozilla/sccache

---

--ulimit nofile=1024:1024

https://github.com/docker/buildx/issues/379#issuecomment-3114962233
https://github.com/cross-rs/cross/pull/1065/files

---

drop apt-get?
maybe actually drop apt + turn api easier for "apt-get satisfy" or repro-get like

---

https://github.com/fenollp/docker-from-deps/blob/ee1e638de8cd30ed438611ec89252244a0e3b5f7/to_dockerfile#L45

To install a specific version of a package using apt-get, you use the following command: sudo apt-get install = . This command allows you to specify the package and the version you want to install. Here's a simple example: sudo apt-get install curl=7.58.21 May 2024

* Suggest using `=` for apt
* auto-search the web to add `=...`

---

musl platform test https://github.com/fujiapple852/trippy/blob/7fd4098ae50dbc930fd3b0503f66801a127cafff/Dockerfile

---

https://github.com/Automattic/harper/releases/tag/v0.37.0
harper-cli

https://lib.rs/crates/zstd

https://github.com/facebook/pyrefly

https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs/-/tree/4ee38b6cf99407bc8a633a4a06784e09816ff48d

---



    So how does one achieve a persistent ssh connection to a remote docker-container builder? A conn that stays alive in between multiple docker buildx build calls, without having to re-establish the con.

If you wish for your ssh connection to not drop after buildx/docker exist then that is controlled by your SSH config.

Usually smth like

  ControlPath ~/.ssh/cm-%r@%h:%p
  ControlMaster auto

First google link: cyberciti.biz/faq/linux-unix-reuse-openssh-connection

---

 FROM rust-base AS dep-l-anyhow-1.0.79-95e5d8a0e52ba465

+  --mount=from=ran-467b075ea0bb0ef8,dst=/tmp/clis-ripgrep_14-1-0/release/build/anyhow-467b075ea0bb0ef8/out,source=/ \

rustc missing '--cfg' 'std_backtrace'


=> runnning buildrs misses cargo::outputs
z

https://github.com/dtolnay/anyhow/blob/1.0.79/build.rs

---

crun green fetch

rmrf=1 ./hack/clis.sh config

---

2025-09-07T17:04:50.0318646Z I 25/09/07 17:04:23.587 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #10 0.441 {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib","emit":"link"}
2025-09-07T17:04:50.0327239Z I 25/09/07 17:04:23.762 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #10 0.442 {"$message_type":"diagnostic","message":"12 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"warning: 12 warnings emitted\n\n"}
2025-09-07T17:04:50.0327689Z I 25/09/07 17:04:23.762 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #10 DONE 0.5s
2025-09-07T17:04:50.0328585Z I 25/09/07 17:04:23.866 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #11 [out-320ef4b8ee2e57f9 1/1] COPY --from=dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9 /tmp/clis-dbcc_2-2-1/release/deps/*-320ef4b8ee2e57f9* /
2025-09-07T17:04:50.0352400Z I 25/09/07 17:04:23.929 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #11 DONE 0.0s
2025-09-07T17:04:50.0352681Z I 25/09/07 17:04:23.930 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #12 exporting to client directory
2025-09-07T17:04:50.0353021Z I 25/09/07 17:04:23.930 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #12 copying files 348.39kB 0.0s done
2025-09-07T17:04:50.0353229Z I 25/09/07 17:04:23.930 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ #12 DONE 0.0s
2025-09-07T17:04:50.0353529Z I 25/09/07 17:04:23.936 L ansi_term 0.11.0-320ef4b8ee2e57f9 Terminating task CACHED:3 DONE:9 ["dockerfile: 3.04kB", "context: 2B"]
2025-09-07T17:04:50.0353747Z I 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 build ran in 1.126911962s: exit status: 0
2025-09-07T17:04:50.0353955Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 Reading ➤ file
2025-09-07T17:04:50.0354248Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 Time To First Line for task ➤: 54.251µs
2025-09-07T17:04:50.0354464Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 Terminating ➤ task
2025-09-07T17:04:50.0354669Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 Reading ✖ file
2025-09-07T17:04:50.0354953Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 Time To First Line for task ✖: 72.866µs
2025-09-07T17:04:50.0355583Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/ansi_term-320ef4b8ee2e57f9.d","emit":"dep-info"}
2025-09-07T17:04:50.0355893Z I 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 rustc wrote /tmp/clis-dbcc_2-2-1/release/deps/ansi_term-320ef4b8ee2e57f9.d
2025-09-07T17:04:50.0361322Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"associated type `wstr` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":64,"byte_end":68,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":64,"byte_end":68,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"Wstr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: associated type `wstr` should have an upper camel case name\n --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:6:10\n  |\n6 |     type wstr: ?Sized;\n  |          ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Wstr`\n  |\n  = note: `#[warn(non_camel_case_types)]` on by default\n\n"}
2025-09-07T17:04:50.0366476Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"unused import: `windows::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs","byte_start":8892,"byte_end":8902,"line_start":203,"line_end":203,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs","byte_start":8884,"byte_end":8905,"line_start":203,"line_end":204,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: unused import: `windows::*`\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs:203:9\n    |\n203 | pub use windows::*;\n    |         ^^^^^^^^^^\n    |\n    = note: `#[warn(unused_imports)]` on by default\n\n"}
2025-09-07T17:04:50.0378770Z D 25/09/07 17:04:23.937 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":295,"line_start":15,"line_end":15,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":280,"line_start":15,"line_end":15,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `fmt::Write + 'a`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":295,"line_start":15,"line_end":15,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":"T","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":265,"byte_end":265,"line_start":15,"line_end":15,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":", T: fmt::Write + 'a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n  --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:15:23\n   |\n15 | impl<'a> AnyWrite for fmt::Write + 'a {\n   |                       ^^^^^^^^^^^^^^^\n   |\n   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n   = note: `#[warn(bare_trait_objects)]` on by default\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n   |\n15 | impl<'a> AnyWrite for \u001b[38;5;10mdyn fmt::Write + 'a {\n   |                       \u001b[38;5;10m+++\n\u001b[38;5;14mhelp: alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `fmt::Write + 'a`\n   |\n15 - impl<'a> AnyWrite for fmt::Write + 'a {\n15 \u001b[38;5;10m+ impl<'a\u001b[38;5;10m, T: fmt::Write + 'a> AnyWrite for \u001b[38;5;10mT {\n   |\n\n"}
2025-09-07T17:04:50.0390609Z D 25/09/07 17:04:23.938 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":647,"line_start":29,"line_end":29,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":633,"line_start":29,"line_end":29,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `io::Write + 'a`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":647,"line_start":29,"line_end":29,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":"T","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":618,"byte_end":618,"line_start":29,"line_end":29,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":", T: io::Write + 'a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n  --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:29:23\n   |\n29 | impl<'a> AnyWrite for io::Write + 'a {\n   |                       ^^^^^^^^^^^^^^\n   |\n   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n   |\n29 | impl<'a> AnyWrite for \u001b[38;5;10mdyn io::Write + 'a {\n   |                       \u001b[38;5;10m+++\n\u001b[38;5;14mhelp: alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `io::Write + 'a`\n   |\n29 - impl<'a> AnyWrite for io::Write + 'a {\n29 \u001b[38;5;10m+ impl<'a\u001b[38;5;10m, T: io::Write + 'a> AnyWrite for \u001b[38;5;10mT {\n   |\n\n"}
2025-09-07T17:04:50.0398157Z D 25/09/07 17:04:23.938 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5472,"byte_end":5482,"line_start":171,"line_end":171,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5472,"byte_end":5472,"line_start":171,"line_end":171,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:171:21\n    |\n171 |         let f: &mut fmt::Write = f;\n    |                     ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n171 |         let f: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0405625Z D 25/09/07 17:04:23.938 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5797,"byte_end":5807,"line_start":183,"line_end":183,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5797,"byte_end":5797,"line_start":183,"line_end":183,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:183:29\n    |\n183 |                 let f: &mut fmt::Write = f;\n    |                             ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n183 |                 let f: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                             \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0413031Z D 25/09/07 17:04:23.941 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5933,"byte_end":5943,"line_start":187,"line_end":187,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5933,"byte_end":5933,"line_start":187,"line_end":187,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:187:29\n    |\n187 |                 let f: &mut fmt::Write = f;\n    |                             ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n187 |                 let f: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                             \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0420537Z D 25/09/07 17:04:23.942 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":6267,"byte_end":6277,"line_start":200,"line_end":200,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":6267,"byte_end":6267,"line_start":200,"line_end":200,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:200:21\n    |\n200 |         let f: &mut fmt::Write = f;\n    |                     ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n200 |         let f: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0427971Z D 25/09/07 17:04:23.942 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":5742,"byte_end":5752,"line_start":184,"line_end":184,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":5742,"byte_end":5742,"line_start":184,"line_end":184,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:184:21\n    |\n184 |         let w: &mut fmt::Write = f;\n    |                     ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n184 |         let w: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0435364Z D 25/09/07 17:04:23.942 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6067,"byte_end":6076,"line_start":193,"line_end":193,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6067,"byte_end":6067,"line_start":193,"line_end":193,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:193:21\n    |\n193 |         let w: &mut io::Write = w;\n    |                     ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n193 |         let w: &mut \u001b[38;5;10mdyn io::Write = w;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0442907Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6672,"byte_end":6682,"line_start":212,"line_end":212,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6672,"byte_end":6672,"line_start":212,"line_end":212,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:212:21\n    |\n212 |         let f: &mut fmt::Write = f;\n    |                     ^^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n212 |         let f: &mut \u001b[38;5;10mdyn fmt::Write = f;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0450296Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":7022,"byte_end":7031,"line_start":222,"line_end":222,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":7022,"byte_end":7022,"line_start":222,"line_end":222,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"warning: trait objects without an explicit `dyn` are deprecated\n   --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:222:21\n    |\n222 |         let w: &mut io::Write = w;\n    |                     ^^^^^^^^^\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n\u001b[38;5;14mhelp: if this is a dyn-compatible trait, use `dyn`\n    |\n222 |         let w: &mut \u001b[38;5;10mdyn io::Write = w;\n    |                     \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0450996Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta","emit":"metadata"}
2025-09-07T17:04:50.0451344Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 rustc wrote /tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta
2025-09-07T17:04:50.0451923Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib","emit":"link"}
2025-09-07T17:04:50.0452311Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 rustc wrote /tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib
2025-09-07T17:04:50.0452983Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 ✖ {"$message_type":"diagnostic","message":"12 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"warning: 12 warnings emitted\n\n"}
2025-09-07T17:04:50.0453205Z D 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 Terminating ✖ task
2025-09-07T17:04:50.0453521Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 Suggested cargo-green-specific config: envs:0 libs:0
2025-09-07T17:04:50.0453681Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 rustc wrote 3 files:
2025-09-07T17:04:50.0454602Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 metadata for "/tmp/clis-dbcc_2-2-1/release/deps/ansi_term-320ef4b8ee2e57f9.d": Ok("created:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 872279234 }) accessed:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 292280285 }) modified:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 292280285 })")
2025-09-07T17:04:50.0455494Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 metadata for "/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta": Ok("created:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 872279234 }) accessed:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 402280082 }) modified:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 402280082 })")
2025-09-07T17:04:50.0456375Z I 25/09/07 17:04:23.943 L ansi_term 0.11.0-320ef4b8ee2e57f9 metadata for "/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib": Ok("created:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 872279234 }) accessed:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 585279746 }) modified:Ok(SystemTime { tv_sec: 1757264663, tv_nsec: 585279746 })")
2025-09-07T17:04:50.0456758Z I 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 re-opening (RW) crate's md /tmp/clis-dbcc_2-2-1/release/ansi_term-320ef4b8ee2e57f9.toml
2025-09-07T17:04:50.0457063Z I 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 opening (RW) Md /tmp/clis-dbcc_2-2-1/release/ansi_term-320ef4b8ee2e57f9.toml
2025-09-07T17:04:50.0457317Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ this = "320ef4b8ee2e57f9"
2025-09-07T17:04:50.0457698Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ writes = [
2025-09-07T17:04:50.0457998Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     "deps/ansi_term-320ef4b8ee2e57f9.d",
2025-09-07T17:04:50.0458317Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     "deps/libansi_term-320ef4b8ee2e57f9.rmeta",
2025-09-07T17:04:50.0458618Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     "deps/libansi_term-320ef4b8ee2e57f9.rlib",
2025-09-07T17:04:50.0458807Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ ]
2025-09-07T17:04:50.0459017Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ stderr = [
2025-09-07T17:04:50.0459608Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/ansi_term-320ef4b8ee2e57f9.d","emit":"dep-info"}',
2025-09-07T17:04:50.0466951Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"associated type `wstr` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":64,"byte_end":68,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":64,"byte_end":68,"line_start":6,"line_end":6,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    type wstr: ?Sized;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"Wstr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated type `wstr` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type wstr: ?Sized;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case (notice the capitalization): `Wstr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}',
2025-09-07T17:04:50.0473830Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"unused import: `windows::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs","byte_start":8892,"byte_end":8902,"line_start":203,"line_end":203,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs","byte_start":8884,"byte_end":8905,"line_start":203,"line_end":204,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `windows::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs:203:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use windows::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
2025-09-07T17:04:50.0490883Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '''{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":295,"line_start":15,"line_end":15,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":280,"line_start":15,"line_end":15,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `fmt::Write + 'a`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":280,"byte_end":295,"line_start":15,"line_end":15,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":"T","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":265,"byte_end":265,"line_start":15,"line_end":15,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for fmt::Write + 'a {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":", T: fmt::Write + 'a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:15:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a> AnyWrite for fmt::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `fmt::Write + 'a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;9mfmt::Write + 'a\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<'a\u001b[0m\u001b[0m\u001b[38;5;10m, T: fmt::Write + 'a\u001b[0m\u001b[0m> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mT\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}''',
2025-09-07T17:04:50.0506992Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '''{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":647,"line_start":29,"line_end":29,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":633,"line_start":29,"line_end":29,"column_start":23,"column_end":23,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":23}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `io::Write + 'a`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":633,"byte_end":647,"line_start":29,"line_end":29,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":"T","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs","byte_start":618,"byte_end":618,"line_start":29,"line_end":29,"column_start":8,"column_end":8,"is_primary":true,"text":[{"text":"impl<'a> AnyWrite for io::Write + 'a {","highlight_start":8,"highlight_end":8}],"label":null,"suggested_replacement":", T: io::Write + 'a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/write.rs:29:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a> AnyWrite for io::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write + 'a {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: alternatively use a blanket implementation to implement `AnyWrite` for all types that also implement `io::Write + 'a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mimpl<'a> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;9mio::Write + 'a\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mimpl<'a\u001b[0m\u001b[0m\u001b[38;5;10m, T: io::Write + 'a\u001b[0m\u001b[0m> AnyWrite for \u001b[0m\u001b[0m\u001b[38;5;10mT\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}''',
2025-09-07T17:04:50.0517577Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5472,"byte_end":5482,"line_start":171,"line_end":171,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5472,"byte_end":5472,"line_start":171,"line_end":171,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:171:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0528012Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5797,"byte_end":5807,"line_start":183,"line_end":183,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5797,"byte_end":5797,"line_start":183,"line_end":183,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:183:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0538472Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5933,"byte_end":5943,"line_start":187,"line_end":187,"column_start":29,"column_end":39,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":5933,"byte_end":5933,"line_start":187,"line_end":187,"column_start":29,"column_end":29,"is_primary":true,"text":[{"text":"                let f: &mut fmt::Write = f;","highlight_start":29,"highlight_end":29}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:187:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0548974Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":6267,"byte_end":6277,"line_start":200,"line_end":200,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs","byte_start":6267,"byte_end":6267,"line_start":200,"line_end":200,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/ansi.rs:200:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0559449Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":5742,"byte_end":5752,"line_start":184,"line_end":184,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":5742,"byte_end":5742,"line_start":184,"line_end":184,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:184:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let w: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0569966Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6067,"byte_end":6076,"line_start":193,"line_end":193,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6067,"byte_end":6067,"line_start":193,"line_end":193,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:193:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0580442Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6672,"byte_end":6682,"line_start":212,"line_end":212,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":6672,"byte_end":6672,"line_start":212,"line_end":212,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let f: &mut fmt::Write = f;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:212:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let f: &mut fmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let f: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mfmt::Write = f;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0590883Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":7022,"byte_end":7031,"line_start":222,"line_end":222,"column_start":21,"column_end":30,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs","byte_start":7022,"byte_end":7022,"line_start":222,"line_end":222,"column_start":21,"column_end":21,"is_primary":true,"text":[{"text":"        let w: &mut io::Write = w;","highlight_start":21,"highlight_end":21}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/display.rs:222:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let w: &mut io::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let w: &mut \u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mio::Write = w;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}',
2025-09-07T17:04:50.0591604Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta","emit":"metadata"}',
2025-09-07T17:04:50.0592197Z T 25/09/07 17:04:23.944 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib","emit":"link"}',
2025-09-07T17:04:50.0593080Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     '{"$message_type":"diagnostic","message":"12 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 12 warnings emitted\u001b[0m\n\n"}',
2025-09-07T17:04:50.0593361Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ ]
2025-09-07T17:04:50.0593564Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ [[stages]]
2025-09-07T17:04:50.0593782Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ name = "rust-base"
2025-09-07T17:04:50.0594554Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
2025-09-07T17:04:50.0594755Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ [[stages]]
2025-09-07T17:04:50.0595049Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ name = "cratesio-ansi_term-0.11.0"
2025-09-07T17:04:50.0595258Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ script = '''
2025-09-07T17:04:50.0595571Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ FROM scratch AS cratesio-ansi_term-0.11.0
2025-09-07T17:04:50.0596162Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ ADD --chmod=0664 --unpack=true --checksum=sha256:ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b \
2025-09-07T17:04:50.0596571Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯   https://static.crates.io/crates/ansi_term/ansi_term-0.11.0.crate /'''
2025-09-07T17:04:50.0596775Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ [[stages]]
2025-09-07T17:04:50.0597097Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ name = "dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9"
2025-09-07T17:04:50.0597300Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ script = '''
2025-09-07T17:04:50.0597760Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ FROM rust-base AS dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9
2025-09-07T17:04:50.0598078Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
2025-09-07T17:04:50.0598464Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
2025-09-07T17:04:50.0598653Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ RUN \
2025-09-07T17:04:50.0599368Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯   --mount=from=cratesio-ansi_term-0.11.0,source=/ansi_term-0.11.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0 \
2025-09-07T17:04:50.0599730Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
2025-09-07T17:04:50.0600055Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯     env CARGO="$(which cargo)" \
2025-09-07T17:04:50.0600338Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_CRATE_NAME="ansi_term" \
2025-09-07T17:04:50.0600942Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0" \
2025-09-07T17:04:50.0601534Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/Cargo.toml" \
2025-09-07T17:04:50.0602094Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_AUTHORS="ogham@bsago.me:Ryan Scheel (Havvy) <ryan.havvy@gmail.com>:Josh Triplett <josh@joshtriplett.org>" \
2025-09-07T17:04:50.0602567Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_DESCRIPTION="Library for ANSI terminal colours and styles (bold, underline)" \
2025-09-07T17:04:50.0602956Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_HOMEPAGE="https://github.com/ogham/rust-ansi-term" \
2025-09-07T17:04:50.0603227Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_LICENSE="MIT" \
2025-09-07T17:04:50.0603559Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_LICENSE_FILE= \
2025-09-07T17:04:50.0603832Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_NAME="ansi_term" \
2025-09-07T17:04:50.0604118Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_README="README.md" \
2025-09-07T17:04:50.0604371Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_REPOSITORY= \
2025-09-07T17:04:50.0604631Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_RUST_VERSION= \
2025-09-07T17:04:50.0604899Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_VERSION="0.11.0" \
2025-09-07T17:04:50.0605177Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_VERSION_MAJOR="0" \
2025-09-07T17:04:50.0605457Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_VERSION_MINOR="11" \
2025-09-07T17:04:50.0605733Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_VERSION_PATCH="0" \
2025-09-07T17:04:50.0605993Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGO_PKG_VERSION_PRE= \
2025-09-07T17:04:50.0606218Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         CARGOGREEN=1 \
2025-09-07T17:04:50.0608633Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯       rustc '--crate-name' 'ansi_term' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=b83c48034e26d540' '-C' 'extra-filename=-320ef4b8ee2e57f9' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs \
2025-09-07T17:04:50.0609138Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         1> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-320ef4b8ee2e57f9-stdout) \
2025-09-07T17:04:50.0609557Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         2> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-320ef4b8ee2e57f9-stderr >&2) \
2025-09-07T17:04:50.0609971Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯         || echo $? >/tmp/clis-dbcc_2-2-1/release/deps/out-320ef4b8ee2e57f9-errcode'''
2025-09-07T17:04:50.0610171Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ [[stages]]
2025-09-07T17:04:50.0610489Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ name = "out-320ef4b8ee2e57f9"
2025-09-07T17:04:50.0610703Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ script = """
2025-09-07T17:04:50.0611037Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ FROM scratch AS out-320ef4b8ee2e57f9
2025-09-07T17:04:50.0611594Z T 25/09/07 17:04:23.945 L ansi_term 0.11.0-320ef4b8ee2e57f9 ❯ COPY --from=dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9 /tmp/clis-dbcc_2-2-1/release/deps/*-320ef4b8ee2e57f9* /"""
2025-09-07T17:04:50.0618399Z I 25/09/07 17:04:23.956 L vec_map 0.8.2-3fc8ab5befc6e8f4 cargo-green@0.17.0 original args: ["--crate-name", "vec_map", "--edition=2015", "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/src/lib.rs", "--error-format=json", "--json=diagnostic-rendered-ansi,artifacts,future-incompat", "--crate-type", "lib", "--emit=dep-info,metadata,link", "-C", "opt-level=3", "-C", "embed-bitcode=no", "--check-cfg", "cfg(docsrs,test)", "--check-cfg", "cfg(feature, values(\"eders\", \"serde\"))", "-C", "metadata=e3c2dfe37d7693e9", "-C", "extra-filename=-3fc8ab5befc6e8f4", "--out-dir", "/tmp/clis-dbcc_2-2-1/release/deps", "-C", "strip=debuginfo", "-L", "dependency=/tmp/clis-dbcc_2-2-1/release/deps", "--cap-lints", "warn"] *** st=RustcArgs { crate_type: "lib", emit: "dep-info,metadata,link", externs: {}, extrafn: "-3fc8ab5befc6e8f4", incremental: None, input: "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/src/lib.rs", out_dir: "/tmp/clis-dbcc_2-2-1/release/deps", target_path: "/tmp/clis-dbcc_2-2-1/release" } green=Green { runner: Docker, runner_envs: {}, incremental: false, builder: Builder { name: Some("supergreen"), driver: Some(DockerContainer), image: Some(ImageUri("docker-image://docker.io/moby/buildkit:latest@sha256:6eceb8971ce4fceb3daca562832642706238b7eea72941fcf9896c93c3c4a53e")) }, syntax: ImageUri("docker-image://docker.io/docker/dockerfile:1@sha256:38387523653efa0039f8e1c89bb74a30504e76ee9f565e25c9a09841f9427b05"), cache_from_images: [], cache_to_images: [], cache_images: [], cache_from: ["type=gha"], cache_to: ["type=gha,mode=max"], final_path: Some("/home/runner/work/supergreen/supergreen/recipes/dbcc@2.2.1.Dockerfile"), final_path_nonprimary: false, image: BaseImage { with_network: None, base_image: ImageUri("docker-image://docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944"), base_image_inline: Some("FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base") }, set_envs: ["TYPENUM_BUILD_CONSTS", "TYPENUM_BUILD_OP"], add: Add { apk: [], apt: [], apt_get: [] } }
2025-09-07T17:04:50.0618949Z I 25/09/07 17:04:23.957 L vec_map 0.8.2-3fc8ab5befc6e8f4 opening (RO) crate tarball /home/runner/.cargo/registry/cache/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2.crate
2025-09-07T17:04:50.0619367Z D 25/09/07 17:04:23.957 L vec_map 0.8.2-3fc8ab5befc6e8f4 crate sha256 for cratesio-vec_map-0.8.2: f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191
2025-09-07T17:04:50.0619882Z I 25/09/07 17:04:23.957 L vec_map 0.8.2-3fc8ab5befc6e8f4 picked dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4 for /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/src/lib.rs
2025-09-07T17:04:50.0620115Z I 25/09/07 17:04:23.957 L vec_map 0.8.2-3fc8ab5befc6e8f4 loading 0 build contexts
2025-09-07T17:04:50.0620276Z I 25/09/07 17:04:23.957 L vec_map 0.8.2-3fc8ab5befc6e8f4 extern_md_paths: 0 []
2025-09-07T17:04:50.0620478Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_CRATE_NAME="vec_map"
2025-09-07T17:04:50.0620714Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 not forwarding env: CARGO_HOME=/home/runner/.cargo
2025-09-07T17:04:50.0621046Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 not forwarding env: CARGO_MAKEFLAGS=-j --jobserver-fds=8,11 --jobserver-auth=8,11
2025-09-07T17:04:50.0621519Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2"
2025-09-07T17:04:50.0622065Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vec_map-0.8.2/Cargo.toml"
2025-09-07T17:04:50.0624813Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Jorge Aparicio <japaricious@gmail.com>:Alexis Beingessner <a.beingessner@gmail.com>:Brian Anderson <>:tbu- <>:Manish Goregaokar <>:Aaron Turon <aturon@mozilla.com>:Adolfo Ochagavía <>:Niko Matsakis <>:Steven Fackler <>:Chase Southwood <csouth3@illinois.edu>:Eduard Burtescu <>:Florian Wilkens <>:Félix Raimundo <>:Tibor Benke <>:Markus Siemens <markus@m-siemens.de>:Josh Branchaud <jbranchaud@gmail.com>:Huon Wilson <dbau.pp@gmail.com>:Corey Farwell <coref@rwell.org>:Aaron Liblong <>:Nick Cameron <nrc@ncameron.org>:Patrick Walton <pcwalton@mimiga.net>:Felix S Klock II <>:Andrew Paseltiner <apaseltiner@gmail.com>:Sean McArthur <sean.monstar@gmail.com>:Vadim Petrochenkov <>"
2025-09-07T17:04:50.0625166Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_DESCRIPTION="A simple map based on a vector for small integer keys"
2025-09-07T17:04:50.0625519Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_HOMEPAGE="https://github.com/contain-rs/vec-map"
2025-09-07T17:04:50.0625749Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_LICENSE="MIT/Apache-2.0"
2025-09-07T17:04:50.0625942Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_LICENSE_FILE=
2025-09-07T17:04:50.0626132Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_NAME="vec_map"
2025-09-07T17:04:50.0626342Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_README="README.md"
2025-09-07T17:04:50.0626641Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_REPOSITORY="https://github.com/contain-rs/vec-map"
2025-09-07T17:04:50.0626834Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_RUST_VERSION=
2025-09-07T17:04:50.0627029Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_VERSION="0.8.2"
2025-09-07T17:04:50.0627233Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_VERSION_MAJOR="0"
2025-09-07T17:04:50.0627428Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_VERSION_MINOR="8"
2025-09-07T17:04:50.0627734Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_VERSION_PATCH="2"
2025-09-07T17:04:50.0627924Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 env is set: CARGO_PKG_VERSION_PRE=
2025-09-07T17:04:50.0628181Z D 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 not forwarding env: CARGO_TARGET_DIR=/tmp/clis-dbcc_2-2-1
2025-09-07T17:04:50.0628488Z I 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 opening (RW) Md /tmp/clis-dbcc_2-2-1/release/vec_map-3fc8ab5befc6e8f4.toml
2025-09-07T17:04:50.0628739Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ this = "3fc8ab5befc6e8f4"
2025-09-07T17:04:50.0629019Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ [[stages]]
2025-09-07T17:04:50.0629234Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ name = "rust-base"
2025-09-07T17:04:50.0629987Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
2025-09-07T17:04:50.0630180Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ [[stages]]
2025-09-07T17:04:50.0630438Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ name = "cratesio-vec_map-0.8.2"
2025-09-07T17:04:50.0630695Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ script = '''
2025-09-07T17:04:50.0630987Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM scratch AS cratesio-vec_map-0.8.2
2025-09-07T17:04:50.0631618Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ ADD --chmod=0664 --unpack=true --checksum=sha256:f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191 \
2025-09-07T17:04:50.0632018Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯   https://static.crates.io/crates/vec_map/vec_map-0.8.2.crate /'''
2025-09-07T17:04:50.0632204Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ [[stages]]
2025-09-07T17:04:50.0632514Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ name = "dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4"
2025-09-07T17:04:50.0632709Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ script = '''
2025-09-07T17:04:50.0633040Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM rust-base AS dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4
2025-09-07T17:04:50.0633354Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
2025-09-07T17:04:50.0633642Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
2025-09-07T17:04:50.0633838Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ RUN \
2025-09-07T17:04:50.0634553Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯   --mount=from=cratesio-vec_map-0.8.2,source=/vec_map-0.8.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2 \
2025-09-07T17:04:50.0634909Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
2025-09-07T17:04:50.0635160Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯     env CARGO="$(which cargo)" \
2025-09-07T17:04:50.0635432Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_CRATE_NAME="vec_map" \
2025-09-07T17:04:50.0635955Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2" \
2025-09-07T17:04:50.0636527Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/Cargo.toml" \
2025-09-07T17:04:50.0639300Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Jorge Aparicio <japaricious@gmail.com>:Alexis Beingessner <a.beingessner@gmail.com>:Brian Anderson <>:tbu- <>:Manish Goregaokar <>:Aaron Turon <aturon@mozilla.com>:Adolfo Ochagavía <>:Niko Matsakis <>:Steven Fackler <>:Chase Southwood <csouth3@illinois.edu>:Eduard Burtescu <>:Florian Wilkens <>:Félix Raimundo <>:Tibor Benke <>:Markus Siemens <markus@m-siemens.de>:Josh Branchaud <jbranchaud@gmail.com>:Huon Wilson <dbau.pp@gmail.com>:Corey Farwell <coref@rwell.org>:Aaron Liblong <>:Nick Cameron <nrc@ncameron.org>:Patrick Walton <pcwalton@mimiga.net>:Felix S Klock II <>:Andrew Paseltiner <apaseltiner@gmail.com>:Sean McArthur <sean.monstar@gmail.com>:Vadim Petrochenkov <>" \
2025-09-07T17:04:50.0639751Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_DESCRIPTION="A simple map based on a vector for small integer keys" \
2025-09-07T17:04:50.0640196Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_HOMEPAGE="https://github.com/contain-rs/vec-map" \
2025-09-07T17:04:50.0640489Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_LICENSE="MIT/Apache-2.0" \
2025-09-07T17:04:50.0640745Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_LICENSE_FILE= \
2025-09-07T17:04:50.0640998Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_NAME="vec_map" \
2025-09-07T17:04:50.0641267Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_README="README.md" \
2025-09-07T17:04:50.0641701Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_REPOSITORY="https://github.com/contain-rs/vec-map" \
2025-09-07T17:04:50.0641960Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_RUST_VERSION= \
2025-09-07T17:04:50.0642299Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION="0.8.2" \
2025-09-07T17:04:50.0642580Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_MAJOR="0" \
2025-09-07T17:04:50.0642860Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_MINOR="8" \
2025-09-07T17:04:50.0643127Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_PATCH="2" \
2025-09-07T17:04:50.0643380Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_PRE= \
2025-09-07T17:04:50.0643602Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGOGREEN=1 \
2025-09-07T17:04:50.0645888Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯       rustc '--crate-name' 'vec_map' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("eders", "serde"))' '-C' 'metadata=e3c2dfe37d7693e9' '-C' 'extra-filename=-3fc8ab5befc6e8f4' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/src/lib.rs \
2025-09-07T17:04:50.0646368Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         1> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-stdout) \
2025-09-07T17:04:50.0646790Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         2> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-stderr >&2) \
2025-09-07T17:04:50.0647197Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         || echo $? >/tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-errcode'''
2025-09-07T17:04:50.0647393Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ [[stages]]
2025-09-07T17:04:50.0647768Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ name = "out-3fc8ab5befc6e8f4"
2025-09-07T17:04:50.0647979Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ script = """
2025-09-07T17:04:50.0648259Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM scratch AS out-3fc8ab5befc6e8f4
2025-09-07T17:04:50.0648795Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ COPY --from=dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4 /tmp/clis-dbcc_2-2-1/release/deps/*-3fc8ab5befc6e8f4* /"""
2025-09-07T17:04:50.0649160Z I 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 opening (RW) containerfile /tmp/clis-dbcc_2-2-1/release/vec_map-3fc8ab5befc6e8f4.Dockerfile
2025-09-07T17:04:50.0649536Z I 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 dockerfile: /tmp/clis-dbcc_2-2-1/release/vec_map-3fc8ab5befc6e8f4.Dockerfile
2025-09-07T17:04:50.0650106Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ # syntax=docker.io/docker/dockerfile:1@sha256:38387523653efa0039f8e1c89bb74a30504e76ee9f565e25c9a09841f9427b05
2025-09-07T17:04:50.0650409Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ # check=error=true
2025-09-07T17:04:50.0650786Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ # Generated by https://github.com/fenollp/supergreen v0.17.0
2025-09-07T17:04:50.0651522Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base
2025-09-07T17:04:50.0651808Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM scratch AS cratesio-vec_map-0.8.2
2025-09-07T17:04:50.0652447Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ ADD --chmod=0664 --unpack=true --checksum=sha256:f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191 \
2025-09-07T17:04:50.0652826Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯   https://static.crates.io/crates/vec_map/vec_map-0.8.2.crate /
2025-09-07T17:04:50.0653247Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM rust-base AS dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4
2025-09-07T17:04:50.0653560Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
2025-09-07T17:04:50.0653857Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
2025-09-07T17:04:50.0654046Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ RUN \
2025-09-07T17:04:50.0654704Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯   --mount=from=cratesio-vec_map-0.8.2,source=/vec_map-0.8.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2 \
2025-09-07T17:04:50.0655061Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
2025-09-07T17:04:50.0655312Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯     env CARGO="$(which cargo)" \
2025-09-07T17:04:50.0655658Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_CRATE_NAME="vec_map" \
2025-09-07T17:04:50.0656183Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2" \
2025-09-07T17:04:50.0656755Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/Cargo.toml" \
2025-09-07T17:04:50.0659758Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Jorge Aparicio <japaricious@gmail.com>:Alexis Beingessner <a.beingessner@gmail.com>:Brian Anderson <>:tbu- <>:Manish Goregaokar <>:Aaron Turon <aturon@mozilla.com>:Adolfo Ochagavía <>:Niko Matsakis <>:Steven Fackler <>:Chase Southwood <csouth3@illinois.edu>:Eduard Burtescu <>:Florian Wilkens <>:Félix Raimundo <>:Tibor Benke <>:Markus Siemens <markus@m-siemens.de>:Josh Branchaud <jbranchaud@gmail.com>:Huon Wilson <dbau.pp@gmail.com>:Corey Farwell <coref@rwell.org>:Aaron Liblong <>:Nick Cameron <nrc@ncameron.org>:Patrick Walton <pcwalton@mimiga.net>:Felix S Klock II <>:Andrew Paseltiner <apaseltiner@gmail.com>:Sean McArthur <sean.monstar@gmail.com>:Vadim Petrochenkov <>" \
2025-09-07T17:04:50.0660206Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_DESCRIPTION="A simple map based on a vector for small integer keys" \
2025-09-07T17:04:50.0660581Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_HOMEPAGE="https://github.com/contain-rs/vec-map" \
2025-09-07T17:04:50.0660879Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_LICENSE="MIT/Apache-2.0" \
2025-09-07T17:04:50.0661136Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_LICENSE_FILE= \
2025-09-07T17:04:50.0661398Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_NAME="vec_map" \
2025-09-07T17:04:50.0661755Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_README="README.md" \
2025-09-07T17:04:50.0662132Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_REPOSITORY="https://github.com/contain-rs/vec-map" \
2025-09-07T17:04:50.0662389Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_RUST_VERSION= \
2025-09-07T17:04:50.0662647Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION="0.8.2" \
2025-09-07T17:04:50.0662921Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_MAJOR="0" \
2025-09-07T17:04:50.0663240Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_MINOR="8" \
2025-09-07T17:04:50.0663507Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_PATCH="2" \
2025-09-07T17:04:50.0663816Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGO_PKG_VERSION_PRE= \
2025-09-07T17:04:50.0664051Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         CARGOGREEN=1 \
2025-09-07T17:04:50.0666297Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯       rustc '--crate-name' 'vec_map' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("eders", "serde"))' '-C' 'metadata=e3c2dfe37d7693e9' '-C' 'extra-filename=-3fc8ab5befc6e8f4' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/src/lib.rs \
2025-09-07T17:04:50.0666710Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         1> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-stdout) \
2025-09-07T17:04:50.0667189Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         2> >(tee    /tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-stderr >&2) \
2025-09-07T17:04:50.0667695Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯         || echo $? >/tmp/clis-dbcc_2-2-1/release/deps/out-3fc8ab5befc6e8f4-errcode
2025-09-07T17:04:50.0667977Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ FROM scratch AS out-3fc8ab5befc6e8f4
2025-09-07T17:04:50.0668496Z T 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 ❯ COPY --from=dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4 /tmp/clis-dbcc_2-2-1/release/deps/*-3fc8ab5befc6e8f4* /
2025-09-07T17:04:50.0669553Z I 25/09/07 17:04:23.958 L vec_map 0.8.2-3fc8ab5befc6e8f4 Starting `BUILDX_BUILDER="supergreen" DOCKER_BUILDKIT="1" docker build --cache-from=type=gha --cache-to=type=gha,mode=max --network=none --platform=local --pull=false --target=out-3fc8ab5befc6e8f4 --output=type=local,dest=/tmp/clis-dbcc_2-2-1/release/deps - </tmp/clis-dbcc_2-2-1/release/vec_map-3fc8ab5befc6e8f4.Dockerfile`
2025-09-07T17:04:50.0669746Z I 25/09/07 17:04:23.960 L vec_map 0.8.2-3fc8ab5befc6e8f4 Started as pid=9496 in 1.492706ms

---

2025-09-07T17:04:50.0318040Z I 25/09/07 17:04:23.557 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.111 + cat ./rustc-toolchain ./rustc-toolchain.toml
2025-09-07T17:04:50.0318873Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.113 + true
2025-09-07T17:04:50.0319103Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.120 ++ which cargo
2025-09-07T17:04:50.0324397Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.123 + env CARGO=/usr/local/cargo/bin/cargo CARGO_CRATE_NAME=bitflags CARGO_MANIFEST_DIR=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0 CARGO_MANIFEST_PATH=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/Cargo.toml 'CARGO_PKG_AUTHORS=The Rust Project Developers' 'CARGO_PKG_DESCRIPTION=A macro to generate structures which behave like bitflags.\n' CARGO_PKG_HOMEPAGE=https://github.com/rust-lang/bitflags CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE= CARGO_PKG_NAME=bitflags CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY=https://github.com/rust-lang/bitflags CARGO_PKG_RUST_VERSION= CARGO_PKG_VERSION=0.4.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE= CARGOGREEN=1 rustc --crate-name bitflags --edition 2015 --error-format json --json diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("no_std"))' -C metadata=c40fd9a620d26196 -C extra-filename=-e976848f96abbbd4 --out-dir /tmp/clis-dbcc_2-2-1/release/deps -C strip=debuginfo -L dependency=/tmp/clis-dbcc_2-2-1/release/deps --cap-lints warn /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs
2025-09-07T17:04:50.0325087Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.124 ++ tee /tmp/clis-dbcc_2-2-1/release/deps/out-e976848f96abbbd4-stdout
2025-09-07T17:04:50.0325495Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.125 ++ tee /tmp/clis-dbcc_2-2-1/release/deps/out-e976848f96abbbd4-stderr
2025-09-07T17:04:50.0326300Z I 25/09/07 17:04:23.704 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.258 {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/bitflags-e976848f96abbbd4.d","emit":"dep-info"}
2025-09-07T17:04:50.0338456Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.259 {"$message_type":"diagnostic","message":"extern crate `std` is private and cannot be re-exported","code":{"code":"E0365","explanation":"Private modules cannot be publicly re-exported. This error indicates that you\nattempted to `pub use` a module that was not itself public.\n\nErroneous code example:\n\n```compile_fail,E0365\nmod foo {\n    pub const X: u32 = 1;\n}\n\npub use foo as foo2;\n\nfn main() {}\n```\n\nThe solution to this problem is to ensure that the module that you are\nre-exporting is itself marked with `pub`:\n\n```\npub mod foo {\n    pub const X: u32 = 1;\n}\n\npub use foo as foo2;\n\nfn main() {}\n```\n\nSee the [Use Declarations][use-declarations] section of the reference for\nmore information on this topic.\n\n[use-declarations]: https://doc.rust-lang.org/reference/items/use-declarations.html\n"},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs","byte_start":1046,"byte_end":1059,"line_start":25,"line_end":25,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"pub use std as __core;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #127909 <https://github.com/rust-lang/rust/issues/127909>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(pub_use_of_private_extern_crate)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider making the `extern crate` item publicly accessible","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"pub ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"warning[E0365]: extern crate `std` is private and cannot be re-exported\n  --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs:25:9\n   |\n25 | pub use std as __core;\n   |         ^^^^^^^^^^^^^\n   |\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #127909 <https://github.com/rust-lang/rust/issues/127909>\n   = note: `#[warn(pub_use_of_private_extern_crate)]` on by default\n\u001b[38;5;14mhelp: consider making the `extern crate` item publicly accessible\n   |\n1  | \u001b[38;5;10mpub // Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n   | \u001b[38;5;10m+++\n\n"}
2025-09-07T17:04:50.0339262Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.262 {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rmeta","emit":"metadata"}
2025-09-07T17:04:50.0339956Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.276 {"$message_type":"artifact","artifact":"/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rlib","emit":"link"}
2025-09-07T17:04:50.0340694Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.276 {"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"warning: 1 warning emitted\n\n"}
2025-09-07T17:04:50.0341687Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.276 {"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0365`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"For more information about this error, try `rustc --explain E0365`.\n"}
2025-09-07T17:04:50.0351757Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 0.276 {"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"extern crate `std` is private and cannot be re-exported","code":{"code":"E0365","explanation":"Private modules cannot be publicly re-exported. This error indicates that you\nattempted to `pub use` a module that was not itself public.\n\nErroneous code example:\n\n```compile_fail,E0365\nmod foo {\n    pub const X: u32 = 1;\n}\n\npub use foo as foo2;\n\nfn main() {}\n```\n\nThe solution to this problem is to ensure that the module that you are\nre-exporting is itself marked with `pub`:\n\n```\npub mod foo {\n    pub const X: u32 = 1;\n}\n\npub use foo as foo2;\n\nfn main() {}\n```\n\nSee the [Use Declarations][use-declarations] section of the reference for\nmore information on this topic.\n\n[use-declarations]: https://doc.rust-lang.org/reference/items/use-declarations.html\n"},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs","byte_start":1046,"byte_end":1059,"line_start":25,"line_end":25,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"pub use std as __core;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #127909 <https://github.com/rust-lang/rust/issues/127909>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(pub_use_of_private_extern_crate)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider making the `extern crate` item publicly accessible","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"pub ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"warning[E0365]: extern crate `std` is private and cannot be re-exported\n  --> /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs:25:9\n   |\n25 | pub use std as __core;\n   |         ^^^^^^^^^^^^^\n   |\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #127909 <https://github.com/rust-lang/rust/issues/127909>\n   = note: `#[warn(pub_use_of_private_extern_crate)]` on by default\n\u001b[38;5;14mhelp: consider making the `extern crate` item publicly accessible\n   |\n1  | \u001b[38;5;10mpub // Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n   | \u001b[38;5;10m+++\n\n"}}]}
2025-09-07T17:04:50.0352181Z I 25/09/07 17:04:23.903 L bitflags 0.4.0-e976848f96abbbd4 ✖ #10 DONE 0.3s
2025-09-07T17:04:50.0670387Z I 25/09/07 17:04:24.020 L bitflags 0.4.0-e976848f96abbbd4 ✖ #11 [out-e976848f96abbbd4 1/1] COPY --from=dep-l-bitflags-0.4.0-e976848f96abbbd4 /tmp/clis-dbcc_2-2-1/release/deps/*-e976848f96abbbd4* /
2025-09-07T17:04:50.0670601Z I 25/09/07 17:04:24.094 L bitflags 0.4.0-e976848f96abbbd4 ✖ #11 DONE 0.0s
2025-09-07T17:04:50.0670866Z I 25/09/07 17:04:24.094 L bitflags 0.4.0-e976848f96abbbd4 ✖ #12 exporting to client directory
2025-09-07T17:04:50.0671124Z I 25/09/07 17:04:24.094 L bitflags 0.4.0-e976848f96abbbd4 ✖ #12 copying files 44.70kB done
2025-09-07T17:04:50.0671323Z I 25/09/07 17:04:24.094 L bitflags 0.4.0-e976848f96abbbd4 ✖ #12 DONE 0.0s
2025-09-07T17:04:50.0671535Z I 25/09/07 17:04:24.111 L bitflags 0.4.0-e976848f96abbbd4 build ran in 1.038744717s: exit status: 0
2025-09-07T17:04:50.0671925Z I 25/09/07 17:04:24.111 L bitflags 0.4.0-e976848f96abbbd4 Terminating task CACHED:3 DONE:9 ["dockerfile: 3.00kB", "context: 2B"]
2025-09-07T17:04:50.0672134Z D 25/09/07 17:04:24.111 L bitflags 0.4.0-e976848f96abbbd4 Reading ➤ file
2025-09-07T17:04:50.0672426Z D 25/09/07 17:04:24.112 L bitflags 0.4.0-e976848f96abbbd4 Time To First Line for task ➤: 67.646µs
2025-09-07T17:04:50.0672640Z D 25/09/07 17:04:24.112 L bitflags 0.4.0-e976848f96abbbd4 Terminating ➤ task
2025-09-07T17:04:50.0672843Z D 25/09/07 17:04:24.112 L bitflags 0.4.0-e976848f96abbbd4 Reading ✖ file
2025-09-07T17:04:50.0673120Z D 25/09/07 17:04:24.112 L bitflags 0.4.0-e976848f96abbbd4 Time To First Line for task ✖: 84.718µs

---

