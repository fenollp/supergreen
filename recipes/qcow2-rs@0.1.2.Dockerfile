# syntax=docker.io/docker/dockerfile:1@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d
# check=error=true
# Generated by https://github.com/fenollp/supergreen v0.12.0

FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base

FROM scratch AS cratesio-unicode-ident-1.0.12
ADD --chmod=0664 --checksum=sha256:3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b \
  https://static.crates.io/crates/unicode-ident/unicode-ident-1.0.12.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-unicode-ident-1.0.12-4c1dc76c11b3deb8
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-unicode-ident-1.0.12,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_ident" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="(MIT OR Apache-2.0) AND Unicode-DFS-2016" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-ident" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/unicode-ident" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="1.0.12" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="12" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_ident' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=2f113e6ba7735965' '-C' 'extra-filename=-4c1dc76c11b3deb8' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-4c1dc76c11b3deb8
COPY --from=dep-l-unicode-ident-1.0.12-4c1dc76c11b3deb8 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-4c1dc76c11b3deb8* /

FROM scratch AS cratesio-proc-macro2-1.0.72
ADD --chmod=0664 --checksum=sha256:a293318316cf6478ec1ad2a21c49390a8d5b5eae9fab736467d93fbc0edc29c5 \
  https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.72.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-proc-macro2-1.0.72-7c4c35625cab66f6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-proc-macro2-1.0.72,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.72 \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.72" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.72/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/proc-macro2" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.72" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="72" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/proc-macro2-12eb2c4288882a40/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'proc_macro2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' '-C' 'metadata=ca19a715e16069b2' '-C' 'extra-filename=-7c4c35625cab66f6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'unicode_ident=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' '--cfg' 'wrap_proc_macro' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.72/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7c4c35625cab66f6
COPY --from=dep-l-proc-macro2-1.0.72-7c4c35625cab66f6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7c4c35625cab66f6* /

FROM scratch AS cratesio-quote-1.0.33
ADD --chmod=0664 --checksum=sha256:5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae \
  https://static.crates.io/crates/quote/quote-1.0.33.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-quote-1.0.33-230bf5113558ae5c
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-quote-1.0.33,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.33 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="quote" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.33" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.33/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Quasi-quoting macro quote!(...)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="quote" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/quote" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.33" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="33" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'quote' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "proc-macro"))' '-C' 'metadata=02009dfd6c8468f9' '-C' 'extra-filename=-230bf5113558ae5c' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.33/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-230bf5113558ae5c
COPY --from=dep-l-quote-1.0.33-230bf5113558ae5c /tmp/clis-qcow2-rs_0-1-2/release/deps/*-230bf5113558ae5c* /

FROM scratch AS cratesio-syn-2.0.43
ADD --chmod=0664 --checksum=sha256:ee659fb5f3d355364e1f3e5bc10fb82068efbf824a1e9d1c9504244a6469ad53 \
  https://static.crates.io/crates/syn/syn-2.0.43.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-syn-2.0.43-09c08d3ded2362f6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-syn-2.0.43,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.43 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="syn" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.43" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.43/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Parser for Rust source code" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="syn" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/syn" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="2.0.43" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="43" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'syn' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="clone-impls"' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="full"' '--cfg' 'feature="parsing"' '--cfg' 'feature="printing"' '--cfg' 'feature="proc-macro"' '--cfg' 'feature="quote"' '--cfg' 'feature="visit-mut"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "test", "visit", "visit-mut"))' '-C' 'metadata=cdb62555c3ee5c31' '-C' 'extra-filename=-09c08d3ded2362f6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta' '--extern' 'unicode_ident=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.43/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-09c08d3ded2362f6
COPY --from=dep-l-syn-2.0.43-09c08d3ded2362f6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-09c08d3ded2362f6* /

FROM scratch AS cratesio-async-recursion-1.0.5
ADD --chmod=0664 --checksum=sha256:5fd55a5ba1179988837d24ab4c7cc8ed6efdeff578ede0416b4225a5fca35bd0 \
  https://static.crates.io/crates/async-recursion/async-recursion-1.0.5.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-async-recursion-1.0.5-c336562a05f16d22
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-async-recursion-1.0.5,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-recursion-1.0.5 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="async_recursion" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-recursion-1.0.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-recursion-1.0.5/Cargo.toml" \
        CARGO_PKG_AUTHORS="Robert Usher <266585+dcchut@users.noreply.github.com>" \
        CARGO_PKG_DESCRIPTION="Recursion for async functions" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="async-recursion" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dcchut/async-recursion" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.5" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'async_recursion' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=880cadbd6d89413e' '-C' 'extra-filename=-c336562a05f16d22' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-recursion-1.0.5/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-c336562a05f16d22
COPY --from=dep-p-async-recursion-1.0.5-c336562a05f16d22 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-c336562a05f16d22* /

FROM scratch AS cratesio-async-trait-0.1.76
ADD --chmod=0664 --checksum=sha256:531b97fb4cd3dfdce92c35dedbfdc1f0b9d8091c8ca943d6dae340ef5012d514 \
  https://static.crates.io/crates/async-trait/async-trait-0.1.76.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-async-trait-0.1.76-a5a31ac1f09098f3
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-async-trait-0.1.76,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.76 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="async_trait" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.76" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.76/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Type erasure for async trait methods" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="async-trait" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/async-trait" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.1.76" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="76" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/async-trait-d3e75f73383cb092/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'async_trait' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=01a728f04462b0c4' '-C' 'extra-filename=-a5a31ac1f09098f3' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.76/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a5a31ac1f09098f3
COPY --from=dep-p-async-trait-0.1.76-a5a31ac1f09098f3 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a5a31ac1f09098f3* /

FROM scratch AS cratesio-serde_derive-1.0.193
ADD --chmod=0664 --checksum=sha256:43576ca501357b9b071ac53cdc7da8ef0cbd9493d8df094cd821777ea6e894d3 \
  https://static.crates.io/crates/serde_derive/serde_derive-1.0.193.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-serde_derive-1.0.193-ca901d6d165172fe
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-serde_derive-1.0.193,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.193 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde_derive" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.193" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.193/Cargo.toml" \
        CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Macros 1.1 implementation of #[derive(Serialize, Deserialize)]" \
        CARGO_PKG_HOMEPAGE="https://serde.rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde_derive" \
        CARGO_PKG_README="crates-io.md" \
        CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.193" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="193" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'serde_derive' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "deserialize_in_place"))' '-C' 'metadata=02ba64ae322c5d3f' '-C' 'extra-filename=-ca901d6d165172fe' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.193/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ca901d6d165172fe
COPY --from=dep-p-serde_derive-1.0.193-ca901d6d165172fe /tmp/clis-qcow2-rs_0-1-2/release/deps/*-ca901d6d165172fe* /

FROM scratch AS cratesio-serde-1.0.193
ADD --chmod=0664 --checksum=sha256:25dd9975e68d0cb5aa1120c288333fc98731bd1dd12f561e468ea4728c042b89 \
  https://static.crates.io/crates/serde/serde-1.0.193.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-serde-1.0.193-dc85bb26f94c68ed
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-serde-1.0.193,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.193 \
  --mount=from=out-ca901d6d165172fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde_derive-ca901d6d165172fe.so,source=/libserde_derive-ca901d6d165172fe.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.193" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.193/Cargo.toml" \
        CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A generic serialization/deserialization framework" \
        CARGO_PKG_HOMEPAGE="https://serde.rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde" \
        CARGO_PKG_README="crates-io.md" \
        CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="1.0.193" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="193" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/serde-9af98ab12f7c086a/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'serde' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="serde_derive"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "derive", "rc", "serde_derive", "std", "unstable"))' '-C' 'metadata=8a35a1245e337ca1' '-C' 'extra-filename=-dc85bb26f94c68ed' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'serde_derive=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde_derive-ca901d6d165172fe.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.193/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-dc85bb26f94c68ed
COPY --from=dep-l-serde-1.0.193-dc85bb26f94c68ed /tmp/clis-qcow2-rs_0-1-2/release/deps/*-dc85bb26f94c68ed* /

FROM scratch AS cratesio-bincode-1.3.3
ADD --chmod=0664 --checksum=sha256:b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad \
  https://static.crates.io/crates/bincode/bincode-1.3.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-bincode-1.3.3-29ccad64725feb59
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-bincode-1.3.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bincode-1.3.3 \
  --mount=from=out-dc85bb26f94c68ed,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rmeta,source=/libserde-dc85bb26f94c68ed.rmeta \
  --mount=from=out-ca901d6d165172fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde_derive-ca901d6d165172fe.so,source=/libserde_derive-ca901d6d165172fe.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bincode" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bincode-1.3.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bincode-1.3.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="Ty Overby <ty@pre-alpha.com>:Francesco Mazzoli <f@mazzo.li>:David Tolnay <dtolnay@gmail.com>:Zoey Riordan <zoey@dos.cafe>" \
        CARGO_PKG_DESCRIPTION="A binary serialization / deserialization strategy that uses Serde for transforming structs into bytes and vice versa!" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bincode" \
        CARGO_PKG_README="./readme.md" \
        CARGO_PKG_REPOSITORY="https://github.com/servo/bincode" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.3.3" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'bincode' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("i128"))' '-C' 'metadata=769d0a8004507d63' '-C' 'extra-filename=-29ccad64725feb59' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'serde=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bincode-1.3.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-29ccad64725feb59
COPY --from=dep-l-bincode-1.3.3-29ccad64725feb59 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-29ccad64725feb59* /

FROM scratch AS cratesio-byteorder-1.5.0
ADD --chmod=0664 --checksum=sha256:1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b \
  https://static.crates.io/crates/byteorder/byteorder-1.5.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-byteorder-1.5.0-a63c22cfa59c094d
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-byteorder-1.5.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byteorder-1.5.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="byteorder" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byteorder-1.5.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byteorder-1.5.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Library for reading/writing numbers in big-endian and little-endian." \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/byteorder" \
        CARGO_PKG_LICENSE="Unlicense OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="byteorder" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/byteorder" \
        CARGO_PKG_RUST_VERSION="1.60" \
        CARGO_PKG_VERSION="1.5.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'byteorder' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "i128", "std"))' '-C' 'metadata=887b4a232103aafe' '-C' 'extra-filename=-a63c22cfa59c094d' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byteorder-1.5.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a63c22cfa59c094d
COPY --from=dep-l-byteorder-1.5.0-a63c22cfa59c094d /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a63c22cfa59c094d* /

FROM scratch AS cratesio-anstyle-1.0.4
ADD --chmod=0664 --checksum=sha256:7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87 \
  https://static.crates.io/crates/anstyle/anstyle-1.0.4.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-anstyle-1.0.4-d0740faea4ed398d
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-anstyle-1.0.4,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-1.0.4 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="anstyle" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-1.0.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-1.0.4/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="ANSI text styling" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-cli/anstyle" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="anstyle" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-cli/anstyle.git" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="1.0.4" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'anstyle' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "std"))' '-C' 'metadata=8131aca6fd6a64dc' '-C' 'extra-filename=-d0740faea4ed398d' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-1.0.4/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d0740faea4ed398d
COPY --from=dep-l-anstyle-1.0.4-d0740faea4ed398d /tmp/clis-qcow2-rs_0-1-2/release/deps/*-d0740faea4ed398d* /

FROM scratch AS cratesio-utf8parse-0.2.1
ADD --chmod=0664 --checksum=sha256:711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a \
  https://static.crates.io/crates/utf8parse/utf8parse-0.2.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-utf8parse-0.2.1-522ff71b25340e24
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-utf8parse-0.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/utf8parse-0.2.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="utf8parse" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/utf8parse-0.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/utf8parse-0.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Joe Wilm <joe@jwilm.com>:Christian Duerr <contact@christianduerr.com>" \
        CARGO_PKG_DESCRIPTION="Table-driven UTF-8 parser" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="utf8parse" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/alacritty/vte" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'utf8parse' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly"))' '-C' 'metadata=ab4254b2d95b364f' '-C' 'extra-filename=-522ff71b25340e24' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/utf8parse-0.2.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-522ff71b25340e24
COPY --from=dep-l-utf8parse-0.2.1-522ff71b25340e24 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-522ff71b25340e24* /

FROM scratch AS cratesio-anstyle-parse-0.2.3
ADD --chmod=0664 --checksum=sha256:c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c \
  https://static.crates.io/crates/anstyle-parse/anstyle-parse-0.2.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-anstyle-parse-0.2.3-a4729bcf670c741e
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-anstyle-parse-0.2.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-parse-0.2.3 \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta,source=/libutf8parse-522ff71b25340e24.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="anstyle_parse" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-parse-0.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-parse-0.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Parse ANSI Style Escapes" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-cli/anstyle" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="anstyle-parse" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-cli/anstyle.git" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="0.2.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'anstyle_parse' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="utf8"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("core", "default", "utf8"))' '-C' 'metadata=99be258c47988f40' '-C' 'extra-filename=-a4729bcf670c741e' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'utf8parse=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-parse-0.2.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a4729bcf670c741e
COPY --from=dep-l-anstyle-parse-0.2.3-a4729bcf670c741e /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a4729bcf670c741e* /

FROM scratch AS cratesio-anstyle-query-1.0.2
ADD --chmod=0664 --checksum=sha256:e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648 \
  https://static.crates.io/crates/anstyle-query/anstyle-query-1.0.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-anstyle-query-1.0.2-fcc94b35d76d0926
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-anstyle-query-1.0.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-query-1.0.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="anstyle_query" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-query-1.0.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-query-1.0.2/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Look up colored console capabilities" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="anstyle-query" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-cli/anstyle" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="1.0.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'anstyle_query' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=b0bc2c35661a2aa8' '-C' 'extra-filename=-fcc94b35d76d0926' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstyle-query-1.0.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-fcc94b35d76d0926
COPY --from=dep-l-anstyle-query-1.0.2-fcc94b35d76d0926 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-fcc94b35d76d0926* /

FROM scratch AS cratesio-colorchoice-1.0.0
ADD --chmod=0664 --checksum=sha256:acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7 \
  https://static.crates.io/crates/colorchoice/colorchoice-1.0.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-colorchoice-1.0.0-8e999bad75f58407
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-colorchoice-1.0.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/colorchoice-1.0.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="colorchoice" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/colorchoice-1.0.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/colorchoice-1.0.0/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Global override of color control" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="colorchoice" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-cli/anstyle" \
        CARGO_PKG_RUST_VERSION="1.64.0" \
        CARGO_PKG_VERSION="1.0.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'colorchoice' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=31a36da9d08f4971' '-C' 'extra-filename=-8e999bad75f58407' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/colorchoice-1.0.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-8e999bad75f58407
COPY --from=dep-l-colorchoice-1.0.0-8e999bad75f58407 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-8e999bad75f58407* /

FROM scratch AS cratesio-anstream-0.6.5
ADD --chmod=0664 --checksum=sha256:d664a92ecae85fd0a7392615844904654d1d5f5514837f471ddef4a057aba1b6 \
  https://static.crates.io/crates/anstream/anstream-0.6.5.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-anstream-0.6.5-fbacf1af5926bdd4
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-anstream-0.6.5,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstream-0.6.5 \
  --mount=from=out-d0740faea4ed398d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta,source=/libanstyle-d0740faea4ed398d.rmeta \
  --mount=from=out-a4729bcf670c741e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rmeta,source=/libanstyle_parse-a4729bcf670c741e.rmeta \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta,source=/libutf8parse-522ff71b25340e24.rmeta \
  --mount=from=out-fcc94b35d76d0926,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rmeta,source=/libanstyle_query-fcc94b35d76d0926.rmeta \
  --mount=from=out-8e999bad75f58407,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rmeta,source=/libcolorchoice-8e999bad75f58407.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="anstream" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstream-0.6.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstream-0.6.5/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A simple cross platform library for writing colored text to a terminal." \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-cli/anstyle" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="anstream" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-cli/anstyle.git" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="0.6.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'anstream' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="auto"' '--cfg' 'feature="default"' '--cfg' 'feature="wincon"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("auto", "default", "test", "wincon"))' '-C' 'metadata=039d9aa183dc60cb' '-C' 'extra-filename=-fbacf1af5926bdd4' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'anstyle=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta' '--extern' 'anstyle_parse=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rmeta' '--extern' 'anstyle_query=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rmeta' '--extern' 'colorchoice=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rmeta' '--extern' 'utf8parse=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/anstream-0.6.5/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-fbacf1af5926bdd4
COPY --from=dep-l-anstream-0.6.5-fbacf1af5926bdd4 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-fbacf1af5926bdd4* /

FROM scratch AS cratesio-clap_lex-0.6.0
ADD --chmod=0664 --checksum=sha256:702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1 \
  https://static.crates.io/crates/clap_lex/clap_lex-0.6.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-clap_lex-0.6.0-a859f5c15f1b3302
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-clap_lex-0.6.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_lex-0.6.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap_lex" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_lex-0.6.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_lex-0.6.0/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Minimal, flexible command line parser" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap_lex" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/clap-rs/clap/tree/master/clap_lex" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="0.6.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap_lex' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=da90e6b531863016' '-C' 'extra-filename=-a859f5c15f1b3302' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_lex-0.6.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a859f5c15f1b3302
COPY --from=dep-l-clap_lex-0.6.0-a859f5c15f1b3302 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a859f5c15f1b3302* /

FROM scratch AS cratesio-strsim-0.10.0
ADD --chmod=0664 --checksum=sha256:73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623 \
  https://static.crates.io/crates/strsim/strsim-0.10.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-strsim-0.10.0-fd42a4ea370e31ec
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-strsim-0.10.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.10.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="strsim" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.10.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.10.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Danny Guo <danny@dannyguo.com>" \
        CARGO_PKG_DESCRIPTION="Implementations of string similarity metrics. Includes Hamming, Levenshtein,\nOSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/dguo/strsim-rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="strsim" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dguo/strsim-rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.10.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="10" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'strsim' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=893a2fde8ffd8f95' '-C' 'extra-filename=-fd42a4ea370e31ec' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.10.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-fd42a4ea370e31ec
COPY --from=dep-l-strsim-0.10.0-fd42a4ea370e31ec /tmp/clis-qcow2-rs_0-1-2/release/deps/*-fd42a4ea370e31ec* /

FROM scratch AS cratesio-clap_builder-4.4.12
ADD --chmod=0664 --checksum=sha256:fb7fb5e4e979aec3be7791562fcba452f94ad85e954da024396433e0e25a79e9 \
  https://static.crates.io/crates/clap_builder/clap_builder-4.4.12.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-clap_builder-4.4.12-36625380256100cd
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-clap_builder-4.4.12,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_builder-4.4.12 \
  --mount=from=out-fbacf1af5926bdd4,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstream-fbacf1af5926bdd4.rmeta,source=/libanstream-fbacf1af5926bdd4.rmeta \
  --mount=from=out-d0740faea4ed398d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta,source=/libanstyle-d0740faea4ed398d.rmeta \
  --mount=from=out-a4729bcf670c741e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rmeta,source=/libanstyle_parse-a4729bcf670c741e.rmeta \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta,source=/libutf8parse-522ff71b25340e24.rmeta \
  --mount=from=out-fcc94b35d76d0926,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rmeta,source=/libanstyle_query-fcc94b35d76d0926.rmeta \
  --mount=from=out-8e999bad75f58407,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rmeta,source=/libcolorchoice-8e999bad75f58407.rmeta \
  --mount=from=out-a859f5c15f1b3302,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_lex-a859f5c15f1b3302.rmeta,source=/libclap_lex-a859f5c15f1b3302.rmeta \
  --mount=from=out-fd42a4ea370e31ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libstrsim-fd42a4ea370e31ec.rmeta,source=/libstrsim-fd42a4ea370e31ec.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap_builder" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_builder-4.4.12" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_builder-4.4.12/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A simple to use, efficient, and full-featured Command Line Argument Parser" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap_builder" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/clap-rs/clap" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="4.4.12" \
        CARGO_PKG_VERSION_MAJOR="4" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="12" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap_builder' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="color"' '--cfg' 'feature="error-context"' '--cfg' 'feature="help"' '--cfg' 'feature="std"' '--cfg' 'feature="suggestions"' '--cfg' 'feature="usage"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("cargo", "color", "debug", "default", "deprecated", "env", "error-context", "help", "std", "string", "suggestions", "unicode", "unstable-doc", "unstable-styles", "unstable-v5", "usage", "wrap_help"))' '-C' 'metadata=4c856bc466b2cdc8' '-C' 'extra-filename=-36625380256100cd' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'anstream=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstream-fbacf1af5926bdd4.rmeta' '--extern' 'anstyle=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta' '--extern' 'clap_lex=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_lex-a859f5c15f1b3302.rmeta' '--extern' 'strsim=/tmp/clis-qcow2-rs_0-1-2/release/deps/libstrsim-fd42a4ea370e31ec.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_builder-4.4.12/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-36625380256100cd
COPY --from=dep-l-clap_builder-4.4.12-36625380256100cd /tmp/clis-qcow2-rs_0-1-2/release/deps/*-36625380256100cd* /

FROM scratch AS cratesio-heck-0.4.1
ADD --chmod=0664 --checksum=sha256:95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8 \
  https://static.crates.io/crates/heck/heck-0.4.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-heck-0.4.1-2f387b4601b8b6b0
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-heck-0.4.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.4.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="heck" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.4.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.4.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Without Boats <woboats@gmail.com>" \
        CARGO_PKG_DESCRIPTION="heck is a case conversion library." \
        CARGO_PKG_HOMEPAGE="https://github.com/withoutboats/heck" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="heck" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/withoutboats/heck" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'heck' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "unicode", "unicode-segmentation"))' '-C' 'metadata=a7eceebcc0d13c4d' '-C' 'extra-filename=-2f387b4601b8b6b0' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.4.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-2f387b4601b8b6b0
COPY --from=dep-l-heck-0.4.1-2f387b4601b8b6b0 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-2f387b4601b8b6b0* /

FROM scratch AS cratesio-clap_derive-4.4.7
ADD --chmod=0664 --checksum=sha256:cf9804afaaf59a91e75b022a30fb7229a7901f60c755489cc61c9b423b836442 \
  https://static.crates.io/crates/clap_derive/clap_derive-4.4.7.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-clap_derive-4.4.7-23f1d80895cbfd94
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-clap_derive-4.4.7,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_derive-4.4.7 \
  --mount=from=out-2f387b4601b8b6b0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libheck-2f387b4601b8b6b0.rlib,source=/libheck-2f387b4601b8b6b0.rlib \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap_derive" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_derive-4.4.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_derive-4.4.7/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Parse command line argument by defining a struct, derive crate." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap_derive" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/clap-rs/clap/tree/master/clap_derive" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="4.4.7" \
        CARGO_PKG_VERSION_MAJOR="4" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap_derive' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("debug", "default", "deprecated", "raw-deprecated", "unstable-v5"))' '-C' 'metadata=ed53d101efe5ac6d' '-C' 'extra-filename=-23f1d80895cbfd94' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'heck=/tmp/clis-qcow2-rs_0-1-2/release/deps/libheck-2f387b4601b8b6b0.rlib' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap_derive-4.4.7/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-23f1d80895cbfd94
COPY --from=dep-p-clap_derive-4.4.7-23f1d80895cbfd94 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-23f1d80895cbfd94* /

FROM scratch AS cratesio-clap-4.4.12
ADD --chmod=0664 --checksum=sha256:dcfab8ba68f3668e89f6ff60f5b205cea56aa7b769451a59f34b8682f51c056d \
  https://static.crates.io/crates/clap/clap-4.4.12.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-clap-4.4.12-fe4290a3fc65d263
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-clap-4.4.12,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-4.4.12 \
  --mount=from=out-36625380256100cd,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_builder-36625380256100cd.rmeta,source=/libclap_builder-36625380256100cd.rmeta \
  --mount=from=out-fbacf1af5926bdd4,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstream-fbacf1af5926bdd4.rmeta,source=/libanstream-fbacf1af5926bdd4.rmeta \
  --mount=from=out-d0740faea4ed398d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta,source=/libanstyle-d0740faea4ed398d.rmeta \
  --mount=from=out-a4729bcf670c741e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rmeta,source=/libanstyle_parse-a4729bcf670c741e.rmeta \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta,source=/libutf8parse-522ff71b25340e24.rmeta \
  --mount=from=out-fcc94b35d76d0926,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rmeta,source=/libanstyle_query-fcc94b35d76d0926.rmeta \
  --mount=from=out-8e999bad75f58407,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rmeta,source=/libcolorchoice-8e999bad75f58407.rmeta \
  --mount=from=out-a859f5c15f1b3302,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_lex-a859f5c15f1b3302.rmeta,source=/libclap_lex-a859f5c15f1b3302.rmeta \
  --mount=from=out-fd42a4ea370e31ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libstrsim-fd42a4ea370e31ec.rmeta,source=/libstrsim-fd42a4ea370e31ec.rmeta \
  --mount=from=out-23f1d80895cbfd94,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so,source=/libclap_derive-23f1d80895cbfd94.so \
  --mount=from=out-2f387b4601b8b6b0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libheck-2f387b4601b8b6b0.rmeta,source=/libheck-2f387b4601b8b6b0.rmeta \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-4.4.12" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-4.4.12/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A simple to use, efficient, and full-featured Command Line Argument Parser" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/clap-rs/clap" \
        CARGO_PKG_RUST_VERSION="1.70.0" \
        CARGO_PKG_VERSION="4.4.12" \
        CARGO_PKG_VERSION_MAJOR="4" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="12" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="color"' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="error-context"' '--cfg' 'feature="help"' '--cfg' 'feature="std"' '--cfg' 'feature="suggestions"' '--cfg' 'feature="usage"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("cargo", "color", "debug", "default", "deprecated", "derive", "env", "error-context", "help", "std", "string", "suggestions", "unicode", "unstable-doc", "unstable-styles", "unstable-v5", "usage", "wrap_help"))' '-C' 'metadata=b25d2866ae3dab38' '-C' 'extra-filename=-fe4290a3fc65d263' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'clap_builder=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_builder-36625380256100cd.rmeta' '--extern' 'clap_derive=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-4.4.12/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-fe4290a3fc65d263
COPY --from=dep-l-clap-4.4.12-fe4290a3fc65d263 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-fe4290a3fc65d263* /

FROM scratch AS cratesio-num-traits-0.2.17
ADD --chmod=0664 --checksum=sha256:39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c \
  https://static.crates.io/crates/num-traits/num-traits-0.2.17.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-num-traits-0.2.17-8fa1a5b116170862
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-num-traits-0.2.17,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num-traits-0.2.17 \
  --mount=from=crate_out-13057c050b88f322,dst=/tmp/clis-qcow2-rs_0-1-2/release/build/num-traits-13057c050b88f322/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="num_traits" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num-traits-0.2.17" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num-traits-0.2.17/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Numeric traits for generic mathematics" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-num/num-traits" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="num-traits" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-num/num-traits" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="0.2.17" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="17" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/num-traits-13057c050b88f322/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'num_traits' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "i128", "libm", "std"))' '-C' 'metadata=ac4e6d1b1a7fefbe' '-C' 'extra-filename=-8fa1a5b116170862' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' '--cfg' 'has_to_int_unchecked' '--cfg' 'has_reverse_bits' '--cfg' 'has_leading_trailing_ones' '--cfg' 'has_div_euclid' '--cfg' 'has_copysign' '--cfg' 'has_is_subnormal' '--cfg' 'has_int_to_from_bytes' '--cfg' 'has_float_to_from_bytes' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num-traits-0.2.17/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-8fa1a5b116170862
COPY --from=dep-l-num-traits-0.2.17-8fa1a5b116170862 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-8fa1a5b116170862* /

FROM scratch AS cratesio-clap-num-1.0.2
ADD --chmod=0664 --checksum=sha256:488557e97528174edaa2ee268b23a809e0c598213a4bbcb4f34575a46fda147e \
  https://static.crates.io/crates/clap-num/clap-num-1.0.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-clap-num-1.0.2-bd9f44d75c9ea6f8
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-clap-num-1.0.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-num-1.0.2 \
  --mount=from=out-8fa1a5b116170862,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_traits-8fa1a5b116170862.rmeta,source=/libnum_traits-8fa1a5b116170862.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap_num" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-num-1.0.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-num-1.0.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Martens <alex@thinglab.org>" \
        CARGO_PKG_DESCRIPTION="Number parsers for clap" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap-num" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/newAM/clap-num/" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap_num' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=8cd5d1029a4c9240' '-C' 'extra-filename=-bd9f44d75c9ea6f8' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'num_traits=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_traits-8fa1a5b116170862.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-num-1.0.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-bd9f44d75c9ea6f8
COPY --from=dep-l-clap-num-1.0.2-bd9f44d75c9ea6f8 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-bd9f44d75c9ea6f8* /

FROM scratch AS cratesio-libc-0.2.151
ADD --chmod=0664 --checksum=sha256:302d7ab3130588088d277783b1e2d2e10c9e9e4a16dd9050e6ec93fb3e7048f4 \
  https://static.crates.io/crates/libc/libc-0.2.151.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-libc-0.2.151-0addc1beddeea30f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-libc-0.2.151,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.151 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="libc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.151" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.151/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Raw FFI bindings to platform libraries like libc.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/libc" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="libc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/libc" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.151" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="151" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/libc-7af3464b36b18ad6/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'libc' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="extra_traits"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' '-C' 'metadata=e30cf57fe65dfc1d' '-C' 'extra-filename=-0addc1beddeea30f' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' '--cfg' 'freebsd11' '--cfg' 'libc_priv_mod_use' '--cfg' 'libc_union' '--cfg' 'libc_const_size_of' '--cfg' 'libc_align' '--cfg' 'libc_int128' '--cfg' 'libc_core_cvoid' '--cfg' 'libc_packedN' '--cfg' 'libc_cfg_target_vendor' '--cfg' 'libc_non_exhaustive' '--cfg' 'libc_long_array' '--cfg' 'libc_ptr_addr_of' '--cfg' 'libc_underscore_const_names' '--cfg' 'libc_const_extern_fn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.151/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0addc1beddeea30f
COPY --from=dep-l-libc-0.2.151-0addc1beddeea30f /tmp/clis-qcow2-rs_0-1-2/release/deps/*-0addc1beddeea30f* /

FROM scratch AS cratesio-atty-0.2.14
ADD --chmod=0664 --checksum=sha256:d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8 \
  https://static.crates.io/crates/atty/atty-0.2.14.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-atty-0.2.14-db60e10e02e74b95
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-atty-0.2.14,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="atty" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14/Cargo.toml" \
        CARGO_PKG_AUTHORS="softprops <d.tangren@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple interface for querying atty" \
        CARGO_PKG_HOMEPAGE="https://github.com/softprops/atty" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="atty" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/softprops/atty" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.14" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="14" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'atty' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=3d17f82e97fd4897' '-C' 'extra-filename=-db60e10e02e74b95' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-db60e10e02e74b95
COPY --from=dep-l-atty-0.2.14-db60e10e02e74b95 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-db60e10e02e74b95* /

FROM scratch AS cratesio-humantime-2.1.0
ADD --chmod=0664 --checksum=sha256:9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4 \
  https://static.crates.io/crates/humantime/humantime-2.1.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-humantime-2.1.0-d4a86c79f6da3dd6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-humantime-2.1.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-2.1.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="humantime" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-2.1.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-2.1.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Paul Colomiets <paul@colomiets.name>" \
        CARGO_PKG_DESCRIPTION="    A parser and formatter for std::time::{Duration, SystemTime}\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/tailhook/humantime" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="humantime" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tailhook/humantime" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.1.0" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'humantime' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=034d2b81d96eda5e' '-C' 'extra-filename=-d4a86c79f6da3dd6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-2.1.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d4a86c79f6da3dd6
COPY --from=dep-l-humantime-2.1.0-d4a86c79f6da3dd6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-d4a86c79f6da3dd6* /

FROM scratch AS cratesio-log-0.4.20
ADD --chmod=0664 --checksum=sha256:b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f \
  https://static.crates.io/crates/log/log-0.4.20.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-log-0.4.20-ea8327ab44844df1
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-log-0.4.20,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.20 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="log" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.20" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.20/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A lightweight logging facade for Rust\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="log" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/log" \
        CARGO_PKG_RUST_VERSION="1.60.0" \
        CARGO_PKG_VERSION="0.4.20" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="20" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'log' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="release_max_level_off"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("kv_unstable", "kv_unstable_serde", "kv_unstable_std", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval", "sval_ref", "value-bag"))' '-C' 'metadata=5e6d83147aaf471b' '-C' 'extra-filename=-ea8327ab44844df1' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.20/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ea8327ab44844df1
COPY --from=dep-l-log-0.4.20-ea8327ab44844df1 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-ea8327ab44844df1* /

FROM scratch AS cratesio-memchr-2.7.1
ADD --chmod=0664 --checksum=sha256:523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149 \
  https://static.crates.io/crates/memchr/memchr-2.7.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-memchr-2.7.1-08328c8b7673a58d
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-memchr-2.7.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.7.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="memchr" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.7.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.7.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>:bluss" \
        CARGO_PKG_DESCRIPTION="Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for\n1, 2 or 3 byte search and single substring search.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/memchr" \
        CARGO_PKG_LICENSE="Unlicense OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="memchr" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/memchr" \
        CARGO_PKG_RUST_VERSION="1.61" \
        CARGO_PKG_VERSION="2.7.1" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'memchr' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "compiler_builtins", "core", "default", "libc", "logging", "rustc-dep-of-std", "std", "use_std"))' '-C' 'metadata=2b54d29a445e3ea7' '-C' 'extra-filename=-08328c8b7673a58d' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.7.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-08328c8b7673a58d
COPY --from=dep-l-memchr-2.7.1-08328c8b7673a58d /tmp/clis-qcow2-rs_0-1-2/release/deps/*-08328c8b7673a58d* /

FROM scratch AS cratesio-aho-corasick-1.1.2
ADD --chmod=0664 --checksum=sha256:b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0 \
  https://static.crates.io/crates/aho-corasick/aho-corasick-1.1.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-aho-corasick-1.1.2-2b15874b445115c1
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-aho-corasick-1.1.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-1.1.2 \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="aho_corasick" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-1.1.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-1.1.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Fast multiple substring searching." \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/aho-corasick" \
        CARGO_PKG_LICENSE="Unlicense OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="aho-corasick" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/aho-corasick" \
        CARGO_PKG_RUST_VERSION="1.60.0" \
        CARGO_PKG_VERSION="1.1.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'aho_corasick' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="perf-literal"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "logging", "perf-literal", "std"))' '-C' 'metadata=250b9cf8aa6d11d8' '-C' 'extra-filename=-2b15874b445115c1' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'memchr=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-1.1.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-2b15874b445115c1
COPY --from=dep-l-aho-corasick-1.1.2-2b15874b445115c1 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-2b15874b445115c1* /

FROM scratch AS cratesio-regex-syntax-0.8.2
ADD --chmod=0664 --checksum=sha256:c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f \
  https://static.crates.io/crates/regex-syntax/regex-syntax-0.8.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-regex-syntax-0.8.2-7a4e8cf437ea8df6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-regex-syntax-0.8.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.8.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="regex_syntax" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.8.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.8.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A regular expression parser." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="regex-syntax" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/regex/tree/master/regex-syntax" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.8.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'regex_syntax' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arbitrary", "default", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"))' '-C' 'metadata=652aa470cbae6e6f' '-C' 'extra-filename=-7a4e8cf437ea8df6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.8.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7a4e8cf437ea8df6
COPY --from=dep-l-regex-syntax-0.8.2-7a4e8cf437ea8df6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7a4e8cf437ea8df6* /

FROM scratch AS cratesio-regex-automata-0.4.3
ADD --chmod=0664 --checksum=sha256:5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f \
  https://static.crates.io/crates/regex-automata/regex-automata-0.4.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-regex-automata-0.4.3-ba444f6efb5958a6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-regex-automata-0.4.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-automata-0.4.3 \
  --mount=from=out-2b15874b445115c1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta,source=/libaho_corasick-2b15874b445115c1.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-7a4e8cf437ea8df6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta,source=/libregex_syntax-7a4e8cf437ea8df6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="regex_automata" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-automata-0.4.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-automata-0.4.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Automata construction and matching using regular expressions." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="regex-automata" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/regex/tree/master/regex-automata" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.4.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'regex_automata' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="dfa-onepass"' '--cfg' 'feature="hybrid"' '--cfg' 'feature="meta"' '--cfg' 'feature="nfa-backtrack"' '--cfg' 'feature="nfa-pikevm"' '--cfg' 'feature="nfa-thompson"' '--cfg' 'feature="perf-inline"' '--cfg' 'feature="perf-literal"' '--cfg' 'feature="perf-literal-multisubstring"' '--cfg' 'feature="perf-literal-substring"' '--cfg' 'feature="std"' '--cfg' 'feature="syntax"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "dfa", "dfa-build", "dfa-onepass", "dfa-search", "hybrid", "internal-instrument", "internal-instrument-pikevm", "logging", "meta", "nfa", "nfa-backtrack", "nfa-pikevm", "nfa-thompson", "perf", "perf-inline", "perf-literal", "perf-literal-multisubstring", "perf-literal-substring", "std", "syntax", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unicode-word-boundary"))' '-C' 'metadata=f3330cfd153a31f9' '-C' 'extra-filename=-ba444f6efb5958a6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'aho_corasick=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta' '--extern' 'memchr=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta' '--extern' 'regex_syntax=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-automata-0.4.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ba444f6efb5958a6
COPY --from=dep-l-regex-automata-0.4.3-ba444f6efb5958a6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-ba444f6efb5958a6* /

FROM scratch AS cratesio-regex-1.10.2
ADD --chmod=0664 --checksum=sha256:380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343 \
  https://static.crates.io/crates/regex/regex-1.10.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-regex-1.10.2-72624534882400be
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-regex-1.10.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.10.2 \
  --mount=from=out-2b15874b445115c1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta,source=/libaho_corasick-2b15874b445115c1.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-ba444f6efb5958a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_automata-ba444f6efb5958a6.rmeta,source=/libregex_automata-ba444f6efb5958a6.rmeta \
  --mount=from=out-7a4e8cf437ea8df6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta,source=/libregex_syntax-7a4e8cf437ea8df6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="regex" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.10.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.10.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/regex" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="regex" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/regex" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="1.10.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="10" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'regex' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="perf"' '--cfg' 'feature="perf-backtrack"' '--cfg' 'feature="perf-cache"' '--cfg' 'feature="perf-dfa"' '--cfg' 'feature="perf-inline"' '--cfg' 'feature="perf-literal"' '--cfg' 'feature="perf-onepass"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "logging", "pattern", "perf", "perf-backtrack", "perf-cache", "perf-dfa", "perf-dfa-full", "perf-inline", "perf-literal", "perf-onepass", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unstable", "use_std"))' '-C' 'metadata=79917640a848018e' '-C' 'extra-filename=-72624534882400be' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'aho_corasick=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta' '--extern' 'memchr=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta' '--extern' 'regex_automata=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_automata-ba444f6efb5958a6.rmeta' '--extern' 'regex_syntax=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.10.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-72624534882400be
COPY --from=dep-l-regex-1.10.2-72624534882400be /tmp/clis-qcow2-rs_0-1-2/release/deps/*-72624534882400be* /

FROM scratch AS cratesio-termcolor-1.4.0
ADD --chmod=0664 --checksum=sha256:ff1bc3d3f05aff0403e8ac0d92ced918ec05b666a43f83297ccef5bea8a3d449 \
  https://static.crates.io/crates/termcolor/termcolor-1.4.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-termcolor-1.4.0-eb1e3a5a15a3aa8c
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-termcolor-1.4.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.4.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="termcolor" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.4.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.4.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple cross platform library for writing colored text to a terminal.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/termcolor" \
        CARGO_PKG_LICENSE="Unlicense OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="termcolor" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/termcolor" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.4.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'termcolor' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=c10c8be42c11208e' '-C' 'extra-filename=-eb1e3a5a15a3aa8c' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.4.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-eb1e3a5a15a3aa8c
COPY --from=dep-l-termcolor-1.4.0-eb1e3a5a15a3aa8c /tmp/clis-qcow2-rs_0-1-2/release/deps/*-eb1e3a5a15a3aa8c* /

FROM scratch AS cratesio-env_logger-0.9.3
ADD --chmod=0664 --checksum=sha256:a12e6657c4c97ebab115a42dcee77225f7f482cdd841cf7088c657a42e9e00e7 \
  https://static.crates.io/crates/env_logger/env_logger-0.9.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-env_logger-0.9.3-14f62bda870ceea0
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-env_logger-0.9.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.9.3 \
  --mount=from=out-db60e10e02e74b95,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libatty-db60e10e02e74b95.rmeta,source=/libatty-db60e10e02e74b95.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-d4a86c79f6da3dd6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libhumantime-d4a86c79f6da3dd6.rmeta,source=/libhumantime-d4a86c79f6da3dd6.rmeta \
  --mount=from=out-ea8327ab44844df1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rmeta,source=/liblog-ea8327ab44844df1.rmeta \
  --mount=from=out-72624534882400be,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex-72624534882400be.rmeta,source=/libregex-72624534882400be.rmeta \
  --mount=from=out-2b15874b445115c1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta,source=/libaho_corasick-2b15874b445115c1.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-ba444f6efb5958a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_automata-ba444f6efb5958a6.rmeta,source=/libregex_automata-ba444f6efb5958a6.rmeta \
  --mount=from=out-7a4e8cf437ea8df6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta,source=/libregex_syntax-7a4e8cf437ea8df6.rmeta \
  --mount=from=out-eb1e3a5a15a3aa8c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtermcolor-eb1e3a5a15a3aa8c.rmeta,source=/libtermcolor-eb1e3a5a15a3aa8c.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="env_logger" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.9.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.9.3/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A logging implementation for `log` which is configured via an environment\nvariable.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="env_logger" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/env-logger-rs/env_logger/" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.9.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="9" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'env_logger' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="atty"' '--cfg' 'feature="default"' '--cfg' 'feature="humantime"' '--cfg' 'feature="regex"' '--cfg' 'feature="termcolor"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("atty", "default", "humantime", "regex", "termcolor"))' '-C' 'metadata=e9a50e1d5788bfa6' '-C' 'extra-filename=-14f62bda870ceea0' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'atty=/tmp/clis-qcow2-rs_0-1-2/release/deps/libatty-db60e10e02e74b95.rmeta' '--extern' 'humantime=/tmp/clis-qcow2-rs_0-1-2/release/deps/libhumantime-d4a86c79f6da3dd6.rmeta' '--extern' 'log=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rmeta' '--extern' 'regex=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex-72624534882400be.rmeta' '--extern' 'termcolor=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtermcolor-eb1e3a5a15a3aa8c.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.9.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-14f62bda870ceea0
COPY --from=dep-l-env_logger-0.9.3-14f62bda870ceea0 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-14f62bda870ceea0* /

FROM scratch AS cratesio-futures-core-0.3.30
ADD --chmod=0664 --checksum=sha256:dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d \
  https://static.crates.io/crates/futures-core/futures-core-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-core-0.3.30-1d93d74bf27fab54
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-core-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-core-0.3.30 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_core" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-core-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-core-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="The core traits and types in for the `futures` library.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-core" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.36" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "portable-atomic", "std", "unstable"))' '-C' 'metadata=0177874ce85c688c' '-C' 'extra-filename=-1d93d74bf27fab54' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-core-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-1d93d74bf27fab54
COPY --from=dep-l-futures-core-0.3.30-1d93d74bf27fab54 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-1d93d74bf27fab54* /

FROM scratch AS cratesio-futures-sink-0.3.30
ADD --chmod=0664 --checksum=sha256:9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5 \
  https://static.crates.io/crates/futures-sink/futures-sink-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-sink-0.3.30-6ec89d477b5d3e53
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-sink-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-sink-0.3.30 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_sink" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-sink-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-sink-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="The asynchronous `Sink` trait for the futures-rs library.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-sink" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.36" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_sink' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "std"))' '-C' 'metadata=3ee5f93a270a9395' '-C' 'extra-filename=-6ec89d477b5d3e53' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-sink-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-6ec89d477b5d3e53
COPY --from=dep-l-futures-sink-0.3.30-6ec89d477b5d3e53 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-6ec89d477b5d3e53* /

FROM scratch AS cratesio-futures-channel-0.3.30
ADD --chmod=0664 --checksum=sha256:eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78 \
  https://static.crates.io/crates/futures-channel/futures-channel-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-channel-0.3.30-ad9d7b2de9358699
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-channel-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-channel-0.3.30 \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_channel" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-channel-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-channel-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Channels for asynchronous communication using futures-rs.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-channel" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_channel' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="futures-sink"' '--cfg' 'feature="sink"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "futures-sink", "sink", "std", "unstable"))' '-C' 'metadata=fb944fea7d23d302' '-C' 'extra-filename=-ad9d7b2de9358699' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'futures_core=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta' '--extern' 'futures_sink=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-channel-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ad9d7b2de9358699
COPY --from=dep-l-futures-channel-0.3.30-ad9d7b2de9358699 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-ad9d7b2de9358699* /

FROM scratch AS cratesio-futures-task-0.3.30
ADD --chmod=0664 --checksum=sha256:38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004 \
  https://static.crates.io/crates/futures-task/futures-task-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-task-0.3.30-f04cff00a4d400c7
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-task-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-task-0.3.30 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_task" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-task-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-task-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Tools for working with tasks.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-task" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_task' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "std", "unstable"))' '-C' 'metadata=77366403dfae0d70' '-C' 'extra-filename=-f04cff00a4d400c7' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-task-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-f04cff00a4d400c7
COPY --from=dep-l-futures-task-0.3.30-f04cff00a4d400c7 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-f04cff00a4d400c7* /

FROM scratch AS cratesio-futures-io-0.3.30
ADD --chmod=0664 --checksum=sha256:a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1 \
  https://static.crates.io/crates/futures-io/futures-io-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-io-0.3.30-9a295684e8a14a09
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-io-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-io-0.3.30 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_io" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-io-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-io-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-io" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.36" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_io' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "std", "unstable"))' '-C' 'metadata=309599a65ba7b85d' '-C' 'extra-filename=-9a295684e8a14a09' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-io-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-9a295684e8a14a09
COPY --from=dep-l-futures-io-0.3.30-9a295684e8a14a09 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-9a295684e8a14a09* /

FROM scratch AS cratesio-futures-macro-0.3.30
ADD --chmod=0664 --checksum=sha256:87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac \
  https://static.crates.io/crates/futures-macro/futures-macro-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-futures-macro-0.3.30-d6b5133ea5763a96
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-macro-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-macro-0.3.30 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_macro" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-macro-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-macro-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="The futures-rs procedural macro implementations.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-macro" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_macro' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=f8cb3a81e9a3cee6' '-C' 'extra-filename=-d6b5133ea5763a96' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-macro-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d6b5133ea5763a96
COPY --from=dep-p-futures-macro-0.3.30-d6b5133ea5763a96 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-d6b5133ea5763a96* /

FROM scratch AS cratesio-pin-project-lite-0.2.13
ADD --chmod=0664 --checksum=sha256:8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58 \
  https://static.crates.io/crates/pin-project-lite/pin-project-lite-0.2.13.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-pin-project-lite-0.2.13-a73e0fc4c66dd601
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-pin-project-lite-0.2.13,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.13 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="pin_project_lite" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.13" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.13/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A lightweight version of pin-project written with declarative macros.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="pin-project-lite" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/taiki-e/pin-project-lite" \
        CARGO_PKG_RUST_VERSION="1.37" \
        CARGO_PKG_VERSION="0.2.13" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="13" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'pin_project_lite' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=750ce7209cbeb90a' '-C' 'extra-filename=-a73e0fc4c66dd601' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.13/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a73e0fc4c66dd601
COPY --from=dep-l-pin-project-lite-0.2.13-a73e0fc4c66dd601 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a73e0fc4c66dd601* /

FROM scratch AS cratesio-pin-utils-0.1.0
ADD --chmod=0664 --checksum=sha256:8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184 \
  https://static.crates.io/crates/pin-utils/pin-utils-0.1.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-pin-utils-0.1.0-b74f2a8eb0482878
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-pin-utils-0.1.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-utils-0.1.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="pin_utils" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-utils-0.1.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-utils-0.1.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Josef Brandl <mail@josefbrandl.de>" \
        CARGO_PKG_DESCRIPTION="Utilities for pinning\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="pin-utils" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang-nursery/pin-utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'pin_utils' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=c09f673a2d3f007a' '-C' 'extra-filename=-b74f2a8eb0482878' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-utils-0.1.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b74f2a8eb0482878
COPY --from=dep-l-pin-utils-0.1.0-b74f2a8eb0482878 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-b74f2a8eb0482878* /

FROM scratch AS cratesio-slab-0.4.9
ADD --chmod=0664 --checksum=sha256:8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67 \
  https://static.crates.io/crates/slab/slab-0.4.9.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-slab-0.4.9-be8a800e18ea87ab
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-slab-0.4.9,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/slab-0.4.9 \
  --mount=from=crate_out-2620910b4a10dae9,dst=/tmp/clis-qcow2-rs_0-1-2/release/build/slab-2620910b4a10dae9/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="slab" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/slab-0.4.9" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/slab-0.4.9/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>" \
        CARGO_PKG_DESCRIPTION="Pre-allocated storage for a uniform data type" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="slab" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/slab" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="0.4.9" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="9" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/slab-2620910b4a10dae9/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'slab' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "std"))' '-C' 'metadata=5c0bcf8dff007640' '-C' 'extra-filename=-be8a800e18ea87ab' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/slab-0.4.9/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-be8a800e18ea87ab
COPY --from=dep-l-slab-0.4.9-be8a800e18ea87ab /tmp/clis-qcow2-rs_0-1-2/release/deps/*-be8a800e18ea87ab* /

FROM scratch AS cratesio-futures-util-0.3.30
ADD --chmod=0664 --checksum=sha256:3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48 \
  https://static.crates.io/crates/futures-util/futures-util-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-util-0.3.30-b2a8e6e2e33ce088
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-util-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-util-0.3.30 \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta,source=/libfutures_channel-ad9d7b2de9358699.rmeta \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
  --mount=from=out-9a295684e8a14a09,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta,source=/libfutures_io-9a295684e8a14a09.rmeta \
  --mount=from=out-d6b5133ea5763a96,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so,source=/libfutures_macro-d6b5133ea5763a96.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta,source=/libfutures_task-f04cff00a4d400c7.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta,source=/libpin_utils-b74f2a8eb0482878.rmeta \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta,source=/libslab-be8a800e18ea87ab.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_util" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-util-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-util-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Common utilities and extension traits for the futures-rs library.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-util" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_util' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="async-await"' '--cfg' 'feature="async-await-macro"' '--cfg' 'feature="channel"' '--cfg' 'feature="futures-channel"' '--cfg' 'feature="futures-io"' '--cfg' 'feature="futures-macro"' '--cfg' 'feature="futures-sink"' '--cfg' 'feature="io"' '--cfg' 'feature="memchr"' '--cfg' 'feature="sink"' '--cfg' 'feature="slab"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "async-await", "async-await-macro", "bilock", "cfg-target-has-atomic", "channel", "compat", "default", "futures-channel", "futures-io", "futures-macro", "futures-sink", "futures_01", "io", "io-compat", "memchr", "portable-atomic", "sink", "slab", "std", "tokio-io", "unstable", "write-all-vectored"))' '-C' 'metadata=cfaf9ca64765ebb4' '-C' 'extra-filename=-b2a8e6e2e33ce088' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'futures_channel=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta' '--extern' 'futures_core=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta' '--extern' 'futures_io=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta' '--extern' 'futures_macro=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so' '--extern' 'futures_sink=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta' '--extern' 'futures_task=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta' '--extern' 'memchr=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta' '--extern' 'pin_project_lite=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta' '--extern' 'pin_utils=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta' '--extern' 'slab=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-util-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b2a8e6e2e33ce088
COPY --from=dep-l-futures-util-0.3.30-b2a8e6e2e33ce088 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-b2a8e6e2e33ce088* /

FROM scratch AS cratesio-futures-executor-0.3.30
ADD --chmod=0664 --checksum=sha256:a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d \
  https://static.crates.io/crates/futures-executor/futures-executor-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-executor-0.3.30-0c9e132561e25190
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-executor-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-executor-0.3.30 \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta,source=/libfutures_task-f04cff00a4d400c7.rmeta \
  --mount=from=out-b2a8e6e2e33ce088,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rmeta,source=/libfutures_util-b2a8e6e2e33ce088.rmeta \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta,source=/libfutures_channel-ad9d7b2de9358699.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
  --mount=from=out-9a295684e8a14a09,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta,source=/libfutures_io-9a295684e8a14a09.rmeta \
  --mount=from=out-d6b5133ea5763a96,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so,source=/libfutures_macro-d6b5133ea5763a96.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta,source=/libpin_utils-b74f2a8eb0482878.rmeta \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta,source=/libslab-be8a800e18ea87ab.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_executor" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-executor-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-executor-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Executors for asynchronous tasks based on the futures-rs library.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-executor" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_executor' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "num_cpus", "std", "thread-pool"))' '-C' 'metadata=c5fb5b7c61731e14' '-C' 'extra-filename=-0c9e132561e25190' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'futures_core=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta' '--extern' 'futures_task=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta' '--extern' 'futures_util=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-executor-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0c9e132561e25190
COPY --from=dep-l-futures-executor-0.3.30-0c9e132561e25190 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-0c9e132561e25190* /

FROM scratch AS cratesio-futures-0.3.30
ADD --chmod=0664 --checksum=sha256:645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0 \
  https://static.crates.io/crates/futures/futures-0.3.30.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-0.3.30-d32fbdba785e08a6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-0.3.30,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-0.3.30 \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta,source=/libfutures_channel-ad9d7b2de9358699.rmeta \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
  --mount=from=out-0c9e132561e25190,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_executor-0c9e132561e25190.rmeta,source=/libfutures_executor-0c9e132561e25190.rmeta \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta,source=/libfutures_task-f04cff00a4d400c7.rmeta \
  --mount=from=out-b2a8e6e2e33ce088,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rmeta,source=/libfutures_util-b2a8e6e2e33ce088.rmeta \
  --mount=from=out-9a295684e8a14a09,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta,source=/libfutures_io-9a295684e8a14a09.rmeta \
  --mount=from=out-d6b5133ea5763a96,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so,source=/libfutures_macro-d6b5133ea5763a96.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta,source=/libpin_utils-b74f2a8eb0482878.rmeta \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta,source=/libslab-be8a800e18ea87ab.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-0.3.30" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-0.3.30/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="An implementation of futures and streams featuring zero allocations,\ncomposability, and iterator-like interfaces.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-lang.github.io/futures-rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/futures-rs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.3.30" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="30" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="async-await"' '--cfg' 'feature="default"' '--cfg' 'feature="executor"' '--cfg' 'feature="futures-executor"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "async-await", "bilock", "cfg-target-has-atomic", "compat", "default", "executor", "futures-executor", "io-compat", "std", "thread-pool", "unstable", "write-all-vectored"))' '-C' 'metadata=fa8e908cc77798db' '-C' 'extra-filename=-d32fbdba785e08a6' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'futures_channel=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta' '--extern' 'futures_core=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta' '--extern' 'futures_executor=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_executor-0c9e132561e25190.rmeta' '--extern' 'futures_io=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta' '--extern' 'futures_sink=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta' '--extern' 'futures_task=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta' '--extern' 'futures_util=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-0.3.30/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d32fbdba785e08a6
COPY --from=dep-l-futures-0.3.30-d32fbdba785e08a6 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-d32fbdba785e08a6* /

FROM scratch AS cratesio-bytes-1.5.0
ADD --chmod=0664 --checksum=sha256:a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223 \
  https://static.crates.io/crates/bytes/bytes-1.5.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-bytes-1.5.0-d7b35eb956c1be36
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-bytes-1.5.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.5.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bytes" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.5.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.5.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>" \
        CARGO_PKG_DESCRIPTION="Types and traits for working with bytes" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bytes" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/bytes" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.5.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'bytes' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "std"))' '-C' 'metadata=0f733f5f653efaa6' '-C' 'extra-filename=-d7b35eb956c1be36' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.5.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d7b35eb956c1be36
COPY --from=dep-l-bytes-1.5.0-d7b35eb956c1be36 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-d7b35eb956c1be36* /

FROM scratch AS cratesio-mio-0.8.10
ADD --chmod=0664 --checksum=sha256:8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09 \
  https://static.crates.io/crates/mio/mio-0.8.10.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-mio-0.8.10-8b22b018b5891a0c
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-mio-0.8.10,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.10 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="mio" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.10" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.10/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>:Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Lightweight non-blocking I/O." \
        CARGO_PKG_HOMEPAGE="https://github.com/tokio-rs/mio" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="mio" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/mio" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.10" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="10" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'mio' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="net"' '--cfg' 'feature="os-ext"' '--cfg' 'feature="os-poll"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "log", "net", "os-ext", "os-poll"))' '-C' 'metadata=72027af0e88482f4' '-C' 'extra-filename=-8b22b018b5891a0c' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.10/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-8b22b018b5891a0c
COPY --from=dep-l-mio-0.8.10-8b22b018b5891a0c /tmp/clis-qcow2-rs_0-1-2/release/deps/*-8b22b018b5891a0c* /

FROM scratch AS cratesio-num_cpus-1.16.0
ADD --chmod=0664 --checksum=sha256:4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43 \
  https://static.crates.io/crates/num_cpus/num_cpus-1.16.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-num_cpus-1.16.0-abda958216542c23
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-num_cpus-1.16.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="num_cpus" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Sean McArthur <sean@seanmonstar.com>" \
        CARGO_PKG_DESCRIPTION="Get the number of CPUs on a machine." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="num_cpus" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/seanmonstar/num_cpus" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.16.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="16" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'num_cpus' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=01024d80e7d95b1d' '-C' 'extra-filename=-abda958216542c23' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-abda958216542c23
COPY --from=dep-l-num_cpus-1.16.0-abda958216542c23 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-abda958216542c23* /

FROM scratch AS cratesio-scopeguard-1.2.0
ADD --chmod=0664 --checksum=sha256:94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49 \
  https://static.crates.io/crates/scopeguard/scopeguard-1.2.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-scopeguard-1.2.0-b477fb82efd13fea
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-scopeguard-1.2.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scopeguard-1.2.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="scopeguard" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scopeguard-1.2.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scopeguard-1.2.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="bluss" \
        CARGO_PKG_DESCRIPTION="A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="scopeguard" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/bluss/scopeguard" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.2.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'scopeguard' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "use_std"))' '-C' 'metadata=7130270c04ca018b' '-C' 'extra-filename=-b477fb82efd13fea' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scopeguard-1.2.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b477fb82efd13fea
COPY --from=dep-l-scopeguard-1.2.0-b477fb82efd13fea /tmp/clis-qcow2-rs_0-1-2/release/deps/*-b477fb82efd13fea* /

FROM scratch AS cratesio-lock_api-0.4.11
ADD --chmod=0664 --checksum=sha256:3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45 \
  https://static.crates.io/crates/lock_api/lock_api-0.4.11.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-lock_api-0.4.11-1a71aa69f2330c14
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-lock_api-0.4.11,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lock_api-0.4.11 \
  --mount=from=crate_out-6fd90c9ce0b1f28e,dst=/tmp/clis-qcow2-rs_0-1-2/release/build/lock_api-6fd90c9ce0b1f28e/out \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="lock_api" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lock_api-0.4.11" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lock_api-0.4.11/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="lock_api" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/Amanieu/parking_lot" \
        CARGO_PKG_RUST_VERSION="1.49.0" \
        CARGO_PKG_VERSION="0.4.11" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="11" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/lock_api-6fd90c9ce0b1f28e/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'lock_api' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="atomic_usize"' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arc_lock", "atomic_usize", "default", "nightly", "owning_ref", "serde"))' '-C' 'metadata=b38e6cd7861e1d34' '-C' 'extra-filename=-1a71aa69f2330c14' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'scopeguard=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta' '--cap-lints' 'warn' '--cfg' 'has_const_fn_trait_bound' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lock_api-0.4.11/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-1a71aa69f2330c14
COPY --from=dep-l-lock_api-0.4.11-1a71aa69f2330c14 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-1a71aa69f2330c14* /

FROM scratch AS cratesio-cfg-if-1.0.0
ADD --chmod=0664 --checksum=sha256:baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd \
  https://static.crates.io/crates/cfg-if/cfg-if-1.0.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-cfg-if-1.0.0-da34da6838abd7f1
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-cfg-if-1.0.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cfg_if" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cfg-if" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'cfg_if' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))' '-C' 'metadata=f774a8b1a0b6ae97' '-C' 'extra-filename=-da34da6838abd7f1' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-da34da6838abd7f1
COPY --from=dep-l-cfg-if-1.0.0-da34da6838abd7f1 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-da34da6838abd7f1* /

FROM scratch AS cratesio-smallvec-1.11.2
ADD --chmod=0664 --checksum=sha256:4dccd0940a2dcdf68d092b8cbab7dc0ad8fa938bf95787e1b916b0e3d0e8e970 \
  https://static.crates.io/crates/smallvec/smallvec-1.11.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-smallvec-1.11.2-db7ba43bb64f435f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-smallvec-1.11.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/smallvec-1.11.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="smallvec" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/smallvec-1.11.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/smallvec-1.11.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Servo Project Developers" \
        CARGO_PKG_DESCRIPTION="'Small vector' optimization: store up to a small number of items on the stack" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="smallvec" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/servo/rust-smallvec" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.11.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="11" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'smallvec' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arbitrary", "const_generics", "const_new", "debugger_visualizer", "drain_filter", "drain_keep_rest", "may_dangle", "serde", "specialization", "union", "write"))' '-C' 'metadata=de18fffac81fffa6' '-C' 'extra-filename=-db7ba43bb64f435f' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/smallvec-1.11.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-db7ba43bb64f435f
COPY --from=dep-l-smallvec-1.11.2-db7ba43bb64f435f /tmp/clis-qcow2-rs_0-1-2/release/deps/*-db7ba43bb64f435f* /

FROM scratch AS cratesio-parking_lot_core-0.9.9
ADD --chmod=0664 --checksum=sha256:4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e \
  https://static.crates.io/crates/parking_lot_core/parking_lot_core-0.9.9.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-parking_lot_core-0.9.9-f8744ca11f01d51a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-parking_lot_core-0.9.9,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot_core-0.9.9 \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="parking_lot_core" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot_core-0.9.9" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot_core-0.9.9/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="An advanced API for creating custom synchronization primitives." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="parking_lot_core" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/Amanieu/parking_lot" \
        CARGO_PKG_RUST_VERSION="1.49.0" \
        CARGO_PKG_VERSION="0.9.9" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="9" \
        CARGO_PKG_VERSION_PATCH="9" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/parking_lot_core-a17aea72ce7a93df/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'parking_lot_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("backtrace", "deadlock_detection", "nightly", "petgraph", "thread-id"))' '-C' 'metadata=45f6af357029670a' '-C' 'extra-filename=-f8744ca11f01d51a' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'cfg_if=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--extern' 'smallvec=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot_core-0.9.9/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-f8744ca11f01d51a
COPY --from=dep-l-parking_lot_core-0.9.9-f8744ca11f01d51a /tmp/clis-qcow2-rs_0-1-2/release/deps/*-f8744ca11f01d51a* /

FROM scratch AS cratesio-parking_lot-0.12.1
ADD --chmod=0664 --checksum=sha256:3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f \
  https://static.crates.io/crates/parking_lot/parking_lot-0.12.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-parking_lot-0.12.1-4ac6edc772146637
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-parking_lot-0.12.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot-0.12.1 \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta,source=/liblock_api-1a71aa69f2330c14.rmeta \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta,source=/libparking_lot_core-f8744ca11f01d51a.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="parking_lot" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot-0.12.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot-0.12.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="More compact and efficient implementations of the standard synchronization primitives." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="parking_lot" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Amanieu/parking_lot" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.12.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="12" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'parking_lot' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arc_lock", "deadlock_detection", "default", "hardware-lock-elision", "nightly", "owning_ref", "send_guard", "serde"))' '-C' 'metadata=56894506c1d3a016' '-C' 'extra-filename=-4ac6edc772146637' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'lock_api=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta' '--extern' 'parking_lot_core=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/parking_lot-0.12.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-4ac6edc772146637
COPY --from=dep-l-parking_lot-0.12.1-4ac6edc772146637 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-4ac6edc772146637* /

FROM scratch AS cratesio-signal-hook-registry-1.4.1
ADD --chmod=0664 --checksum=sha256:d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1 \
  https://static.crates.io/crates/signal-hook-registry/signal-hook-registry-1.4.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-signal-hook-registry-1.4.1-5395542b51c1f12e
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-signal-hook-registry-1.4.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/signal-hook-registry-1.4.1 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="signal_hook_registry" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/signal-hook-registry-1.4.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/signal-hook-registry-1.4.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Michal 'vorner' Vaner <vorner@vorner.cz>:Masaki Hara <ackie.h.gmai@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Backend crate for signal-hook" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0/MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="signal-hook-registry" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/vorner/signal-hook" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.4.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'signal_hook_registry' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=173abf6929e2a9cc' '-C' 'extra-filename=-5395542b51c1f12e' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/signal-hook-registry-1.4.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-5395542b51c1f12e
COPY --from=dep-l-signal-hook-registry-1.4.1-5395542b51c1f12e /tmp/clis-qcow2-rs_0-1-2/release/deps/*-5395542b51c1f12e* /

FROM scratch AS cratesio-socket2-0.5.5
ADD --chmod=0664 --checksum=sha256:7b5fac59a5cb5dd637972e5fca70daf0523c9067fcdc4842f053dae04a18f8e9 \
  https://static.crates.io/crates/socket2/socket2-0.5.5.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-socket2-0.5.5-6ec2d9d16459980f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-socket2-0.5.5,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.5 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="socket2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.5/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Utilities for handling networking sockets with a maximal amount of configuration\npossible intended.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/socket2" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="socket2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/socket2" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="0.5.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'socket2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="all"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("all"))' '-C' 'metadata=9224c07d1a70c0af' '-C' 'extra-filename=-6ec2d9d16459980f' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.5/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-6ec2d9d16459980f
COPY --from=dep-l-socket2-0.5.5-6ec2d9d16459980f /tmp/clis-qcow2-rs_0-1-2/release/deps/*-6ec2d9d16459980f* /

FROM scratch AS cratesio-tokio-macros-2.2.0
ADD --chmod=0664 --checksum=sha256:5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b \
  https://static.crates.io/crates/tokio-macros/tokio-macros-2.2.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-tokio-macros-2.2.0-01d4aecec31808fc
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-tokio-macros-2.2.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.2.0 \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tokio_macros" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.2.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.2.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Tokio's proc macros.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tokio-macros" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="2.2.0" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'tokio_macros' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=980849acf9666685' '-C' 'extra-filename=-01d4aecec31808fc' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib' '--extern' 'quote=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib' '--extern' 'syn=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.2.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-01d4aecec31808fc
COPY --from=dep-p-tokio-macros-2.2.0-01d4aecec31808fc /tmp/clis-qcow2-rs_0-1-2/release/deps/*-01d4aecec31808fc* /

FROM scratch AS cratesio-tokio-1.35.1
ADD --chmod=0664 --checksum=sha256:c89b4efa943be685f629b149f53829423f8f5531ea21249408e8e2f8671ec104 \
  https://static.crates.io/crates/tokio/tokio-1.35.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-tokio-1.35.1-7dfa875e60cea25d
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-tokio-1.35.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.35.1 \
  --mount=from=out-d7b35eb956c1be36,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rmeta,source=/libbytes-d7b35eb956c1be36.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-8b22b018b5891a0c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rmeta,source=/libmio-8b22b018b5891a0c.rmeta \
  --mount=from=out-abda958216542c23,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rmeta,source=/libnum_cpus-abda958216542c23.rmeta \
  --mount=from=out-4ac6edc772146637,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rmeta,source=/libparking_lot-4ac6edc772146637.rmeta \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta,source=/liblock_api-1a71aa69f2330c14.rmeta \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta,source=/libparking_lot_core-f8744ca11f01d51a.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-5395542b51c1f12e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rmeta,source=/libsignal_hook_registry-5395542b51c1f12e.rmeta \
  --mount=from=out-6ec2d9d16459980f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rmeta,source=/libsocket2-6ec2d9d16459980f.rmeta \
  --mount=from=out-01d4aecec31808fc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so,source=/libtokio_macros-01d4aecec31808fc.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tokio" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.35.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.35.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="An event-driven, non-blocking I/O platform for writing asynchronous I/O\nbacked applications.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tokio" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="1.35.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="35" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'tokio' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="bytes"' '--cfg' 'feature="default"' '--cfg' 'feature="fs"' '--cfg' 'feature="full"' '--cfg' 'feature="io-std"' '--cfg' 'feature="io-util"' '--cfg' 'feature="libc"' '--cfg' 'feature="macros"' '--cfg' 'feature="mio"' '--cfg' 'feature="net"' '--cfg' 'feature="num_cpus"' '--cfg' 'feature="parking_lot"' '--cfg' 'feature="process"' '--cfg' 'feature="rt"' '--cfg' 'feature="rt-multi-thread"' '--cfg' 'feature="signal"' '--cfg' 'feature="signal-hook-registry"' '--cfg' 'feature="socket2"' '--cfg' 'feature="sync"' '--cfg' 'feature="time"' '--cfg' 'feature="tokio-macros"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bytes", "default", "fs", "full", "io-std", "io-util", "libc", "macros", "mio", "net", "num_cpus", "parking_lot", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "test-util", "time", "tokio-macros", "tracing", "windows-sys"))' '-C' 'metadata=3e373df53b4a720e' '-C' 'extra-filename=-7dfa875e60cea25d' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'bytes=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--extern' 'mio=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rmeta' '--extern' 'num_cpus=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rmeta' '--extern' 'parking_lot=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rmeta' '--extern' 'pin_project_lite=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta' '--extern' 'signal_hook_registry=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rmeta' '--extern' 'socket2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rmeta' '--extern' 'tokio_macros=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.35.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7dfa875e60cea25d
COPY --from=dep-l-tokio-1.35.1-7dfa875e60cea25d /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7dfa875e60cea25d* /

FROM scratch AS cratesio-futures-locks-0.7.1
ADD --chmod=0664 --checksum=sha256:45ec6fe3675af967e67c5536c0b9d44e34e6c52f86bedc4ea49c5317b8e94d06 \
  https://static.crates.io/crates/futures-locks/futures-locks-0.7.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-futures-locks-0.7.1-a4b0a3c89e6f82ec
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-futures-locks-0.7.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-locks-0.7.1 \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta,source=/libfutures_channel-ad9d7b2de9358699.rmeta \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta,source=/libfutures_task-f04cff00a4d400c7.rmeta \
  --mount=from=out-7dfa875e60cea25d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta,source=/libtokio-7dfa875e60cea25d.rmeta \
  --mount=from=out-d7b35eb956c1be36,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rmeta,source=/libbytes-d7b35eb956c1be36.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-8b22b018b5891a0c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rmeta,source=/libmio-8b22b018b5891a0c.rmeta \
  --mount=from=out-abda958216542c23,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rmeta,source=/libnum_cpus-abda958216542c23.rmeta \
  --mount=from=out-4ac6edc772146637,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rmeta,source=/libparking_lot-4ac6edc772146637.rmeta \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta,source=/liblock_api-1a71aa69f2330c14.rmeta \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta,source=/libparking_lot_core-f8744ca11f01d51a.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-5395542b51c1f12e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rmeta,source=/libsignal_hook_registry-5395542b51c1f12e.rmeta \
  --mount=from=out-6ec2d9d16459980f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rmeta,source=/libsocket2-6ec2d9d16459980f.rmeta \
  --mount=from=out-01d4aecec31808fc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so,source=/libtokio_macros-01d4aecec31808fc.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="futures_locks" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-locks-0.7.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-locks-0.7.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alan Somers <asomers@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Futures-aware lock primitives\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="futures-locks" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/asomers/futures-locks" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.7.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'futures_locks' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="tokio"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "tokio"))' '-C' 'metadata=1855f0498a54d504' '-C' 'extra-filename=-a4b0a3c89e6f82ec' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'futures_channel=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta' '--extern' 'futures_task=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta' '--extern' 'tokio=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/futures-locks-0.7.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a4b0a3c89e6f82ec
COPY --from=dep-l-futures-locks-0.7.1-a4b0a3c89e6f82ec /tmp/clis-qcow2-rs_0-1-2/release/deps/*-a4b0a3c89e6f82ec* /

FROM scratch AS cratesio-adler-1.0.2
ADD --chmod=0664 --checksum=sha256:f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe \
  https://static.crates.io/crates/adler/adler-1.0.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-adler-1.0.2-ee21f8d21d0adcf2
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-adler-1.0.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/adler-1.0.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="adler" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/adler-1.0.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/adler-1.0.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Jonas Schievink <jonasschievink@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple clean-room implementation of the Adler-32 checksum" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="0BSD OR MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="adler" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/jonas-schievink/adler.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'adler' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "default", "rustc-dep-of-std", "std"))' '-C' 'metadata=0cf82449475954bc' '-C' 'extra-filename=-ee21f8d21d0adcf2' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/adler-1.0.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ee21f8d21d0adcf2
COPY --from=dep-l-adler-1.0.2-ee21f8d21d0adcf2 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-ee21f8d21d0adcf2* /

FROM scratch AS cratesio-miniz_oxide-0.6.2
ADD --chmod=0664 --checksum=sha256:b275950c28b37e794e8c55d88aeb5e139d0ce23fdbbeda68f8d7174abdf9e8fa \
  https://static.crates.io/crates/miniz_oxide/miniz_oxide-0.6.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-miniz_oxide-0.6.2-df26b227e0244749
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-miniz_oxide-0.6.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/miniz_oxide-0.6.2 \
  --mount=from=out-ee21f8d21d0adcf2,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libadler-ee21f8d21d0adcf2.rmeta,source=/libadler-ee21f8d21d0adcf2.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="miniz_oxide" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/miniz_oxide-0.6.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/miniz_oxide-0.6.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Frommi <daniil.liferenko@gmail.com>:oyvindln <oyvindln@users.noreply.github.com>" \
        CARGO_PKG_DESCRIPTION="DEFLATE compression and decompression library rewritten in Rust based on miniz" \
        CARGO_PKG_HOMEPAGE="https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide" \
        CARGO_PKG_LICENSE="MIT OR Zlib OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="miniz_oxide" \
        CARGO_PKG_README="Readme.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.6.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'miniz_oxide' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--cfg' 'feature="with-alloc"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "compiler_builtins", "core", "default", "rustc-dep-of-std", "simd", "simd-adler32", "std", "with-alloc"))' '-C' 'metadata=fc5dc8ae589bbd69' '-C' 'extra-filename=-df26b227e0244749' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'adler=/tmp/clis-qcow2-rs_0-1-2/release/deps/libadler-ee21f8d21d0adcf2.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/miniz_oxide-0.6.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-df26b227e0244749
COPY --from=dep-l-miniz_oxide-0.6.2-df26b227e0244749 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-df26b227e0244749* /

FROM scratch AS cratesio-bitflags-1.3.2
ADD --chmod=0664 --checksum=sha256:bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a \
  https://static.crates.io/crates/bitflags/bitflags-1.3.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-bitflags-1.3.2-70ce9f1f2fa253bc
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-bitflags-1.3.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.3.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bitflags" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.3.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.3.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A macro to generate structures which behave like bitflags.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/bitflags/bitflags" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bitflags" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/bitflags/bitflags" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.3.2" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'bitflags' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "default", "example_generated", "rustc-dep-of-std"))' '-C' 'metadata=fd7cf2c4e10e9bde' '-C' 'extra-filename=-70ce9f1f2fa253bc' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.3.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-70ce9f1f2fa253bc
COPY --from=dep-l-bitflags-1.3.2-70ce9f1f2fa253bc /tmp/clis-qcow2-rs_0-1-2/release/deps/*-70ce9f1f2fa253bc* /

FROM scratch AS cratesio-memoffset-0.7.1
ADD --chmod=0664 --checksum=sha256:5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4 \
  https://static.crates.io/crates/memoffset/memoffset-0.7.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-memoffset-0.7.1-457bc8526d8fdae9
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-memoffset-0.7.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memoffset-0.7.1 \
  --mount=from=crate_out-070c9ebb8be425b0,dst=/tmp/clis-qcow2-rs_0-1-2/release/build/memoffset-070c9ebb8be425b0/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="memoffset" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memoffset-0.7.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memoffset-0.7.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Gilad Naaman <gilad.naaman@gmail.com>" \
        CARGO_PKG_DESCRIPTION="offset_of functionality for Rust structs." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="memoffset" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Gilnaa/memoffset" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.7.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/memoffset-070c9ebb8be425b0/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'memoffset' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "unstable_const"))' '-C' 'metadata=914e35361026efc3' '-C' 'extra-filename=-457bc8526d8fdae9' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' '--cfg' 'tuple_ty' '--cfg' 'allow_clippy' '--cfg' 'maybe_uninit' '--cfg' 'doctests' '--cfg' 'raw_ref_macros' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memoffset-0.7.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-457bc8526d8fdae9
COPY --from=dep-l-memoffset-0.7.1-457bc8526d8fdae9 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-457bc8526d8fdae9* /

FROM scratch AS cratesio-nix-0.26.4
ADD --chmod=0664 --checksum=sha256:598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b \
  https://static.crates.io/crates/nix/nix-0.26.4.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-nix-0.26.4-7f0bfa3f5c36603f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-nix-0.26.4,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.26.4 \
  --mount=from=out-70ce9f1f2fa253bc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta,source=/libbitflags-70ce9f1f2fa253bc.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-457bc8526d8fdae9,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemoffset-457bc8526d8fdae9.rmeta,source=/libmemoffset-457bc8526d8fdae9.rmeta \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta,source=/libpin_utils-b74f2a8eb0482878.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="nix" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.26.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.26.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="The nix-rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Rust friendly bindings to *nix APIs" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="nix" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/nix-rust/nix" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.26.4" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="26" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'nix' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="acct"' '--cfg' 'feature="aio"' '--cfg' 'feature="default"' '--cfg' 'feature="dir"' '--cfg' 'feature="env"' '--cfg' 'feature="event"' '--cfg' 'feature="feature"' '--cfg' 'feature="fs"' '--cfg' 'feature="hostname"' '--cfg' 'feature="inotify"' '--cfg' 'feature="ioctl"' '--cfg' 'feature="kmod"' '--cfg' 'feature="memoffset"' '--cfg' 'feature="mman"' '--cfg' 'feature="mount"' '--cfg' 'feature="mqueue"' '--cfg' 'feature="net"' '--cfg' 'feature="personality"' '--cfg' 'feature="pin-utils"' '--cfg' 'feature="poll"' '--cfg' 'feature="process"' '--cfg' 'feature="pthread"' '--cfg' 'feature="ptrace"' '--cfg' 'feature="quota"' '--cfg' 'feature="reboot"' '--cfg' 'feature="resource"' '--cfg' 'feature="sched"' '--cfg' 'feature="signal"' '--cfg' 'feature="socket"' '--cfg' 'feature="term"' '--cfg' 'feature="time"' '--cfg' 'feature="ucontext"' '--cfg' 'feature="uio"' '--cfg' 'feature="user"' '--cfg' 'feature="zerocopy"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("acct", "aio", "default", "dir", "env", "event", "feature", "fs", "hostname", "inotify", "ioctl", "kmod", "memoffset", "mman", "mount", "mqueue", "net", "personality", "pin-utils", "poll", "process", "pthread", "ptrace", "quota", "reboot", "resource", "sched", "signal", "socket", "term", "time", "ucontext", "uio", "user", "zerocopy"))' '-C' 'metadata=f3a6a5a11d2fc901' '-C' 'extra-filename=-7f0bfa3f5c36603f' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'bitflags=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta' '--extern' 'cfg_if=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--extern' 'memoffset=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemoffset-457bc8526d8fdae9.rmeta' '--extern' 'pin_utils=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.26.4/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7f0bfa3f5c36603f
COPY --from=dep-l-nix-0.26.4-7f0bfa3f5c36603f /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7f0bfa3f5c36603f* /

FROM scratch AS cratesio-rustversion-1.0.14
ADD --chmod=0664 --checksum=sha256:7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4 \
  https://static.crates.io/crates/rustversion/rustversion-1.0.14.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-rustversion-1.0.14-7101e17005bf0139
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-rustversion-1.0.14,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustversion-1.0.14 \
  --mount=from=crate_out-c162134b3663fe67,dst=/tmp/clis-qcow2-rs_0-1-2/release/build/rustversion-c162134b3663fe67/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rustversion" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustversion-1.0.14" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustversion-1.0.14/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Conditional compilation according to rustc compiler version" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustversion" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/rustversion" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="1.0.14" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="14" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/rustversion-c162134b3663fe67/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'rustversion' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=6de6f96f7d125b7e' '-C' 'extra-filename=-7101e17005bf0139' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustversion-1.0.14/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7101e17005bf0139
COPY --from=dep-p-rustversion-1.0.14-7101e17005bf0139 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7101e17005bf0139* /

FROM scratch AS cratesio-io-uring-0.5.13
ADD --chmod=0664 --checksum=sha256:dd1e1a01cfb924fd8c5c43b6827965db394f5a3a16c599ce03452266e1cf984c \
  https://static.crates.io/crates/io-uring/io-uring-0.5.13.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-io-uring-0.5.13-99b257aee1025add
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-io-uring-0.5.13,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/io-uring-0.5.13 \
  --mount=from=out-70ce9f1f2fa253bc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta,source=/libbitflags-70ce9f1f2fa253bc.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="io_uring" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/io-uring-0.5.13" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/io-uring-0.5.13/Cargo.toml" \
        CARGO_PKG_AUTHORS="quininer <quininer@live.com>" \
        CARGO_PKG_DESCRIPTION="The low-level `io_uring` userspace interface for Rust" \
        CARGO_PKG_HOMEPAGE="https://github.com/tokio-rs/io-uring" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="io-uring" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/io-uring" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.5.13" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="13" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-qcow2-rs_0-1-2/release/build/io-uring-f4f0861dc23bde78/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'io_uring' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="unstable"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bindgen", "direct-syscall", "io_safety", "overwrite", "sc", "unstable"))' '-C' 'metadata=356f6cb17e01f45e' '-C' 'extra-filename=-99b257aee1025add' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'bitflags=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/io-uring-0.5.13/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-99b257aee1025add
COPY --from=dep-l-io-uring-0.5.13-99b257aee1025add /tmp/clis-qcow2-rs_0-1-2/release/deps/*-99b257aee1025add* /

FROM scratch AS cratesio-scoped-tls-1.0.1
ADD --chmod=0664 --checksum=sha256:e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294 \
  https://static.crates.io/crates/scoped-tls/scoped-tls-1.0.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-scoped-tls-1.0.1-7cdf4580d43854fe
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-scoped-tls-1.0.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scoped-tls-1.0.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="scoped_tls" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scoped-tls-1.0.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scoped-tls-1.0.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="Library implementation of the standard library's old `scoped_thread_local!`\nmacro for providing scoped access to thread local storage (TLS) so any type can\nbe stored into TLS.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/scoped-tls" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="scoped-tls" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/scoped-tls" \
        CARGO_PKG_RUST_VERSION="1.59" \
        CARGO_PKG_VERSION="1.0.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'scoped_tls' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=0d43bcc8f8632466' '-C' 'extra-filename=-7cdf4580d43854fe' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/scoped-tls-1.0.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7cdf4580d43854fe
COPY --from=dep-l-scoped-tls-1.0.1-7cdf4580d43854fe /tmp/clis-qcow2-rs_0-1-2/release/deps/*-7cdf4580d43854fe* /

FROM scratch AS cratesio-socket2-0.4.10
ADD --chmod=0664 --checksum=sha256:9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d \
  https://static.crates.io/crates/socket2/socket2-0.4.10.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-socket2-0.4.10-570b139c3ac51dec
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-socket2-0.4.10,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.4.10 \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="socket2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.4.10" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.4.10/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Utilities for handling networking sockets with a maximal amount of configuration\npossible intended.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/socket2" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="socket2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/socket2" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.10" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="10" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'socket2' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="all"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("all"))' '-C' 'metadata=b18df9538052ee16' '-C' 'extra-filename=-570b139c3ac51dec' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.4.10/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-570b139c3ac51dec
COPY --from=dep-l-socket2-0.4.10-570b139c3ac51dec /tmp/clis-qcow2-rs_0-1-2/release/deps/*-570b139c3ac51dec* /

FROM scratch AS cratesio-tokio-uring-0.4.0
ADD --chmod=0664 --checksum=sha256:0d5e02bb137e030b3a547c65a3bd2f1836d66a97369fdcc69034002b10e155ef \
  https://static.crates.io/crates/tokio-uring/tokio-uring-0.4.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-tokio-uring-0.4.0-b839b9e50c923626
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-tokio-uring-0.4.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-uring-0.4.0 \
  --mount=from=out-99b257aee1025add,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libio_uring-99b257aee1025add.rmeta,source=/libio_uring-99b257aee1025add.rmeta \
  --mount=from=out-70ce9f1f2fa253bc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta,source=/libbitflags-70ce9f1f2fa253bc.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-7cdf4580d43854fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscoped_tls-7cdf4580d43854fe.rmeta,source=/libscoped_tls-7cdf4580d43854fe.rmeta \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta,source=/libslab-be8a800e18ea87ab.rmeta \
  --mount=from=out-570b139c3ac51dec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-570b139c3ac51dec.rmeta,source=/libsocket2-570b139c3ac51dec.rmeta \
  --mount=from=out-7dfa875e60cea25d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta,source=/libtokio-7dfa875e60cea25d.rmeta \
  --mount=from=out-d7b35eb956c1be36,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rmeta,source=/libbytes-d7b35eb956c1be36.rmeta \
  --mount=from=out-8b22b018b5891a0c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rmeta,source=/libmio-8b22b018b5891a0c.rmeta \
  --mount=from=out-abda958216542c23,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rmeta,source=/libnum_cpus-abda958216542c23.rmeta \
  --mount=from=out-4ac6edc772146637,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rmeta,source=/libparking_lot-4ac6edc772146637.rmeta \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta,source=/liblock_api-1a71aa69f2330c14.rmeta \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta,source=/libparking_lot_core-f8744ca11f01d51a.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-5395542b51c1f12e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rmeta,source=/libsignal_hook_registry-5395542b51c1f12e.rmeta \
  --mount=from=out-6ec2d9d16459980f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rmeta,source=/libsocket2-6ec2d9d16459980f.rmeta \
  --mount=from=out-01d4aecec31808fc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so,source=/libtokio_macros-01d4aecec31808fc.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tokio_uring" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-uring-0.4.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-uring-0.4.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="io-uring support for the Tokio asynchronous runtime.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tokio-uring" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio-uring" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'tokio_uring' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bytes"))' '-C' 'metadata=d50946da009443b3' '-C' 'extra-filename=-b839b9e50c923626' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'io_uring=/tmp/clis-qcow2-rs_0-1-2/release/deps/libio_uring-99b257aee1025add.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--extern' 'scoped_tls=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscoped_tls-7cdf4580d43854fe.rmeta' '--extern' 'slab=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta' '--extern' 'socket2=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-570b139c3ac51dec.rmeta' '--extern' 'tokio=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-uring-0.4.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b839b9e50c923626
COPY --from=dep-l-tokio-uring-0.4.0-b839b9e50c923626 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-b839b9e50c923626* /

FROM scratch AS cratesio-qcow2-rs-0.1.2
ADD --chmod=0664 --checksum=sha256:cfa6f466b260b97fbe7d1f6489758bb8341e8db146f8848c2a3b17810f9136a3 \
  https://static.crates.io/crates/qcow2-rs/qcow2-rs-0.1.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-qcow2-rs-0.1.2-c30389ddf6bb942e
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-qcow2-rs-0.1.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2 \
  --mount=from=out-c336562a05f16d22,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_recursion-c336562a05f16d22.so,source=/libasync_recursion-c336562a05f16d22.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rmeta,source=/libproc_macro2-7c4c35625cab66f6.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rmeta,source=/libquote-230bf5113558ae5c.rmeta \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rmeta,source=/libsyn-09c08d3ded2362f6.rmeta \
  --mount=from=out-a5a31ac1f09098f3,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_trait-a5a31ac1f09098f3.so,source=/libasync_trait-a5a31ac1f09098f3.so \
  --mount=from=out-29ccad64725feb59,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbincode-29ccad64725feb59.rmeta,source=/libbincode-29ccad64725feb59.rmeta \
  --mount=from=out-dc85bb26f94c68ed,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rmeta,source=/libserde-dc85bb26f94c68ed.rmeta \
  --mount=from=out-ca901d6d165172fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde_derive-ca901d6d165172fe.so,source=/libserde_derive-ca901d6d165172fe.so \
  --mount=from=out-a63c22cfa59c094d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbyteorder-a63c22cfa59c094d.rmeta,source=/libbyteorder-a63c22cfa59c094d.rmeta \
  --mount=from=out-fe4290a3fc65d263,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap-fe4290a3fc65d263.rmeta,source=/libclap-fe4290a3fc65d263.rmeta \
  --mount=from=out-36625380256100cd,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_builder-36625380256100cd.rmeta,source=/libclap_builder-36625380256100cd.rmeta \
  --mount=from=out-fbacf1af5926bdd4,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstream-fbacf1af5926bdd4.rmeta,source=/libanstream-fbacf1af5926bdd4.rmeta \
  --mount=from=out-d0740faea4ed398d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rmeta,source=/libanstyle-d0740faea4ed398d.rmeta \
  --mount=from=out-a4729bcf670c741e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rmeta,source=/libanstyle_parse-a4729bcf670c741e.rmeta \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rmeta,source=/libutf8parse-522ff71b25340e24.rmeta \
  --mount=from=out-fcc94b35d76d0926,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rmeta,source=/libanstyle_query-fcc94b35d76d0926.rmeta \
  --mount=from=out-8e999bad75f58407,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rmeta,source=/libcolorchoice-8e999bad75f58407.rmeta \
  --mount=from=out-a859f5c15f1b3302,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_lex-a859f5c15f1b3302.rmeta,source=/libclap_lex-a859f5c15f1b3302.rmeta \
  --mount=from=out-fd42a4ea370e31ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libstrsim-fd42a4ea370e31ec.rmeta,source=/libstrsim-fd42a4ea370e31ec.rmeta \
  --mount=from=out-23f1d80895cbfd94,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so,source=/libclap_derive-23f1d80895cbfd94.so \
  --mount=from=out-2f387b4601b8b6b0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libheck-2f387b4601b8b6b0.rmeta,source=/libheck-2f387b4601b8b6b0.rmeta \
  --mount=from=out-bd9f44d75c9ea6f8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_num-bd9f44d75c9ea6f8.rmeta,source=/libclap_num-bd9f44d75c9ea6f8.rmeta \
  --mount=from=out-8fa1a5b116170862,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_traits-8fa1a5b116170862.rmeta,source=/libnum_traits-8fa1a5b116170862.rmeta \
  --mount=from=out-14f62bda870ceea0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libenv_logger-14f62bda870ceea0.rmeta,source=/libenv_logger-14f62bda870ceea0.rmeta \
  --mount=from=out-db60e10e02e74b95,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libatty-db60e10e02e74b95.rmeta,source=/libatty-db60e10e02e74b95.rmeta \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta,source=/liblibc-0addc1beddeea30f.rmeta \
  --mount=from=out-d4a86c79f6da3dd6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libhumantime-d4a86c79f6da3dd6.rmeta,source=/libhumantime-d4a86c79f6da3dd6.rmeta \
  --mount=from=out-ea8327ab44844df1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rmeta,source=/liblog-ea8327ab44844df1.rmeta \
  --mount=from=out-72624534882400be,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex-72624534882400be.rmeta,source=/libregex-72624534882400be.rmeta \
  --mount=from=out-2b15874b445115c1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rmeta,source=/libaho_corasick-2b15874b445115c1.rmeta \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rmeta,source=/libmemchr-08328c8b7673a58d.rmeta \
  --mount=from=out-ba444f6efb5958a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_automata-ba444f6efb5958a6.rmeta,source=/libregex_automata-ba444f6efb5958a6.rmeta \
  --mount=from=out-7a4e8cf437ea8df6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rmeta,source=/libregex_syntax-7a4e8cf437ea8df6.rmeta \
  --mount=from=out-eb1e3a5a15a3aa8c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtermcolor-eb1e3a5a15a3aa8c.rmeta,source=/libtermcolor-eb1e3a5a15a3aa8c.rmeta \
  --mount=from=out-d32fbdba785e08a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures-d32fbdba785e08a6.rmeta,source=/libfutures-d32fbdba785e08a6.rmeta \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rmeta,source=/libfutures_channel-ad9d7b2de9358699.rmeta \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rmeta,source=/libfutures_core-1d93d74bf27fab54.rmeta \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rmeta,source=/libfutures_sink-6ec89d477b5d3e53.rmeta \
  --mount=from=out-0c9e132561e25190,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_executor-0c9e132561e25190.rmeta,source=/libfutures_executor-0c9e132561e25190.rmeta \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rmeta,source=/libfutures_task-f04cff00a4d400c7.rmeta \
  --mount=from=out-b2a8e6e2e33ce088,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rmeta,source=/libfutures_util-b2a8e6e2e33ce088.rmeta \
  --mount=from=out-9a295684e8a14a09,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rmeta,source=/libfutures_io-9a295684e8a14a09.rmeta \
  --mount=from=out-d6b5133ea5763a96,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so,source=/libfutures_macro-d6b5133ea5763a96.so \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rmeta,source=/libpin_project_lite-a73e0fc4c66dd601.rmeta \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rmeta,source=/libpin_utils-b74f2a8eb0482878.rmeta \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rmeta,source=/libslab-be8a800e18ea87ab.rmeta \
  --mount=from=out-a4b0a3c89e6f82ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_locks-a4b0a3c89e6f82ec.rmeta,source=/libfutures_locks-a4b0a3c89e6f82ec.rmeta \
  --mount=from=out-7dfa875e60cea25d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta,source=/libtokio-7dfa875e60cea25d.rmeta \
  --mount=from=out-d7b35eb956c1be36,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rmeta,source=/libbytes-d7b35eb956c1be36.rmeta \
  --mount=from=out-8b22b018b5891a0c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rmeta,source=/libmio-8b22b018b5891a0c.rmeta \
  --mount=from=out-abda958216542c23,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rmeta,source=/libnum_cpus-abda958216542c23.rmeta \
  --mount=from=out-4ac6edc772146637,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rmeta,source=/libparking_lot-4ac6edc772146637.rmeta \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rmeta,source=/liblock_api-1a71aa69f2330c14.rmeta \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rmeta,source=/libscopeguard-b477fb82efd13fea.rmeta \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rmeta,source=/libparking_lot_core-f8744ca11f01d51a.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rmeta,source=/libsmallvec-db7ba43bb64f435f.rmeta \
  --mount=from=out-5395542b51c1f12e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rmeta,source=/libsignal_hook_registry-5395542b51c1f12e.rmeta \
  --mount=from=out-6ec2d9d16459980f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rmeta,source=/libsocket2-6ec2d9d16459980f.rmeta \
  --mount=from=out-01d4aecec31808fc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so,source=/libtokio_macros-01d4aecec31808fc.so \
  --mount=from=out-df26b227e0244749,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libminiz_oxide-df26b227e0244749.rmeta,source=/libminiz_oxide-df26b227e0244749.rmeta \
  --mount=from=out-ee21f8d21d0adcf2,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libadler-ee21f8d21d0adcf2.rmeta,source=/libadler-ee21f8d21d0adcf2.rmeta \
  --mount=from=out-7f0bfa3f5c36603f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnix-7f0bfa3f5c36603f.rmeta,source=/libnix-7f0bfa3f5c36603f.rmeta \
  --mount=from=out-70ce9f1f2fa253bc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rmeta,source=/libbitflags-70ce9f1f2fa253bc.rmeta \
  --mount=from=out-457bc8526d8fdae9,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemoffset-457bc8526d8fdae9.rmeta,source=/libmemoffset-457bc8526d8fdae9.rmeta \
  --mount=from=out-7101e17005bf0139,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/librustversion-7101e17005bf0139.so,source=/librustversion-7101e17005bf0139.so \
  --mount=from=out-b839b9e50c923626,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_uring-b839b9e50c923626.rmeta,source=/libtokio_uring-b839b9e50c923626.rmeta \
  --mount=from=out-99b257aee1025add,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libio_uring-99b257aee1025add.rmeta,source=/libio_uring-99b257aee1025add.rmeta \
  --mount=from=out-7cdf4580d43854fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscoped_tls-7cdf4580d43854fe.rmeta,source=/libscoped_tls-7cdf4580d43854fe.rmeta \
  --mount=from=out-570b139c3ac51dec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-570b139c3ac51dec.rmeta,source=/libsocket2-570b139c3ac51dec.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="qcow2_rs" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Ming Lei <tom.leiming@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A library for read/write qcow2 image in async/await" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="qcow2-rs" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/ming1/qcow2-rs.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'qcow2_rs' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=6b7ea755b9cea0ff' '-C' 'extra-filename=-c30389ddf6bb942e' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'async_recursion=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_recursion-c336562a05f16d22.so' '--extern' 'async_trait=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_trait-a5a31ac1f09098f3.so' '--extern' 'bincode=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbincode-29ccad64725feb59.rmeta' '--extern' 'byteorder=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbyteorder-a63c22cfa59c094d.rmeta' '--extern' 'clap=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap-fe4290a3fc65d263.rmeta' '--extern' 'clap_num=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_num-bd9f44d75c9ea6f8.rmeta' '--extern' 'clap_derive=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so' '--extern' 'env_logger=/tmp/clis-qcow2-rs_0-1-2/release/deps/libenv_logger-14f62bda870ceea0.rmeta' '--extern' 'futures=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures-d32fbdba785e08a6.rmeta' '--extern' 'futures_locks=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_locks-a4b0a3c89e6f82ec.rmeta' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rmeta' '--extern' 'log=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rmeta' '--extern' 'miniz_oxide=/tmp/clis-qcow2-rs_0-1-2/release/deps/libminiz_oxide-df26b227e0244749.rmeta' '--extern' 'nix=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnix-7f0bfa3f5c36603f.rmeta' '--extern' 'rustversion=/tmp/clis-qcow2-rs_0-1-2/release/deps/librustversion-7101e17005bf0139.so' '--extern' 'serde=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rmeta' '--extern' 'tokio=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rmeta' '--extern' 'tokio_uring=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_uring-b839b9e50c923626.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-c30389ddf6bb942e
COPY --from=dep-l-qcow2-rs-0.1.2-c30389ddf6bb942e /tmp/clis-qcow2-rs_0-1-2/release/deps/*-c30389ddf6bb942e* /


FROM rust-base AS dep-b-qcow2-rs-0.1.2-aae81d819d383e78
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-qcow2-rs_0-1-2/release/deps
RUN \
  --mount=from=cratesio-qcow2-rs-0.1.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2 \
  --mount=from=out-c336562a05f16d22,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_recursion-c336562a05f16d22.so,source=/libasync_recursion-c336562a05f16d22.so \
  --mount=from=out-7c4c35625cab66f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libproc_macro2-7c4c35625cab66f6.rlib,source=/libproc_macro2-7c4c35625cab66f6.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-230bf5113558ae5c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libquote-230bf5113558ae5c.rlib,source=/libquote-230bf5113558ae5c.rlib \
  --mount=from=out-09c08d3ded2362f6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsyn-09c08d3ded2362f6.rlib,source=/libsyn-09c08d3ded2362f6.rlib \
  --mount=from=out-a5a31ac1f09098f3,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_trait-a5a31ac1f09098f3.so,source=/libasync_trait-a5a31ac1f09098f3.so \
  --mount=from=out-29ccad64725feb59,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbincode-29ccad64725feb59.rlib,source=/libbincode-29ccad64725feb59.rlib \
  --mount=from=out-dc85bb26f94c68ed,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rlib,source=/libserde-dc85bb26f94c68ed.rlib \
  --mount=from=out-ca901d6d165172fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde_derive-ca901d6d165172fe.so,source=/libserde_derive-ca901d6d165172fe.so \
  --mount=from=out-a63c22cfa59c094d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbyteorder-a63c22cfa59c094d.rlib,source=/libbyteorder-a63c22cfa59c094d.rlib \
  --mount=from=out-fe4290a3fc65d263,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap-fe4290a3fc65d263.rlib,source=/libclap-fe4290a3fc65d263.rlib \
  --mount=from=out-36625380256100cd,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_builder-36625380256100cd.rlib,source=/libclap_builder-36625380256100cd.rlib \
  --mount=from=out-fbacf1af5926bdd4,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstream-fbacf1af5926bdd4.rlib,source=/libanstream-fbacf1af5926bdd4.rlib \
  --mount=from=out-d0740faea4ed398d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle-d0740faea4ed398d.rlib,source=/libanstyle-d0740faea4ed398d.rlib \
  --mount=from=out-a4729bcf670c741e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_parse-a4729bcf670c741e.rlib,source=/libanstyle_parse-a4729bcf670c741e.rlib \
  --mount=from=out-522ff71b25340e24,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libutf8parse-522ff71b25340e24.rlib,source=/libutf8parse-522ff71b25340e24.rlib \
  --mount=from=out-fcc94b35d76d0926,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libanstyle_query-fcc94b35d76d0926.rlib,source=/libanstyle_query-fcc94b35d76d0926.rlib \
  --mount=from=out-8e999bad75f58407,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcolorchoice-8e999bad75f58407.rlib,source=/libcolorchoice-8e999bad75f58407.rlib \
  --mount=from=out-a859f5c15f1b3302,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_lex-a859f5c15f1b3302.rlib,source=/libclap_lex-a859f5c15f1b3302.rlib \
  --mount=from=out-fd42a4ea370e31ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libstrsim-fd42a4ea370e31ec.rlib,source=/libstrsim-fd42a4ea370e31ec.rlib \
  --mount=from=out-23f1d80895cbfd94,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so,source=/libclap_derive-23f1d80895cbfd94.so \
  --mount=from=out-2f387b4601b8b6b0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libheck-2f387b4601b8b6b0.rlib,source=/libheck-2f387b4601b8b6b0.rlib \
  --mount=from=out-bd9f44d75c9ea6f8,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_num-bd9f44d75c9ea6f8.rlib,source=/libclap_num-bd9f44d75c9ea6f8.rlib \
  --mount=from=out-8fa1a5b116170862,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_traits-8fa1a5b116170862.rlib,source=/libnum_traits-8fa1a5b116170862.rlib \
  --mount=from=out-14f62bda870ceea0,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libenv_logger-14f62bda870ceea0.rlib,source=/libenv_logger-14f62bda870ceea0.rlib \
  --mount=from=out-db60e10e02e74b95,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libatty-db60e10e02e74b95.rlib,source=/libatty-db60e10e02e74b95.rlib \
  --mount=from=out-0addc1beddeea30f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rlib,source=/liblibc-0addc1beddeea30f.rlib \
  --mount=from=out-d4a86c79f6da3dd6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libhumantime-d4a86c79f6da3dd6.rlib,source=/libhumantime-d4a86c79f6da3dd6.rlib \
  --mount=from=out-ea8327ab44844df1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rlib,source=/liblog-ea8327ab44844df1.rlib \
  --mount=from=out-72624534882400be,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex-72624534882400be.rlib,source=/libregex-72624534882400be.rlib \
  --mount=from=out-2b15874b445115c1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libaho_corasick-2b15874b445115c1.rlib,source=/libaho_corasick-2b15874b445115c1.rlib \
  --mount=from=out-08328c8b7673a58d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemchr-08328c8b7673a58d.rlib,source=/libmemchr-08328c8b7673a58d.rlib \
  --mount=from=out-ba444f6efb5958a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_automata-ba444f6efb5958a6.rlib,source=/libregex_automata-ba444f6efb5958a6.rlib \
  --mount=from=out-7a4e8cf437ea8df6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libregex_syntax-7a4e8cf437ea8df6.rlib,source=/libregex_syntax-7a4e8cf437ea8df6.rlib \
  --mount=from=out-eb1e3a5a15a3aa8c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtermcolor-eb1e3a5a15a3aa8c.rlib,source=/libtermcolor-eb1e3a5a15a3aa8c.rlib \
  --mount=from=out-d32fbdba785e08a6,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures-d32fbdba785e08a6.rlib,source=/libfutures-d32fbdba785e08a6.rlib \
  --mount=from=out-ad9d7b2de9358699,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_channel-ad9d7b2de9358699.rlib,source=/libfutures_channel-ad9d7b2de9358699.rlib \
  --mount=from=out-1d93d74bf27fab54,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_core-1d93d74bf27fab54.rlib,source=/libfutures_core-1d93d74bf27fab54.rlib \
  --mount=from=out-6ec89d477b5d3e53,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_sink-6ec89d477b5d3e53.rlib,source=/libfutures_sink-6ec89d477b5d3e53.rlib \
  --mount=from=out-0c9e132561e25190,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_executor-0c9e132561e25190.rlib,source=/libfutures_executor-0c9e132561e25190.rlib \
  --mount=from=out-f04cff00a4d400c7,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_task-f04cff00a4d400c7.rlib,source=/libfutures_task-f04cff00a4d400c7.rlib \
  --mount=from=out-b2a8e6e2e33ce088,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_util-b2a8e6e2e33ce088.rlib,source=/libfutures_util-b2a8e6e2e33ce088.rlib \
  --mount=from=out-9a295684e8a14a09,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_io-9a295684e8a14a09.rlib,source=/libfutures_io-9a295684e8a14a09.rlib \
  --mount=from=out-d6b5133ea5763a96,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_macro-d6b5133ea5763a96.so,source=/libfutures_macro-d6b5133ea5763a96.so \
  --mount=from=out-a73e0fc4c66dd601,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_project_lite-a73e0fc4c66dd601.rlib,source=/libpin_project_lite-a73e0fc4c66dd601.rlib \
  --mount=from=out-b74f2a8eb0482878,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libpin_utils-b74f2a8eb0482878.rlib,source=/libpin_utils-b74f2a8eb0482878.rlib \
  --mount=from=out-be8a800e18ea87ab,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libslab-be8a800e18ea87ab.rlib,source=/libslab-be8a800e18ea87ab.rlib \
  --mount=from=out-a4b0a3c89e6f82ec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_locks-a4b0a3c89e6f82ec.rlib,source=/libfutures_locks-a4b0a3c89e6f82ec.rlib \
  --mount=from=out-7dfa875e60cea25d,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rlib,source=/libtokio-7dfa875e60cea25d.rlib \
  --mount=from=out-d7b35eb956c1be36,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbytes-d7b35eb956c1be36.rlib,source=/libbytes-d7b35eb956c1be36.rlib \
  --mount=from=out-8b22b018b5891a0c,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmio-8b22b018b5891a0c.rlib,source=/libmio-8b22b018b5891a0c.rlib \
  --mount=from=out-abda958216542c23,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnum_cpus-abda958216542c23.rlib,source=/libnum_cpus-abda958216542c23.rlib \
  --mount=from=out-4ac6edc772146637,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot-4ac6edc772146637.rlib,source=/libparking_lot-4ac6edc772146637.rlib \
  --mount=from=out-1a71aa69f2330c14,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblock_api-1a71aa69f2330c14.rlib,source=/liblock_api-1a71aa69f2330c14.rlib \
  --mount=from=out-b477fb82efd13fea,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscopeguard-b477fb82efd13fea.rlib,source=/libscopeguard-b477fb82efd13fea.rlib \
  --mount=from=out-f8744ca11f01d51a,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libparking_lot_core-f8744ca11f01d51a.rlib,source=/libparking_lot_core-f8744ca11f01d51a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-db7ba43bb64f435f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsmallvec-db7ba43bb64f435f.rlib,source=/libsmallvec-db7ba43bb64f435f.rlib \
  --mount=from=out-5395542b51c1f12e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsignal_hook_registry-5395542b51c1f12e.rlib,source=/libsignal_hook_registry-5395542b51c1f12e.rlib \
  --mount=from=out-6ec2d9d16459980f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-6ec2d9d16459980f.rlib,source=/libsocket2-6ec2d9d16459980f.rlib \
  --mount=from=out-01d4aecec31808fc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_macros-01d4aecec31808fc.so,source=/libtokio_macros-01d4aecec31808fc.so \
  --mount=from=out-df26b227e0244749,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libminiz_oxide-df26b227e0244749.rlib,source=/libminiz_oxide-df26b227e0244749.rlib \
  --mount=from=out-ee21f8d21d0adcf2,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libadler-ee21f8d21d0adcf2.rlib,source=/libadler-ee21f8d21d0adcf2.rlib \
  --mount=from=out-7f0bfa3f5c36603f,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnix-7f0bfa3f5c36603f.rlib,source=/libnix-7f0bfa3f5c36603f.rlib \
  --mount=from=out-70ce9f1f2fa253bc,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbitflags-70ce9f1f2fa253bc.rlib,source=/libbitflags-70ce9f1f2fa253bc.rlib \
  --mount=from=out-457bc8526d8fdae9,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libmemoffset-457bc8526d8fdae9.rlib,source=/libmemoffset-457bc8526d8fdae9.rlib \
  --mount=from=out-c30389ddf6bb942e,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libqcow2_rs-c30389ddf6bb942e.rlib,source=/libqcow2_rs-c30389ddf6bb942e.rlib \
  --mount=from=out-7101e17005bf0139,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/librustversion-7101e17005bf0139.so,source=/librustversion-7101e17005bf0139.so \
  --mount=from=out-b839b9e50c923626,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_uring-b839b9e50c923626.rlib,source=/libtokio_uring-b839b9e50c923626.rlib \
  --mount=from=out-99b257aee1025add,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libio_uring-99b257aee1025add.rlib,source=/libio_uring-99b257aee1025add.rlib \
  --mount=from=out-7cdf4580d43854fe,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libscoped_tls-7cdf4580d43854fe.rlib,source=/libscoped_tls-7cdf4580d43854fe.rlib \
  --mount=from=out-570b139c3ac51dec,dst=/tmp/clis-qcow2-rs_0-1-2/release/deps/libsocket2-570b139c3ac51dec.rlib,source=/libsocket2-570b139c3ac51dec.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_BIN_NAME="qcow2" \
        CARGO_CRATE_NAME="qcow2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Ming Lei <tom.leiming@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A library for read/write qcow2 image in async/await" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="qcow2-rs" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/ming1/qcow2-rs.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'qcow2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'bin' '--emit' 'dep-info,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=ae4e79a171aa1eb1' '-C' 'extra-filename=-aae81d819d383e78' '--out-dir' '/tmp/clis-qcow2-rs_0-1-2/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-qcow2-rs_0-1-2/release/deps' '--extern' 'async_recursion=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_recursion-c336562a05f16d22.so' '--extern' 'async_trait=/tmp/clis-qcow2-rs_0-1-2/release/deps/libasync_trait-a5a31ac1f09098f3.so' '--extern' 'bincode=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbincode-29ccad64725feb59.rlib' '--extern' 'byteorder=/tmp/clis-qcow2-rs_0-1-2/release/deps/libbyteorder-a63c22cfa59c094d.rlib' '--extern' 'clap=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap-fe4290a3fc65d263.rlib' '--extern' 'clap_num=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_num-bd9f44d75c9ea6f8.rlib' '--extern' 'clap_derive=/tmp/clis-qcow2-rs_0-1-2/release/deps/libclap_derive-23f1d80895cbfd94.so' '--extern' 'env_logger=/tmp/clis-qcow2-rs_0-1-2/release/deps/libenv_logger-14f62bda870ceea0.rlib' '--extern' 'futures=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures-d32fbdba785e08a6.rlib' '--extern' 'futures_locks=/tmp/clis-qcow2-rs_0-1-2/release/deps/libfutures_locks-a4b0a3c89e6f82ec.rlib' '--extern' 'libc=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblibc-0addc1beddeea30f.rlib' '--extern' 'log=/tmp/clis-qcow2-rs_0-1-2/release/deps/liblog-ea8327ab44844df1.rlib' '--extern' 'miniz_oxide=/tmp/clis-qcow2-rs_0-1-2/release/deps/libminiz_oxide-df26b227e0244749.rlib' '--extern' 'nix=/tmp/clis-qcow2-rs_0-1-2/release/deps/libnix-7f0bfa3f5c36603f.rlib' '--extern' 'qcow2_rs=/tmp/clis-qcow2-rs_0-1-2/release/deps/libqcow2_rs-c30389ddf6bb942e.rlib' '--extern' 'rustversion=/tmp/clis-qcow2-rs_0-1-2/release/deps/librustversion-7101e17005bf0139.so' '--extern' 'serde=/tmp/clis-qcow2-rs_0-1-2/release/deps/libserde-dc85bb26f94c68ed.rlib' '--extern' 'tokio=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio-7dfa875e60cea25d.rlib' '--extern' 'tokio_uring=/tmp/clis-qcow2-rs_0-1-2/release/deps/libtokio_uring-b839b9e50c923626.rlib' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/qcow2-rs-0.1.2/src/main.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-aae81d819d383e78
COPY --from=dep-b-qcow2-rs-0.1.2-aae81d819d383e78 /tmp/clis-qcow2-rs_0-1-2/release/deps/*-aae81d819d383e78* /

# Pipe this file to (not portable due to usage of local build contexts):
# DOCKER_BUILDKIT="1" \
#   docker --debug build --network=none --platform=local --pull=false --target=out-aae81d819d383e78 --output=type=local,dest=/tmp/clis-qcow2-rs_0-1-2/release/deps --build-context=crate_out-13057c050b88f322=/tmp/clis-qcow2-rs_0-1-2/release/build/num-traits-13057c050b88f322/out --build-context=crate_out-2620910b4a10dae9=/tmp/clis-qcow2-rs_0-1-2/release/build/slab-2620910b4a10dae9/out --build-context=crate_out-6fd90c9ce0b1f28e=/tmp/clis-qcow2-rs_0-1-2/release/build/lock_api-6fd90c9ce0b1f28e/out --build-context=crate_out-070c9ebb8be425b0=/tmp/clis-qcow2-rs_0-1-2/release/build/memoffset-070c9ebb8be425b0/out --build-context=crate_out-c162134b3663fe67=/tmp/clis-qcow2-rs_0-1-2/release/build/rustversion-c162134b3663fe67/out -
