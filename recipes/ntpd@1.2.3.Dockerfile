# syntax=docker.io/docker/dockerfile:1@sha256:b6afd42430b15f2d2a4c5a02b919e98a525b785b1aaff16747d2f623364e39b6
# check=error=true
# Generated by https://github.com/fenollp/supergreen v0.20.0

FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base

FROM scratch AS cratesio-unicode-ident-1.0.12
ADD --chmod=0664 --unpack=true --checksum=sha256:3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b \
  https://static.crates.io/crates/unicode-ident/unicode-ident-1.0.12.crate /
FROM rust-base AS dep-n-unicode-ident-1.0.12-4c1dc76c11b3deb8
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-unicode-ident-1.0.12,source=/unicode-ident-1.0.12,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_ident" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="(MIT OR Apache-2.0) AND Unicode-DFS-2016" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-ident" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/unicode-ident" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="1.0.12" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="12" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'unicode_ident' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=2f113e6ba7735965' '-C' 'extra-filename=-4c1dc76c11b3deb8' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-errcode
FROM scratch AS out-4c1dc76c11b3deb8
COPY --from=dep-n-unicode-ident-1.0.12-4c1dc76c11b3deb8 /tmp/clis-ntpd_1-2-3/release/deps/*-4c1dc76c11b3deb8* /

## this = "4c1dc76c11b3deb8"
## writes = [
##     "deps/unicode_ident-4c1dc76c11b3deb8.d",
##     "deps/libunicode_ident-4c1dc76c11b3deb8.rmeta",
##     "deps/libunicode_ident-4c1dc76c11b3deb8.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/unicode_ident-4c1dc76c11b3deb8.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-unicode-ident-1.0.12"
## script = '''
## FROM scratch AS cratesio-unicode-ident-1.0.12
## ADD --chmod=0664 --unpack=true --checksum=sha256:3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b \
##   https://static.crates.io/crates/unicode-ident/unicode-ident-1.0.12.crate /'''
## 
## [[stages]]
## name = "dep-n-unicode-ident-1.0.12-4c1dc76c11b3deb8"
## script = '''
## FROM rust-base AS dep-n-unicode-ident-1.0.12-4c1dc76c11b3deb8
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-unicode-ident-1.0.12,source=/unicode-ident-1.0.12,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="unicode_ident" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="(MIT OR Apache-2.0) AND Unicode-DFS-2016" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="unicode-ident" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/unicode-ident" \
##         CARGO_PKG_RUST_VERSION="1.31" \
##         CARGO_PKG_VERSION="1.0.12" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="12" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'unicode_ident' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=2f113e6ba7735965' '-C' 'extra-filename=-4c1dc76c11b3deb8' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-ident-1.0.12/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4c1dc76c11b3deb8-errcode'''
## 
## [[stages]]
## name = "out-4c1dc76c11b3deb8"
## script = """
## FROM scratch AS out-4c1dc76c11b3deb8
## COPY --from=dep-n-unicode-ident-1.0.12-4c1dc76c11b3deb8 /tmp/clis-ntpd_1-2-3/release/deps/*-4c1dc76c11b3deb8* /"""

FROM scratch AS cratesio-proc-macro2-1.0.86
ADD --chmod=0664 --unpack=true --checksum=sha256:5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77 \
  https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.86.crate /
FROM rust-base AS dep-n-proc-macro2-1.0.86-4be32d01ee2a9db1
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-proc-macro2-1.0.86,source=/proc-macro2-1.0.86,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86 \
  --mount=from=crate_out-e5fe159846b3109b,dst=/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/proc-macro2" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.86" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="86" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'proc_macro2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' '-C' 'metadata=f69b9a81d204e3b5' '-C' 'extra-filename=-4be32d01ee2a9db1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'unicode_ident=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' '--cfg' 'wrap_proc_macro' '--check-cfg' 'cfg(fuzzing)' '--check-cfg' 'cfg(no_is_available)' '--check-cfg' 'cfg(no_literal_byte_character)' '--check-cfg' 'cfg(no_literal_c_string)' '--check-cfg' 'cfg(no_source_text)' '--check-cfg' 'cfg(proc_macro_span)' '--check-cfg' 'cfg(procmacro2_backtrace)' '--check-cfg' 'cfg(procmacro2_nightly_testing)' '--check-cfg' 'cfg(procmacro2_semver_exempt)' '--check-cfg' 'cfg(randomize_layout)' '--check-cfg' 'cfg(span_locations)' '--check-cfg' 'cfg(super_unstable)' '--check-cfg' 'cfg(wrap_proc_macro)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-errcode
FROM scratch AS out-4be32d01ee2a9db1
COPY --from=dep-n-proc-macro2-1.0.86-4be32d01ee2a9db1 /tmp/clis-ntpd_1-2-3/release/deps/*-4be32d01ee2a9db1* /

## this = "4be32d01ee2a9db1"
## deps = ["4c1dc76c11b3deb8"]
## short_externs = ["4c1dc76c11b3deb8"]
## writes = [
##     "deps/proc_macro2-4be32d01ee2a9db1.d",
##     "deps/libproc_macro2-4be32d01ee2a9db1.rmeta",
##     "deps/libproc_macro2-4be32d01ee2a9db1.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/proc_macro2-4be32d01ee2a9db1.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-proc-macro2-1.0.86"
## script = '''
## FROM scratch AS cratesio-proc-macro2-1.0.86
## ADD --chmod=0664 --unpack=true --checksum=sha256:5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77 \
##   https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.86.crate /'''
## 
## [[stages]]
## name = "dep-n-proc-macro2-1.0.86-4be32d01ee2a9db1"
## script = '''
## FROM rust-base AS dep-n-proc-macro2-1.0.86-4be32d01ee2a9db1
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-proc-macro2-1.0.86,source=/proc-macro2-1.0.86,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86 \
##   --mount=from=crate_out-e5fe159846b3109b,dst=/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="proc_macro2" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>" \
##         CARGO_PKG_DESCRIPTION="A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="proc-macro2" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/proc-macro2" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="1.0.86" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="86" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'proc_macro2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' '-C' 'metadata=f69b9a81d204e3b5' '-C' 'extra-filename=-4be32d01ee2a9db1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'unicode_ident=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' '--cfg' 'wrap_proc_macro' '--check-cfg' 'cfg(fuzzing)' '--check-cfg' 'cfg(no_is_available)' '--check-cfg' 'cfg(no_literal_byte_character)' '--check-cfg' 'cfg(no_literal_c_string)' '--check-cfg' 'cfg(no_source_text)' '--check-cfg' 'cfg(proc_macro_span)' '--check-cfg' 'cfg(procmacro2_backtrace)' '--check-cfg' 'cfg(procmacro2_nightly_testing)' '--check-cfg' 'cfg(procmacro2_semver_exempt)' '--check-cfg' 'cfg(randomize_layout)' '--check-cfg' 'cfg(span_locations)' '--check-cfg' 'cfg(super_unstable)' '--check-cfg' 'cfg(wrap_proc_macro)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.86/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4be32d01ee2a9db1-errcode'''
## 
## [[stages]]
## name = "out-4be32d01ee2a9db1"
## script = """
## FROM scratch AS out-4be32d01ee2a9db1
## COPY --from=dep-n-proc-macro2-1.0.86-4be32d01ee2a9db1 /tmp/clis-ntpd_1-2-3/release/deps/*-4be32d01ee2a9db1* /"""

FROM scratch AS cratesio-quote-1.0.36
ADD --chmod=0664 --unpack=true --checksum=sha256:0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7 \
  https://static.crates.io/crates/quote/quote-1.0.36.crate /
FROM rust-base AS dep-n-quote-1.0.36-36ed05d339fc79f9
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-quote-1.0.36,source=/quote-1.0.36,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="quote" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Quasi-quoting macro quote!(...)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="quote" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/quote" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.36" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="36" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'quote' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "proc-macro"))' '-C' 'metadata=0783606bca663170' '-C' 'extra-filename=-36ed05d339fc79f9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-errcode
FROM scratch AS out-36ed05d339fc79f9
COPY --from=dep-n-quote-1.0.36-36ed05d339fc79f9 /tmp/clis-ntpd_1-2-3/release/deps/*-36ed05d339fc79f9* /

## this = "36ed05d339fc79f9"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
## ]
## writes = [
##     "deps/quote-36ed05d339fc79f9.d",
##     "deps/libquote-36ed05d339fc79f9.rmeta",
##     "deps/libquote-36ed05d339fc79f9.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/quote-36ed05d339fc79f9.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-quote-1.0.36"
## script = '''
## FROM scratch AS cratesio-quote-1.0.36
## ADD --chmod=0664 --unpack=true --checksum=sha256:0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7 \
##   https://static.crates.io/crates/quote/quote-1.0.36.crate /'''
## 
## [[stages]]
## name = "dep-n-quote-1.0.36-36ed05d339fc79f9"
## script = '''
## FROM rust-base AS dep-n-quote-1.0.36-36ed05d339fc79f9
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-quote-1.0.36,source=/quote-1.0.36,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="quote" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Quasi-quoting macro quote!(...)" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="quote" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/quote" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="1.0.36" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="36" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'quote' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "proc-macro"))' '-C' 'metadata=0783606bca663170' '-C' 'extra-filename=-36ed05d339fc79f9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.36/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-36ed05d339fc79f9-errcode'''
## 
## [[stages]]
## name = "out-36ed05d339fc79f9"
## script = """
## FROM scratch AS out-36ed05d339fc79f9
## COPY --from=dep-n-quote-1.0.36-36ed05d339fc79f9 /tmp/clis-ntpd_1-2-3/release/deps/*-36ed05d339fc79f9* /"""

FROM scratch AS cratesio-syn-2.0.70
ADD --chmod=0664 --unpack=true --checksum=sha256:2f0209b68b3613b093e0ec905354eccaedcfe83b8cb37cbdeae64026c3064c16 \
  https://static.crates.io/crates/syn/syn-2.0.70.crate /
FROM rust-base AS dep-n-syn-2.0.70-5c1d3e18a7dfcf78
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-syn-2.0.70,source=/syn-2.0.70,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="syn" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Parser for Rust source code" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="syn" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/syn" \
        CARGO_PKG_RUST_VERSION="1.61" \
        CARGO_PKG_VERSION="2.0.70" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="70" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'syn' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="clone-impls"' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="extra-traits"' '--cfg' 'feature="full"' '--cfg' 'feature="parsing"' '--cfg' 'feature="printing"' '--cfg' 'feature="proc-macro"' '--cfg' 'feature="visit-mut"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "test", "visit", "visit-mut"))' '-C' 'metadata=041ba5612439ef91' '-C' 'extra-filename=-5c1d3e18a7dfcf78' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta' '--extern' 'unicode_ident=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-errcode
FROM scratch AS out-5c1d3e18a7dfcf78
COPY --from=dep-n-syn-2.0.70-5c1d3e18a7dfcf78 /tmp/clis-ntpd_1-2-3/release/deps/*-5c1d3e18a7dfcf78* /

## this = "5c1d3e18a7dfcf78"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
## ]
## writes = [
##     "deps/syn-5c1d3e18a7dfcf78.d",
##     "deps/libsyn-5c1d3e18a7dfcf78.rmeta",
##     "deps/libsyn-5c1d3e18a7dfcf78.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/syn-5c1d3e18a7dfcf78.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-syn-2.0.70"
## script = '''
## FROM scratch AS cratesio-syn-2.0.70
## ADD --chmod=0664 --unpack=true --checksum=sha256:2f0209b68b3613b093e0ec905354eccaedcfe83b8cb37cbdeae64026c3064c16 \
##   https://static.crates.io/crates/syn/syn-2.0.70.crate /'''
## 
## [[stages]]
## name = "dep-n-syn-2.0.70-5c1d3e18a7dfcf78"
## script = '''
## FROM rust-base AS dep-n-syn-2.0.70-5c1d3e18a7dfcf78
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-syn-2.0.70,source=/syn-2.0.70,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="syn" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Parser for Rust source code" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="syn" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/syn" \
##         CARGO_PKG_RUST_VERSION="1.61" \
##         CARGO_PKG_VERSION="2.0.70" \
##         CARGO_PKG_VERSION_MAJOR="2" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="70" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'syn' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="clone-impls"' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="extra-traits"' '--cfg' 'feature="full"' '--cfg' 'feature="parsing"' '--cfg' 'feature="printing"' '--cfg' 'feature="proc-macro"' '--cfg' 'feature="visit-mut"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "test", "visit", "visit-mut"))' '-C' 'metadata=041ba5612439ef91' '-C' 'extra-filename=-5c1d3e18a7dfcf78' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta' '--extern' 'unicode_ident=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-2.0.70/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5c1d3e18a7dfcf78-errcode'''
## 
## [[stages]]
## name = "out-5c1d3e18a7dfcf78"
## script = """
## FROM scratch AS out-5c1d3e18a7dfcf78
## COPY --from=dep-n-syn-2.0.70-5c1d3e18a7dfcf78 /tmp/clis-ntpd_1-2-3/release/deps/*-5c1d3e18a7dfcf78* /"""

FROM scratch AS cratesio-async-trait-0.1.81
ADD --chmod=0664 --unpack=true --checksum=sha256:6e0c28dcc82d7c8ead5cb13beb15405b57b8546e93215673ff8ca0349a028107 \
  https://static.crates.io/crates/async-trait/async-trait-0.1.81.crate /
FROM rust-base AS dep-n-async-trait-0.1.81-2b00e18c8782890c
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-async-trait-0.1.81,source=/async-trait-0.1.81,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="async_trait" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Type erasure for async trait methods" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="async-trait" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/async-trait" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.1.81" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="81" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'async_trait' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=68f7bd92250192cb' '-C' 'extra-filename=-2b00e18c8782890c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-errcode
FROM scratch AS out-2b00e18c8782890c
COPY --from=dep-n-async-trait-0.1.81-2b00e18c8782890c /tmp/clis-ntpd_1-2-3/release/deps/*-2b00e18c8782890c* /

## this = "2b00e18c8782890c"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/async_trait-2b00e18c8782890c.d",
##     "deps/libasync_trait-2b00e18c8782890c.so",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/async_trait-2b00e18c8782890c.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-async-trait-0.1.81"
## script = '''
## FROM scratch AS cratesio-async-trait-0.1.81
## ADD --chmod=0664 --unpack=true --checksum=sha256:6e0c28dcc82d7c8ead5cb13beb15405b57b8546e93215673ff8ca0349a028107 \
##   https://static.crates.io/crates/async-trait/async-trait-0.1.81.crate /'''
## 
## [[stages]]
## name = "dep-n-async-trait-0.1.81-2b00e18c8782890c"
## script = '''
## FROM rust-base AS dep-n-async-trait-0.1.81-2b00e18c8782890c
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-async-trait-0.1.81,source=/async-trait-0.1.81,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="async_trait" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Type erasure for async trait methods" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="async-trait" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/async-trait" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.1.81" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="81" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'async_trait' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=68f7bd92250192cb' '-C' 'extra-filename=-2b00e18c8782890c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/async-trait-0.1.81/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2b00e18c8782890c-errcode'''
## 
## [[stages]]
## name = "out-2b00e18c8782890c"
## script = """
## FROM scratch AS out-2b00e18c8782890c
## COPY --from=dep-n-async-trait-0.1.81-2b00e18c8782890c /tmp/clis-ntpd_1-2-3/release/deps/*-2b00e18c8782890c* /"""

FROM scratch AS cratesio-libc-0.2.155
ADD --chmod=0664 --unpack=true --checksum=sha256:97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c \
  https://static.crates.io/crates/libc/libc-0.2.155.crate /
FROM rust-base AS dep-n-libc-0.2.155-a7905fdc410bdfce
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-libc-0.2.155,source=/libc-0.2.155,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="libc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Raw FFI bindings to platform libraries like libc.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/libc" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="libc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/libc" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.155" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="155" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/libc-00f4a26e03f113ca/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'libc' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' '-C' 'metadata=f6bb218c1ccc899a' '-C' 'extra-filename=-a7905fdc410bdfce' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' '--cfg' 'freebsd11' '--cfg' 'libc_priv_mod_use' '--cfg' 'libc_union' '--cfg' 'libc_const_size_of' '--cfg' 'libc_align' '--cfg' 'libc_int128' '--cfg' 'libc_core_cvoid' '--cfg' 'libc_packedN' '--cfg' 'libc_cfg_target_vendor' '--cfg' 'libc_non_exhaustive' '--cfg' 'libc_long_array' '--cfg' 'libc_ptr_addr_of' '--cfg' 'libc_underscore_const_names' '--cfg' 'libc_const_extern_fn' '--check-cfg' 'cfg(emscripten_new_stat_abi)' '--check-cfg' 'cfg(espidf_time64)' '--check-cfg' 'cfg(freebsd10)' '--check-cfg' 'cfg(freebsd11)' '--check-cfg' 'cfg(freebsd12)' '--check-cfg' 'cfg(freebsd13)' '--check-cfg' 'cfg(freebsd14)' '--check-cfg' 'cfg(freebsd15)' '--check-cfg' 'cfg(libc_align)' '--check-cfg' 'cfg(libc_cfg_target_vendor)' '--check-cfg' 'cfg(libc_const_extern_fn)' '--check-cfg' 'cfg(libc_const_extern_fn_unstable)' '--check-cfg' 'cfg(libc_const_size_of)' '--check-cfg' 'cfg(libc_core_cvoid)' '--check-cfg' 'cfg(libc_deny_warnings)' '--check-cfg' 'cfg(libc_int128)' '--check-cfg' 'cfg(libc_long_array)' '--check-cfg' 'cfg(libc_non_exhaustive)' '--check-cfg' 'cfg(libc_packedN)' '--check-cfg' 'cfg(libc_priv_mod_use)' '--check-cfg' 'cfg(libc_ptr_addr_of)' '--check-cfg' 'cfg(libc_thread_local)' '--check-cfg' 'cfg(libc_underscore_const_names)' '--check-cfg' 'cfg(libc_union)' '--check-cfg' 'cfg(target_os,values("switch","aix","ohos","hurd","visionos"))' '--check-cfg' 'cfg(target_env,values("illumos","wasi","aix","ohos"))' '--check-cfg' 'cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-errcode
FROM scratch AS out-a7905fdc410bdfce
COPY --from=dep-n-libc-0.2.155-a7905fdc410bdfce /tmp/clis-ntpd_1-2-3/release/deps/*-a7905fdc410bdfce* /

## this = "a7905fdc410bdfce"
## writes = [
##     "deps/libc-a7905fdc410bdfce.d",
##     "deps/liblibc-a7905fdc410bdfce.rmeta",
##     "deps/liblibc-a7905fdc410bdfce.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libc-a7905fdc410bdfce.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":54818,"byte_end":54824,"line_start":1447,"line_end":1447,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(missing_abi)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":54818,"byte_end":54824,"line_start":1447,"line_end":1447,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs:1447:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        extern {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(missing_abi)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":57462,"byte_end":57468,"line_start":1507,"line_end":1507,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":57462,"byte_end":57468,"line_start":1507,"line_end":1507,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs:1507:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        extern {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":59069,"byte_end":59075,"line_start":1548,"line_end":1548,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs","byte_start":59069,"byte_end":59075,"line_start":1548,"line_end":1548,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        extern {","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/mod.rs:1548:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        extern {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6858,"byte_end":6864,"line_start":194,"line_end":194,"column_start":43,"column_end":49,"is_primary":true,"text":[{"text":"                pub $($constness)* unsafe extern fn $i($($arg: $argty),*","highlight_start":43,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs","byte_start":54792,"byte_end":56298,"line_start":1540,"line_end":1587,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"f! {","highlight_start":1,"highlight_end":5},{"text":"    pub fn CMSG_FIRSTHDR(mhdr: *const msghdr) -> *mut cmsghdr {","highlight_start":1,"highlight_end":64},{"text":"        if (*mhdr).msg_controllen as usize >= ::mem::size_of::<cmsghdr>() {","highlight_start":1,"highlight_end":76},{"text":"            (*mhdr).msg_control as *mut cmsghdr","highlight_start":1,"highlight_end":48},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            0 as *mut cmsghdr","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_DATA(cmsg: *const cmsghdr) -> *mut ::c_uchar {","highlight_start":1,"highlight_end":63},{"text":"        cmsg.offset(1) as *mut ::c_uchar","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn CMSG_SPACE(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":62},{"text":"        (CMSG_ALIGN(length as usize) + CMSG_ALIGN(::mem::size_of::<cmsghdr>()))","highlight_start":1,"highlight_end":80},{"text":"            as ::c_uint","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn CMSG_LEN(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":60},{"text":"        CMSG_ALIGN(::mem::size_of::<cmsghdr>()) as ::c_uint + length","highlight_start":1,"highlight_end":69},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_CLR(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] &= !(1 << (fd % size));","highlight_start":1,"highlight_end":59},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ISSET(fd: ::c_int, set: *const fd_set) -> bool {","highlight_start":1,"highlight_end":63},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        return ((*set).fds_bits[fd / size] & (1 << (fd % size))) != 0","highlight_start":1,"highlight_end":70},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_SET(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] |= 1 << (fd % size);","highlight_start":1,"highlight_end":56},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ZERO(set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":45},{"text":"        for slot in (*set).fds_bits.iter_mut() {","highlight_start":1,"highlight_end":49},{"text":"            *slot = 0;","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6537,"byte_end":6551,"line_start":186,"line_end":186,"column_start":9,"column_end":23,"is_primary":false,"text":[{"text":"        macro_rules! f {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6858,"byte_end":6864,"line_start":194,"line_end":194,"column_start":43,"column_end":49,"is_primary":true,"text":[{"text":"                pub $($constness)* unsafe extern fn $i($($arg: $argty),*","highlight_start":43,"highlight_end":49}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs","byte_start":54792,"byte_end":56298,"line_start":1540,"line_end":1587,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"f! {","highlight_start":1,"highlight_end":5},{"text":"    pub fn CMSG_FIRSTHDR(mhdr: *const msghdr) -> *mut cmsghdr {","highlight_start":1,"highlight_end":64},{"text":"        if (*mhdr).msg_controllen as usize >= ::mem::size_of::<cmsghdr>() {","highlight_start":1,"highlight_end":76},{"text":"            (*mhdr).msg_control as *mut cmsghdr","highlight_start":1,"highlight_end":48},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            0 as *mut cmsghdr","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_DATA(cmsg: *const cmsghdr) -> *mut ::c_uchar {","highlight_start":1,"highlight_end":63},{"text":"        cmsg.offset(1) as *mut ::c_uchar","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn CMSG_SPACE(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":62},{"text":"        (CMSG_ALIGN(length as usize) + CMSG_ALIGN(::mem::size_of::<cmsghdr>()))","highlight_start":1,"highlight_end":80},{"text":"            as ::c_uint","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn CMSG_LEN(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":60},{"text":"        CMSG_ALIGN(::mem::size_of::<cmsghdr>()) as ::c_uint + length","highlight_start":1,"highlight_end":69},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_CLR(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] &= !(1 << (fd % size));","highlight_start":1,"highlight_end":59},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ISSET(fd: ::c_int, set: *const fd_set) -> bool {","highlight_start":1,"highlight_end":63},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        return ((*set).fds_bits[fd / size] & (1 << (fd % size))) != 0","highlight_start":1,"highlight_end":70},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_SET(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] |= 1 << (fd % size);","highlight_start":1,"highlight_end":56},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ZERO(set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":45},{"text":"        for slot in (*set).fds_bits.iter_mut() {","highlight_start":1,"highlight_end":49},{"text":"            *slot = 0;","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6537,"byte_end":6551,"line_start":186,"line_end":186,"column_start":9,"column_end":23,"is_primary":false,"text":[{"text":"        macro_rules! f {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs:194:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                pub $($constness)* unsafe extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs:1540:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1540\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mf! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1541\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CMSG_FIRSTHDR(mhdr: *const msghdr) -> *mut cmsghdr {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if (*mhdr).msg_controllen as usize >= ::mem::size_of::<cmsghdr>() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*mhdr).msg_control as *mut cmsghdr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7320,"byte_end":7326,"line_start":209,"line_end":209,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"                pub $($constness)* extern fn $i($($arg: $argty),*","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs","byte_start":56300,"byte_end":58092,"line_start":1589,"line_end":1665,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"safe_f! {","highlight_start":1,"highlight_end":10},{"text":"    pub fn SIGRTMAX() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmax() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SIGRTMIN() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmin() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSTOPPED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":57},{"text":"        (status & 0xff) == 0x7f","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WSTOPSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFCONTINUED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":59},{"text":"        status == 0xffff","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSIGNALED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":58},{"text":"        ((status & 0x7f) + 1) as i8 >= 2","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WTERMSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        status & 0x7f","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFEXITED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x7f) == 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WEXITSTATUS(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":61},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WCOREDUMP(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x80) != 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_EXITCODE(ret: ::c_int, sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":71},{"text":"        (ret << 8) | sig","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_STOPCODE(sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":57},{"text":"        (sig << 8) | 0x7f","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn QCMD(cmd: ::c_int, type_: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":67},{"text":"        (cmd << 8) | (type_ & 0x00ff)","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_COPIED(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_COPY","highlight_start":1,"highlight_end":23},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_CLASS(o: u8) -> u8 {","highlight_start":1,"highlight_end":46},{"text":"        o & IPOPT_CLASS_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_NUMBER(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_NUMBER_MASK","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPTOS_ECN(x: u8) -> u8 {","highlight_start":1,"highlight_end":44},{"text":"        x & ::IPTOS_ECN_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[allow(ellipsis_inclusive_range_patterns)]","highlight_start":1,"highlight_end":48},{"text":"    pub {const} fn KERNEL_VERSION(a: u32, b: u32, c: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"        ((a << 16) + (b << 8)) + match c {","highlight_start":1,"highlight_end":43},{"text":"            0 ... 255 => c,","highlight_start":1,"highlight_end":28},{"text":"            _ => 255,","highlight_start":1,"highlight_end":22},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"safe_f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7001,"byte_end":7020,"line_start":201,"line_end":201,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        macro_rules! safe_f {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7320,"byte_end":7326,"line_start":209,"line_end":209,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"                pub $($constness)* extern fn $i($($arg: $argty),*","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs","byte_start":56300,"byte_end":58092,"line_start":1589,"line_end":1665,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"safe_f! {","highlight_start":1,"highlight_end":10},{"text":"    pub fn SIGRTMAX() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmax() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SIGRTMIN() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmin() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSTOPPED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":57},{"text":"        (status & 0xff) == 0x7f","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WSTOPSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFCONTINUED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":59},{"text":"        status == 0xffff","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSIGNALED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":58},{"text":"        ((status & 0x7f) + 1) as i8 >= 2","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WTERMSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        status & 0x7f","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFEXITED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x7f) == 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WEXITSTATUS(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":61},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WCOREDUMP(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x80) != 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_EXITCODE(ret: ::c_int, sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":71},{"text":"        (ret << 8) | sig","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_STOPCODE(sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":57},{"text":"        (sig << 8) | 0x7f","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn QCMD(cmd: ::c_int, type_: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":67},{"text":"        (cmd << 8) | (type_ & 0x00ff)","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_COPIED(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_COPY","highlight_start":1,"highlight_end":23},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_CLASS(o: u8) -> u8 {","highlight_start":1,"highlight_end":46},{"text":"        o & IPOPT_CLASS_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_NUMBER(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_NUMBER_MASK","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPTOS_ECN(x: u8) -> u8 {","highlight_start":1,"highlight_end":44},{"text":"        x & ::IPTOS_ECN_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[allow(ellipsis_inclusive_range_patterns)]","highlight_start":1,"highlight_end":48},{"text":"    pub {const} fn KERNEL_VERSION(a: u32, b: u32, c: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"        ((a << 16) + (b << 8)) + match c {","highlight_start":1,"highlight_end":43},{"text":"            0 ... 255 => c,","highlight_start":1,"highlight_end":28},{"text":"            _ => 255,","highlight_start":1,"highlight_end":22},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"safe_f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7001,"byte_end":7020,"line_start":201,"line_end":201,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        macro_rules! safe_f {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs:209:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                pub $($constness)* extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/mod.rs:1589:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1589\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0msafe_f! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1590\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SIGRTMAX() -> ::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1591\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { __libc_current_sigrtmax() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1665\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `safe_f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6858,"byte_end":6864,"line_start":194,"line_end":194,"column_start":43,"column_end":49,"is_primary":true,"text":[{"text":"                pub $($constness)* unsafe extern fn $i($($arg: $argty),*","highlight_start":43,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs","byte_start":163263,"byte_end":167531,"line_start":4667,"line_end":4809,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"f! {","highlight_start":1,"highlight_end":5},{"text":"    pub fn NLA_ALIGN(len: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":48},{"text":"        return ((len) + NLA_ALIGNTO - 1) & !(NLA_ALIGNTO - 1)","highlight_start":1,"highlight_end":62},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_NXTHDR(mhdr: *const msghdr,","highlight_start":1,"highlight_end":44},{"text":"                       cmsg: *const cmsghdr) -> *mut cmsghdr {","highlight_start":1,"highlight_end":63},{"text":"        if ((*cmsg).cmsg_len as usize) < ::mem::size_of::<cmsghdr>() {","highlight_start":1,"highlight_end":71},{"text":"            return 0 as *mut cmsghdr;","highlight_start":1,"highlight_end":38},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"        let next = (cmsg as usize +","highlight_start":1,"highlight_end":36},{"text":"                    super::CMSG_ALIGN((*cmsg).cmsg_len as usize))","highlight_start":1,"highlight_end":66},{"text":"            as *mut cmsghdr;","highlight_start":1,"highlight_end":29},{"text":"        let max = (*mhdr).msg_control as usize","highlight_start":1,"highlight_end":47},{"text":"            + (*mhdr).msg_controllen as usize;","highlight_start":1,"highlight_end":47},{"text":"        if (next.wrapping_offset(1)) as usize > max ||","highlight_start":1,"highlight_end":55},{"text":"            next as usize + super::CMSG_ALIGN((*next).cmsg_len as usize) > max","highlight_start":1,"highlight_end":79},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            0 as *mut cmsghdr","highlight_start":1,"highlight_end":30},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            next as *mut cmsghdr","highlight_start":1,"highlight_end":33},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ALLOC_SIZE(count: ::c_int) -> ::size_t {","highlight_start":1,"highlight_end":56},{"text":"        let _dummy: cpu_set_t = ::mem::zeroed();","highlight_start":1,"highlight_end":49},{"text":"        let size_in_bits = 8 * ::mem::size_of_val(&_dummy.bits[0]);","highlight_start":1,"highlight_end":68},{"text":"        ((count as ::size_t + size_in_bits - 1) / 8) as ::size_t","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ZERO(cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":52},{"text":"        for slot in cpuset.bits.iter_mut() {","highlight_start":1,"highlight_end":45},{"text":"            *slot = 0;","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_SET(cpu: usize, cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits","highlight_start":1,"highlight_end":25},{"text":"            = 8 * ::mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc","highlight_start":1,"highlight_end":69},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        cpuset.bits[idx] |= 1 << offset;","highlight_start":1,"highlight_end":41},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_CLR(cpu: usize, cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits","highlight_start":1,"highlight_end":25},{"text":"            = 8 * ::mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc","highlight_start":1,"highlight_end":69},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        cpuset.bits[idx] &= !(1 << offset);","highlight_start":1,"highlight_end":44},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ISSET(cpu: usize, cpuset: &cpu_set_t) -> bool {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits = 8 * ::mem::size_of_val(&cpuset.bits[0]);","highlight_start":1,"highlight_end":68},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        0 != (cpuset.bits[idx] & (1 << offset))","highlight_start":1,"highlight_end":48},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_COUNT_S(size: usize, cpuset: &cpu_set_t) -> ::c_int {","highlight_start":1,"highlight_end":69},{"text":"        let mut s: u32 = 0;","highlight_start":1,"highlight_end":28},{"text":"        let size_of_mask = ::mem::size_of_val(&cpuset.bits[0]);","highlight_start":1,"highlight_end":64},{"text":"        for i in cpuset.bits[..(size / size_of_mask)].iter() {","highlight_start":1,"highlight_end":63},{"text":"            s += i.count_ones();","highlight_start":1,"highlight_end":33},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"        s as ::c_int","highlight_start":1,"highlight_end":21},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_COUNT(cpuset: &cpu_set_t) -> ::c_int {","highlight_start":1,"highlight_end":54},{"text":"        CPU_COUNT_S(::mem::size_of::<cpu_set_t>(), cpuset)","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_EQUAL(set1: &cpu_set_t, set2: &cpu_set_t) -> bool {","highlight_start":1,"highlight_end":67},{"text":"        set1.bits == set2.bits","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_INDEX(policy: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":55},{"text":"        policy >> 4 - 1","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_POLICY(policy: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":56},{"text":"        policy & SCTP_PR_SCTP_MASK","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_SET_POLICY(flags: &mut ::c_int, policy: ::c_int) -> () {","highlight_start":1,"highlight_end":76},{"text":"        *flags &= !SCTP_PR_SCTP_MASK;","highlight_start":1,"highlight_end":38},{"text":"        *flags |= policy;","highlight_start":1,"highlight_end":26},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn major(dev: ::dev_t) -> ::c_uint {","highlight_start":1,"highlight_end":45},{"text":"        let mut major = 0;","highlight_start":1,"highlight_end":27},{"text":"        major |= (dev & 0x00000000000fff00) >> 8;","highlight_start":1,"highlight_end":50},{"text":"        major |= (dev & 0xfffff00000000000) >> 32;","highlight_start":1,"highlight_end":51},{"text":"        major as ::c_uint","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn minor(dev: ::dev_t) -> ::c_uint {","highlight_start":1,"highlight_end":45},{"text":"        let mut minor = 0;","highlight_start":1,"highlight_end":27},{"text":"        minor |= (dev & 0x00000000000000ff) >> 0;","highlight_start":1,"highlight_end":50},{"text":"        minor |= (dev & 0x00000ffffff00000) >> 12;","highlight_start":1,"highlight_end":51},{"text":"        minor as ::c_uint","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn IPTOS_TOS(tos: u8) -> u8 {","highlight_start":1,"highlight_end":38},{"text":"        tos & IPTOS_TOS_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn IPTOS_PREC(tos: u8) -> u8 {","highlight_start":1,"highlight_end":39},{"text":"        tos & IPTOS_PREC_MASK","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_TOS(tos: u8) -> u8 {","highlight_start":1,"highlight_end":35},{"text":"        tos & ::IPTOS_TOS_MASK","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_ADDRCLASS(flags: u32) -> u32 {","highlight_start":1,"highlight_end":45},{"text":"        flags >> 23","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_LOCALADDR(flags: u32) -> bool {","highlight_start":1,"highlight_end":46},{"text":"        (flags & RTF_ADDRCLASSMASK) == (RTF_LOCAL | RTF_INTERFACE)","highlight_start":1,"highlight_end":67},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SO_EE_OFFENDER(ee: *const ::sock_extended_err) -> *mut ::sockaddr {","highlight_start":1,"highlight_end":79},{"text":"        ee.offset(1) as *mut ::sockaddr","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_RVAL(code: ::__u32) -> ::__u32 {","highlight_start":1,"highlight_end":48},{"text":"        code & 0x18","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_MISCOP(code: ::__u32) -> ::__u32 {","highlight_start":1,"highlight_end":50},{"text":"        code & 0xf8","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_STMT(code: ::__u16, k: ::__u32) -> sock_filter {","highlight_start":1,"highlight_end":64},{"text":"        sock_filter{code: code, jt: 0, jf: 0, k: k}","highlight_start":1,"highlight_end":52},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_JUMP(code: ::__u16, k: ::__u32, jt: ::__u8, jf: ::__u8) -> sock_filter {","highlight_start":1,"highlight_end":88},{"text":"        sock_filter{code: code, jt: jt, jf: jf, k: k}","highlight_start":1,"highlight_end":54},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6537,"byte_end":6551,"line_start":186,"line_end":186,"column_start":9,"column_end":23,"is_primary":false,"text":[{"text":"        macro_rules! f {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6858,"byte_end":6864,"line_start":194,"line_end":194,"column_start":43,"column_end":49,"is_primary":true,"text":[{"text":"                pub $($constness)* unsafe extern fn $i($($arg: $argty),*","highlight_start":43,"highlight_end":49}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs","byte_start":163263,"byte_end":167531,"line_start":4667,"line_end":4809,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"f! {","highlight_start":1,"highlight_end":5},{"text":"    pub fn NLA_ALIGN(len: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":48},{"text":"        return ((len) + NLA_ALIGNTO - 1) & !(NLA_ALIGNTO - 1)","highlight_start":1,"highlight_end":62},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_NXTHDR(mhdr: *const msghdr,","highlight_start":1,"highlight_end":44},{"text":"                       cmsg: *const cmsghdr) -> *mut cmsghdr {","highlight_start":1,"highlight_end":63},{"text":"        if ((*cmsg).cmsg_len as usize) < ::mem::size_of::<cmsghdr>() {","highlight_start":1,"highlight_end":71},{"text":"            return 0 as *mut cmsghdr;","highlight_start":1,"highlight_end":38},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"        let next = (cmsg as usize +","highlight_start":1,"highlight_end":36},{"text":"                    super::CMSG_ALIGN((*cmsg).cmsg_len as usize))","highlight_start":1,"highlight_end":66},{"text":"            as *mut cmsghdr;","highlight_start":1,"highlight_end":29},{"text":"        let max = (*mhdr).msg_control as usize","highlight_start":1,"highlight_end":47},{"text":"            + (*mhdr).msg_controllen as usize;","highlight_start":1,"highlight_end":47},{"text":"        if (next.wrapping_offset(1)) as usize > max ||","highlight_start":1,"highlight_end":55},{"text":"            next as usize + super::CMSG_ALIGN((*next).cmsg_len as usize) > max","highlight_start":1,"highlight_end":79},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            0 as *mut cmsghdr","highlight_start":1,"highlight_end":30},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            next as *mut cmsghdr","highlight_start":1,"highlight_end":33},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ALLOC_SIZE(count: ::c_int) -> ::size_t {","highlight_start":1,"highlight_end":56},{"text":"        let _dummy: cpu_set_t = ::mem::zeroed();","highlight_start":1,"highlight_end":49},{"text":"        let size_in_bits = 8 * ::mem::size_of_val(&_dummy.bits[0]);","highlight_start":1,"highlight_end":68},{"text":"        ((count as ::size_t + size_in_bits - 1) / 8) as ::size_t","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ZERO(cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":52},{"text":"        for slot in cpuset.bits.iter_mut() {","highlight_start":1,"highlight_end":45},{"text":"            *slot = 0;","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_SET(cpu: usize, cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits","highlight_start":1,"highlight_end":25},{"text":"            = 8 * ::mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc","highlight_start":1,"highlight_end":69},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        cpuset.bits[idx] |= 1 << offset;","highlight_start":1,"highlight_end":41},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_CLR(cpu: usize, cpuset: &mut cpu_set_t) -> () {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits","highlight_start":1,"highlight_end":25},{"text":"            = 8 * ::mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc","highlight_start":1,"highlight_end":69},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        cpuset.bits[idx] &= !(1 << offset);","highlight_start":1,"highlight_end":44},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_ISSET(cpu: usize, cpuset: &cpu_set_t) -> bool {","highlight_start":1,"highlight_end":63},{"text":"        let size_in_bits = 8 * ::mem::size_of_val(&cpuset.bits[0]);","highlight_start":1,"highlight_end":68},{"text":"        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);","highlight_start":1,"highlight_end":70},{"text":"        0 != (cpuset.bits[idx] & (1 << offset))","highlight_start":1,"highlight_end":48},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_COUNT_S(size: usize, cpuset: &cpu_set_t) -> ::c_int {","highlight_start":1,"highlight_end":69},{"text":"        let mut s: u32 = 0;","highlight_start":1,"highlight_end":28},{"text":"        let size_of_mask = ::mem::size_of_val(&cpuset.bits[0]);","highlight_start":1,"highlight_end":64},{"text":"        for i in cpuset.bits[..(size / size_of_mask)].iter() {","highlight_start":1,"highlight_end":63},{"text":"            s += i.count_ones();","highlight_start":1,"highlight_end":33},{"text":"        };","highlight_start":1,"highlight_end":11},{"text":"        s as ::c_int","highlight_start":1,"highlight_end":21},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_COUNT(cpuset: &cpu_set_t) -> ::c_int {","highlight_start":1,"highlight_end":54},{"text":"        CPU_COUNT_S(::mem::size_of::<cpu_set_t>(), cpuset)","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CPU_EQUAL(set1: &cpu_set_t, set2: &cpu_set_t) -> bool {","highlight_start":1,"highlight_end":67},{"text":"        set1.bits == set2.bits","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_INDEX(policy: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":55},{"text":"        policy >> 4 - 1","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_POLICY(policy: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":56},{"text":"        policy & SCTP_PR_SCTP_MASK","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SCTP_PR_SET_POLICY(flags: &mut ::c_int, policy: ::c_int) -> () {","highlight_start":1,"highlight_end":76},{"text":"        *flags &= !SCTP_PR_SCTP_MASK;","highlight_start":1,"highlight_end":38},{"text":"        *flags |= policy;","highlight_start":1,"highlight_end":26},{"text":"        ()","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn major(dev: ::dev_t) -> ::c_uint {","highlight_start":1,"highlight_end":45},{"text":"        let mut major = 0;","highlight_start":1,"highlight_end":27},{"text":"        major |= (dev & 0x00000000000fff00) >> 8;","highlight_start":1,"highlight_end":50},{"text":"        major |= (dev & 0xfffff00000000000) >> 32;","highlight_start":1,"highlight_end":51},{"text":"        major as ::c_uint","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn minor(dev: ::dev_t) -> ::c_uint {","highlight_start":1,"highlight_end":45},{"text":"        let mut minor = 0;","highlight_start":1,"highlight_end":27},{"text":"        minor |= (dev & 0x00000000000000ff) >> 0;","highlight_start":1,"highlight_end":50},{"text":"        minor |= (dev & 0x00000ffffff00000) >> 12;","highlight_start":1,"highlight_end":51},{"text":"        minor as ::c_uint","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn IPTOS_TOS(tos: u8) -> u8 {","highlight_start":1,"highlight_end":38},{"text":"        tos & IPTOS_TOS_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn IPTOS_PREC(tos: u8) -> u8 {","highlight_start":1,"highlight_end":39},{"text":"        tos & IPTOS_PREC_MASK","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_TOS(tos: u8) -> u8 {","highlight_start":1,"highlight_end":35},{"text":"        tos & ::IPTOS_TOS_MASK","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_ADDRCLASS(flags: u32) -> u32 {","highlight_start":1,"highlight_end":45},{"text":"        flags >> 23","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn RT_LOCALADDR(flags: u32) -> bool {","highlight_start":1,"highlight_end":46},{"text":"        (flags & RTF_ADDRCLASSMASK) == (RTF_LOCAL | RTF_INTERFACE)","highlight_start":1,"highlight_end":67},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SO_EE_OFFENDER(ee: *const ::sock_extended_err) -> *mut ::sockaddr {","highlight_start":1,"highlight_end":79},{"text":"        ee.offset(1) as *mut ::sockaddr","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_RVAL(code: ::__u32) -> ::__u32 {","highlight_start":1,"highlight_end":48},{"text":"        code & 0x18","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_MISCOP(code: ::__u32) -> ::__u32 {","highlight_start":1,"highlight_end":50},{"text":"        code & 0xf8","highlight_start":1,"highlight_end":20},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_STMT(code: ::__u16, k: ::__u32) -> sock_filter {","highlight_start":1,"highlight_end":64},{"text":"        sock_filter{code: code, jt: 0, jf: 0, k: k}","highlight_start":1,"highlight_end":52},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn BPF_JUMP(code: ::__u16, k: ::__u32, jt: ::__u8, jf: ::__u8) -> sock_filter {","highlight_start":1,"highlight_end":88},{"text":"        sock_filter{code: code, jt: jt, jf: jf, k: k}","highlight_start":1,"highlight_end":54},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":6537,"byte_end":6551,"line_start":186,"line_end":186,"column_start":9,"column_end":23,"is_primary":false,"text":[{"text":"        macro_rules! f {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs:194:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                pub $($constness)* unsafe extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs:4667:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4667\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mf! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4668\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn NLA_ALIGN(len: ::c_int) -> ::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4669\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return ((len) + NLA_ALIGNTO - 1) & !(NLA_ALIGNTO - 1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4809\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7320,"byte_end":7326,"line_start":209,"line_end":209,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"                pub $($constness)* extern fn $i($($arg: $argty),*","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs","byte_start":167533,"byte_end":168233,"line_start":4811,"line_end":4834,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"safe_f! {","highlight_start":1,"highlight_end":10},{"text":"    pub {const} fn makedev(major: ::c_uint, minor: ::c_uint) -> ::dev_t {","highlight_start":1,"highlight_end":74},{"text":"        let major = major as ::dev_t;","highlight_start":1,"highlight_end":38},{"text":"        let minor = minor as ::dev_t;","highlight_start":1,"highlight_end":38},{"text":"        let mut dev = 0;","highlight_start":1,"highlight_end":25},{"text":"        dev |= (major & 0x00000fff) << 8;","highlight_start":1,"highlight_end":42},{"text":"        dev |= (major & 0xfffff000) << 32;","highlight_start":1,"highlight_end":43},{"text":"        dev |= (minor & 0x000000ff) << 0;","highlight_start":1,"highlight_end":42},{"text":"        dev |= (minor & 0xffffff00) << 12;","highlight_start":1,"highlight_end":43},{"text":"        dev","highlight_start":1,"highlight_end":12},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_TTL_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":66},{"text":"        policy == SCTP_PR_SCTP_TTL","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_RTX_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":66},{"text":"        policy == SCTP_PR_SCTP_RTX","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_PRIO_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":67},{"text":"        policy == SCTP_PR_SCTP_PRIO","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"safe_f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7001,"byte_end":7020,"line_start":201,"line_end":201,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        macro_rules! safe_f {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7320,"byte_end":7326,"line_start":209,"line_end":209,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"                pub $($constness)* extern fn $i($($arg: $argty),*","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs","byte_start":167533,"byte_end":168233,"line_start":4811,"line_end":4834,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"safe_f! {","highlight_start":1,"highlight_end":10},{"text":"    pub {const} fn makedev(major: ::c_uint, minor: ::c_uint) -> ::dev_t {","highlight_start":1,"highlight_end":74},{"text":"        let major = major as ::dev_t;","highlight_start":1,"highlight_end":38},{"text":"        let minor = minor as ::dev_t;","highlight_start":1,"highlight_end":38},{"text":"        let mut dev = 0;","highlight_start":1,"highlight_end":25},{"text":"        dev |= (major & 0x00000fff) << 8;","highlight_start":1,"highlight_end":42},{"text":"        dev |= (major & 0xfffff000) << 32;","highlight_start":1,"highlight_end":43},{"text":"        dev |= (minor & 0x000000ff) << 0;","highlight_start":1,"highlight_end":42},{"text":"        dev |= (minor & 0xffffff00) << 12;","highlight_start":1,"highlight_end":43},{"text":"        dev","highlight_start":1,"highlight_end":12},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_TTL_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":66},{"text":"        policy == SCTP_PR_SCTP_TTL","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_RTX_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":66},{"text":"        policy == SCTP_PR_SCTP_RTX","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn SCTP_PR_PRIO_ENABLED(policy: ::c_int) -> bool {","highlight_start":1,"highlight_end":67},{"text":"        policy == SCTP_PR_SCTP_PRIO","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"safe_f!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs","byte_start":7001,"byte_end":7020,"line_start":201,"line_end":201,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        macro_rules! safe_f {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/macros.rs:209:36\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                pub $($constness)* extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/mod.rs:4811:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0msafe_f! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4812\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub {const} fn makedev(major: ::c_uint, minor: ::c_uint) -> ::dev_t {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4813\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let major = major as ::dev_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let minor = minor as ::dev_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4834\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `safe_f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"extern declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":515,"byte_end":521,"line_start":19,"line_end":19,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"        pub sa_restorer: ::Option<extern fn()>,","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs","byte_start":515,"byte_end":521,"line_start":19,"line_end":19,"column_start":35,"column_end":41,"is_primary":true,"text":[{"text":"        pub sa_restorer: ::Option<extern fn()>,","highlight_start":35,"highlight_end":41}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: extern declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/unix/linux_like/linux/gnu/b64/x86_64/mod.rs:19:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub sa_restorer: ::Option<extern fn()>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"8 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 8 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-libc-0.2.155"
## script = '''
## FROM scratch AS cratesio-libc-0.2.155
## ADD --chmod=0664 --unpack=true --checksum=sha256:97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c \
##   https://static.crates.io/crates/libc/libc-0.2.155.crate /'''
## 
## [[stages]]
## name = "dep-n-libc-0.2.155-a7905fdc410bdfce"
## script = '''
## FROM rust-base AS dep-n-libc-0.2.155-a7905fdc410bdfce
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-libc-0.2.155,source=/libc-0.2.155,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="libc" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rust Project Developers" \
##         CARGO_PKG_DESCRIPTION="Raw FFI bindings to platform libraries like libc.\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/libc" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="libc" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-lang/libc" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.2.155" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="155" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/libc-00f4a26e03f113ca/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'libc' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' '-C' 'metadata=f6bb218c1ccc899a' '-C' 'extra-filename=-a7905fdc410bdfce' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' '--cfg' 'freebsd11' '--cfg' 'libc_priv_mod_use' '--cfg' 'libc_union' '--cfg' 'libc_const_size_of' '--cfg' 'libc_align' '--cfg' 'libc_int128' '--cfg' 'libc_core_cvoid' '--cfg' 'libc_packedN' '--cfg' 'libc_cfg_target_vendor' '--cfg' 'libc_non_exhaustive' '--cfg' 'libc_long_array' '--cfg' 'libc_ptr_addr_of' '--cfg' 'libc_underscore_const_names' '--cfg' 'libc_const_extern_fn' '--check-cfg' 'cfg(emscripten_new_stat_abi)' '--check-cfg' 'cfg(espidf_time64)' '--check-cfg' 'cfg(freebsd10)' '--check-cfg' 'cfg(freebsd11)' '--check-cfg' 'cfg(freebsd12)' '--check-cfg' 'cfg(freebsd13)' '--check-cfg' 'cfg(freebsd14)' '--check-cfg' 'cfg(freebsd15)' '--check-cfg' 'cfg(libc_align)' '--check-cfg' 'cfg(libc_cfg_target_vendor)' '--check-cfg' 'cfg(libc_const_extern_fn)' '--check-cfg' 'cfg(libc_const_extern_fn_unstable)' '--check-cfg' 'cfg(libc_const_size_of)' '--check-cfg' 'cfg(libc_core_cvoid)' '--check-cfg' 'cfg(libc_deny_warnings)' '--check-cfg' 'cfg(libc_int128)' '--check-cfg' 'cfg(libc_long_array)' '--check-cfg' 'cfg(libc_non_exhaustive)' '--check-cfg' 'cfg(libc_packedN)' '--check-cfg' 'cfg(libc_priv_mod_use)' '--check-cfg' 'cfg(libc_ptr_addr_of)' '--check-cfg' 'cfg(libc_thread_local)' '--check-cfg' 'cfg(libc_underscore_const_names)' '--check-cfg' 'cfg(libc_union)' '--check-cfg' 'cfg(target_os,values("switch","aix","ohos","hurd","visionos"))' '--check-cfg' 'cfg(target_env,values("illumos","wasi","aix","ohos"))' '--check-cfg' 'cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.155/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-a7905fdc410bdfce-errcode'''
## 
## [[stages]]
## name = "out-a7905fdc410bdfce"
## script = """
## FROM scratch AS out-a7905fdc410bdfce
## COPY --from=dep-n-libc-0.2.155-a7905fdc410bdfce /tmp/clis-ntpd_1-2-3/release/deps/*-a7905fdc410bdfce* /"""

FROM scratch AS cratesio-clock-steering-0.2.1
ADD --chmod=0664 --unpack=true --checksum=sha256:2410abf030f2eb46cba840d343455078538e7c8755507b37ffd4074064f08f62 \
  https://static.crates.io/crates/clock-steering/clock-steering-0.2.1.crate /
FROM rust-base AS dep-n-clock-steering-0.2.1-7adc6d6ce8be0538
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-clock-steering-0.2.1,source=/clock-steering-0.2.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clock_steering" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Functionality for manual clock steering" \
        CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/timestamped-socket" \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clock-steering" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/timestamped-socket" \
        CARGO_PKG_RUST_VERSION="1.66" \
        CARGO_PKG_VERSION="0.2.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'clock_steering' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=210adb2d4103acd4' '-C' 'extra-filename=-7adc6d6ce8be0538' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-errcode
FROM scratch AS out-7adc6d6ce8be0538
COPY --from=dep-n-clock-steering-0.2.1-7adc6d6ce8be0538 /tmp/clis-ntpd_1-2-3/release/deps/*-7adc6d6ce8be0538* /

## this = "7adc6d6ce8be0538"
## deps = ["a7905fdc410bdfce"]
## short_externs = ["a7905fdc410bdfce"]
## writes = [
##     "deps/clock_steering-7adc6d6ce8be0538.d",
##     "deps/libclock_steering-7adc6d6ce8be0538.rmeta",
##     "deps/libclock_steering-7adc6d6ce8be0538.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/clock_steering-7adc6d6ce8be0538.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-clock-steering-0.2.1"
## script = '''
## FROM scratch AS cratesio-clock-steering-0.2.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:2410abf030f2eb46cba840d343455078538e7c8755507b37ffd4074064f08f62 \
##   https://static.crates.io/crates/clock-steering/clock-steering-0.2.1.crate /'''
## 
## [[stages]]
## name = "dep-n-clock-steering-0.2.1-7adc6d6ce8be0538"
## script = '''
## FROM rust-base AS dep-n-clock-steering-0.2.1-7adc6d6ce8be0538
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-clock-steering-0.2.1,source=/clock-steering-0.2.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="clock_steering" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Functionality for manual clock steering" \
##         CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/timestamped-socket" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="clock-steering" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/timestamped-socket" \
##         CARGO_PKG_RUST_VERSION="1.66" \
##         CARGO_PKG_VERSION="0.2.1" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'clock_steering' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=210adb2d4103acd4' '-C' 'extra-filename=-7adc6d6ce8be0538' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clock-steering-0.2.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7adc6d6ce8be0538-errcode'''
## 
## [[stages]]
## name = "out-7adc6d6ce8be0538"
## script = """
## FROM scratch AS out-7adc6d6ce8be0538
## COPY --from=dep-n-clock-steering-0.2.1-7adc6d6ce8be0538 /tmp/clis-ntpd_1-2-3/release/deps/*-7adc6d6ce8be0538* /"""

FROM scratch AS cratesio-typenum-1.17.0
ADD --chmod=0664 --unpack=true --checksum=sha256:42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825 \
  https://static.crates.io/crates/typenum/typenum-1.17.0.crate /
FROM rust-base AS dep-n-typenum-1.17.0-981b1f3c4161234a
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-typenum-1.17.0,source=/typenum-1.17.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0 \
  --mount=from=crate_out-a7d381539c9ce48d,dst=/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="typenum" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="typenum" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/paholg/typenum" \
        CARGO_PKG_RUST_VERSION="1.37.0" \
        CARGO_PKG_VERSION="1.17.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="17" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'typenum' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("const-generics", "force_unix_path_separator", "i128", "no_std", "scale-info", "scale_info", "strict"))' '-C' 'metadata=29442973fe73a131' '-C' 'extra-filename=-981b1f3c4161234a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-errcode
FROM scratch AS out-981b1f3c4161234a
COPY --from=dep-n-typenum-1.17.0-981b1f3c4161234a /tmp/clis-ntpd_1-2-3/release/deps/*-981b1f3c4161234a* /

## this = "981b1f3c4161234a"
## writes = [
##     "deps/typenum-981b1f3c4161234a.d",
##     "deps/libtypenum-981b1f3c4161234a.rmeta",
##     "deps/libtypenum-981b1f3c4161234a.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/typenum-981b1f3c4161234a.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs","byte_start":1823,"byte_end":1847,"line_start":51,"line_end":51,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    feature = \"cargo-clippy\",","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `cargo-clippy` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs:51:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    feature = \"cargo-clippy\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `cargo-clippy` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs","byte_start":2112,"byte_end":2136,"line_start":61,"line_end":61,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"cargo-clippy\", deny(clippy::missing_inline_in_public_items))]","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `cargo-clippy` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs:61:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"cargo-clippy\", deny(clippy::missing_inline_in_public_items))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `cargo-clippy` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tests`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/bit.rs","byte_start":3492,"byte_end":3497,"line_start":187,"line_end":187,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"#[cfg(tests)]","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tests)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tests)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/bit.rs","byte_start":3492,"byte_end":3497,"line_start":187,"line_end":187,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"#[cfg(tests)]","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":"test","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tests`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/bit.rs:187:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(tests)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: there is a config with a similar name: `test`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tests)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tests)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tests`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/uint.rs","byte_start":41055,"byte_end":41060,"line_start":1656,"line_end":1656,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"#[cfg(tests)]","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tests)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tests)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/uint.rs","byte_start":41055,"byte_end":41060,"line_start":1656,"line_end":1656,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"#[cfg(tests)]","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":"test","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tests`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/uint.rs:1656:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1656\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(tests)]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: there is a config with a similar name: `test`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tests)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tests)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/uint.rs","byte_start":42499,"byte_end":42523,"line_start":1709,"line_end":1709,"column_start":16,"column_end":40,"is_primary":true,"text":[{"text":"    #[cfg_attr(feature = \"cargo-clippy\", allow(clippy::suspicious_arithmetic_impl))]","highlight_start":16,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `cargo-clippy` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/uint.rs:1709:16\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1709\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(feature = \"cargo-clippy\", allow(clippy::suspicious_arithmetic_impl))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `const-generics`, `force_unix_path_separator`, `i128`, `no_std`, `scale-info`, `scale_info`, and `strict`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `cargo-clippy` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unused import: `*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs","byte_start":3091,"byte_end":3092,"line_start":104,"line_end":104,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"    N1, N2, Z0, P1, P2, *,","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs","byte_start":3089,"byte_end":3092,"line_start":104,"line_end":104,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"    N1, N2, Z0, P1, P2, *,","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs:104:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    N1, N2, Z0, P1, P2, *,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"6 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 6 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-typenum-1.17.0"
## script = '''
## FROM scratch AS cratesio-typenum-1.17.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825 \
##   https://static.crates.io/crates/typenum/typenum-1.17.0.crate /'''
## 
## [[stages]]
## name = "dep-n-typenum-1.17.0-981b1f3c4161234a"
## script = '''
## FROM rust-base AS dep-n-typenum-1.17.0-981b1f3c4161234a
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-typenum-1.17.0,source=/typenum-1.17.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0 \
##   --mount=from=crate_out-a7d381539c9ce48d,dst=/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="typenum" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="typenum" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/paholg/typenum" \
##         CARGO_PKG_RUST_VERSION="1.37.0" \
##         CARGO_PKG_VERSION="1.17.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="17" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'typenum' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("const-generics", "force_unix_path_separator", "i128", "no_std", "scale-info", "scale_info", "strict"))' '-C' 'metadata=29442973fe73a131' '-C' 'extra-filename=-981b1f3c4161234a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.17.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-981b1f3c4161234a-errcode'''
## 
## [[stages]]
## name = "out-981b1f3c4161234a"
## script = """
## FROM scratch AS out-981b1f3c4161234a
## COPY --from=dep-n-typenum-1.17.0-981b1f3c4161234a /tmp/clis-ntpd_1-2-3/release/deps/*-981b1f3c4161234a* /"""

FROM scratch AS cratesio-generic-array-0.14.7
ADD --chmod=0664 --unpack=true --checksum=sha256:85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a \
  https://static.crates.io/crates/generic-array/generic-array-0.14.7.crate /
FROM rust-base AS dep-n-generic-array-0.14.7-2d6ea4fd5d7ef666
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-generic-array-0.14.7,source=/generic-array-0.14.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7 \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="generic_array" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Generic types implementing functionality of arrays" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="generic-array" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/fizyk20/generic-array.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.14.7" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="14" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/generic-array-cd28e301f3f5ab63/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'generic_array' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="more_lengths"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("more_lengths", "serde", "zeroize"))' '-C' 'metadata=f4c2a838184dee55' '-C' 'extra-filename=-2d6ea4fd5d7ef666' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'typenum=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta' '--cap-lints' 'warn' '--cfg' 'relaxed_coherence' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-errcode
FROM scratch AS out-2d6ea4fd5d7ef666
COPY --from=dep-n-generic-array-0.14.7-2d6ea4fd5d7ef666 /tmp/clis-ntpd_1-2-3/release/deps/*-2d6ea4fd5d7ef666* /

## this = "2d6ea4fd5d7ef666"
## deps = ["981b1f3c4161234a"]
## short_externs = ["981b1f3c4161234a"]
## writes = [
##     "deps/generic_array-2d6ea4fd5d7ef666.d",
##     "deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta",
##     "deps/libgeneric_array-2d6ea4fd5d7ef666.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/generic_array-2d6ea4fd5d7ef666.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `relaxed_coherence`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2810,"byte_end":2827,"line_start":136,"line_end":136,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"            #[cfg(relaxed_coherence)]","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":4449,"byte_end":5318,"line_start":183,"line_end":216,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_from! {","highlight_start":1,"highlight_end":13},{"text":"    1  => ::typenum::U1,","highlight_start":1,"highlight_end":25},{"text":"    2  => ::typenum::U2,","highlight_start":1,"highlight_end":25},{"text":"    3  => ::typenum::U3,","highlight_start":1,"highlight_end":25},{"text":"    4  => ::typenum::U4,","highlight_start":1,"highlight_end":25},{"text":"    5  => ::typenum::U5,","highlight_start":1,"highlight_end":25},{"text":"    6  => ::typenum::U6,","highlight_start":1,"highlight_end":25},{"text":"    7  => ::typenum::U7,","highlight_start":1,"highlight_end":25},{"text":"    8  => ::typenum::U8,","highlight_start":1,"highlight_end":25},{"text":"    9  => ::typenum::U9,","highlight_start":1,"highlight_end":25},{"text":"    10 => ::typenum::U10,","highlight_start":1,"highlight_end":26},{"text":"    11 => ::typenum::U11,","highlight_start":1,"highlight_end":26},{"text":"    12 => ::typenum::U12,","highlight_start":1,"highlight_end":26},{"text":"    13 => ::typenum::U13,","highlight_start":1,"highlight_end":26},{"text":"    14 => ::typenum::U14,","highlight_start":1,"highlight_end":26},{"text":"    15 => ::typenum::U15,","highlight_start":1,"highlight_end":26},{"text":"    16 => ::typenum::U16,","highlight_start":1,"highlight_end":26},{"text":"    17 => ::typenum::U17,","highlight_start":1,"highlight_end":26},{"text":"    18 => ::typenum::U18,","highlight_start":1,"highlight_end":26},{"text":"    19 => ::typenum::U19,","highlight_start":1,"highlight_end":26},{"text":"    20 => ::typenum::U20,","highlight_start":1,"highlight_end":26},{"text":"    21 => ::typenum::U21,","highlight_start":1,"highlight_end":26},{"text":"    22 => ::typenum::U22,","highlight_start":1,"highlight_end":26},{"text":"    23 => ::typenum::U23,","highlight_start":1,"highlight_end":26},{"text":"    24 => ::typenum::U24,","highlight_start":1,"highlight_end":26},{"text":"    25 => ::typenum::U25,","highlight_start":1,"highlight_end":26},{"text":"    26 => ::typenum::U26,","highlight_start":1,"highlight_end":26},{"text":"    27 => ::typenum::U27,","highlight_start":1,"highlight_end":26},{"text":"    28 => ::typenum::U28,","highlight_start":1,"highlight_end":26},{"text":"    29 => ::typenum::U29,","highlight_start":1,"highlight_end":26},{"text":"    30 => ::typenum::U30,","highlight_start":1,"highlight_end":26},{"text":"    31 => ::typenum::U31,","highlight_start":1,"highlight_end":26},{"text":"    32 => ::typenum::U32","highlight_start":1,"highlight_end":25},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_from!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2480,"byte_end":2502,"line_start":126,"line_end":126,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! impl_from {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `relaxed_coherence`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs:136:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            #[cfg(relaxed_coherence)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_from! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    1  => ::typenum::U1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    2  => ::typenum::U2,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    3  => ::typenum::U3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    32 => ::typenum::U32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `relaxed_coherence`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":3704,"byte_end":3721,"line_start":158,"line_end":158,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"            #[cfg(not(relaxed_coherence))]","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":4449,"byte_end":5318,"line_start":183,"line_end":216,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_from! {","highlight_start":1,"highlight_end":13},{"text":"    1  => ::typenum::U1,","highlight_start":1,"highlight_end":25},{"text":"    2  => ::typenum::U2,","highlight_start":1,"highlight_end":25},{"text":"    3  => ::typenum::U3,","highlight_start":1,"highlight_end":25},{"text":"    4  => ::typenum::U4,","highlight_start":1,"highlight_end":25},{"text":"    5  => ::typenum::U5,","highlight_start":1,"highlight_end":25},{"text":"    6  => ::typenum::U6,","highlight_start":1,"highlight_end":25},{"text":"    7  => ::typenum::U7,","highlight_start":1,"highlight_end":25},{"text":"    8  => ::typenum::U8,","highlight_start":1,"highlight_end":25},{"text":"    9  => ::typenum::U9,","highlight_start":1,"highlight_end":25},{"text":"    10 => ::typenum::U10,","highlight_start":1,"highlight_end":26},{"text":"    11 => ::typenum::U11,","highlight_start":1,"highlight_end":26},{"text":"    12 => ::typenum::U12,","highlight_start":1,"highlight_end":26},{"text":"    13 => ::typenum::U13,","highlight_start":1,"highlight_end":26},{"text":"    14 => ::typenum::U14,","highlight_start":1,"highlight_end":26},{"text":"    15 => ::typenum::U15,","highlight_start":1,"highlight_end":26},{"text":"    16 => ::typenum::U16,","highlight_start":1,"highlight_end":26},{"text":"    17 => ::typenum::U17,","highlight_start":1,"highlight_end":26},{"text":"    18 => ::typenum::U18,","highlight_start":1,"highlight_end":26},{"text":"    19 => ::typenum::U19,","highlight_start":1,"highlight_end":26},{"text":"    20 => ::typenum::U20,","highlight_start":1,"highlight_end":26},{"text":"    21 => ::typenum::U21,","highlight_start":1,"highlight_end":26},{"text":"    22 => ::typenum::U22,","highlight_start":1,"highlight_end":26},{"text":"    23 => ::typenum::U23,","highlight_start":1,"highlight_end":26},{"text":"    24 => ::typenum::U24,","highlight_start":1,"highlight_end":26},{"text":"    25 => ::typenum::U25,","highlight_start":1,"highlight_end":26},{"text":"    26 => ::typenum::U26,","highlight_start":1,"highlight_end":26},{"text":"    27 => ::typenum::U27,","highlight_start":1,"highlight_end":26},{"text":"    28 => ::typenum::U28,","highlight_start":1,"highlight_end":26},{"text":"    29 => ::typenum::U29,","highlight_start":1,"highlight_end":26},{"text":"    30 => ::typenum::U30,","highlight_start":1,"highlight_end":26},{"text":"    31 => ::typenum::U31,","highlight_start":1,"highlight_end":26},{"text":"    32 => ::typenum::U32","highlight_start":1,"highlight_end":25},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_from!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2480,"byte_end":2502,"line_start":126,"line_end":126,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! impl_from {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `relaxed_coherence`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs:158:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            #[cfg(not(relaxed_coherence))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_from! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    1  => ::typenum::U1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    2  => ::typenum::U2,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    3  => ::typenum::U3,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    32 => ::typenum::U32\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `relaxed_coherence`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2810,"byte_end":2827,"line_start":136,"line_end":136,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"            #[cfg(relaxed_coherence)]","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":5356,"byte_end":6617,"line_start":219,"line_end":269,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_from! {","highlight_start":1,"highlight_end":13},{"text":"    33 => ::typenum::U33,","highlight_start":1,"highlight_end":26},{"text":"    34 => ::typenum::U34,","highlight_start":1,"highlight_end":26},{"text":"    35 => ::typenum::U35,","highlight_start":1,"highlight_end":26},{"text":"    36 => ::typenum::U36,","highlight_start":1,"highlight_end":26},{"text":"    37 => ::typenum::U37,","highlight_start":1,"highlight_end":26},{"text":"    38 => ::typenum::U38,","highlight_start":1,"highlight_end":26},{"text":"    39 => ::typenum::U39,","highlight_start":1,"highlight_end":26},{"text":"    40 => ::typenum::U40,","highlight_start":1,"highlight_end":26},{"text":"    41 => ::typenum::U41,","highlight_start":1,"highlight_end":26},{"text":"    42 => ::typenum::U42,","highlight_start":1,"highlight_end":26},{"text":"    43 => ::typenum::U43,","highlight_start":1,"highlight_end":26},{"text":"    44 => ::typenum::U44,","highlight_start":1,"highlight_end":26},{"text":"    45 => ::typenum::U45,","highlight_start":1,"highlight_end":26},{"text":"    46 => ::typenum::U46,","highlight_start":1,"highlight_end":26},{"text":"    47 => ::typenum::U47,","highlight_start":1,"highlight_end":26},{"text":"    48 => ::typenum::U48,","highlight_start":1,"highlight_end":26},{"text":"    49 => ::typenum::U49,","highlight_start":1,"highlight_end":26},{"text":"    50 => ::typenum::U50,","highlight_start":1,"highlight_end":26},{"text":"    51 => ::typenum::U51,","highlight_start":1,"highlight_end":26},{"text":"    52 => ::typenum::U52,","highlight_start":1,"highlight_end":26},{"text":"    53 => ::typenum::U53,","highlight_start":1,"highlight_end":26},{"text":"    54 => ::typenum::U54,","highlight_start":1,"highlight_end":26},{"text":"    55 => ::typenum::U55,","highlight_start":1,"highlight_end":26},{"text":"    56 => ::typenum::U56,","highlight_start":1,"highlight_end":26},{"text":"    57 => ::typenum::U57,","highlight_start":1,"highlight_end":26},{"text":"    58 => ::typenum::U58,","highlight_start":1,"highlight_end":26},{"text":"    59 => ::typenum::U59,","highlight_start":1,"highlight_end":26},{"text":"    60 => ::typenum::U60,","highlight_start":1,"highlight_end":26},{"text":"    61 => ::typenum::U61,","highlight_start":1,"highlight_end":26},{"text":"    62 => ::typenum::U62,","highlight_start":1,"highlight_end":26},{"text":"    63 => ::typenum::U63,","highlight_start":1,"highlight_end":26},{"text":"    64 => ::typenum::U64,","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    70 => ::typenum::U70,","highlight_start":1,"highlight_end":26},{"text":"    80 => ::typenum::U80,","highlight_start":1,"highlight_end":26},{"text":"    90 => ::typenum::U90,","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    100 => ::typenum::U100,","highlight_start":1,"highlight_end":28},{"text":"    200 => ::typenum::U200,","highlight_start":1,"highlight_end":28},{"text":"    300 => ::typenum::U300,","highlight_start":1,"highlight_end":28},{"text":"    400 => ::typenum::U400,","highlight_start":1,"highlight_end":28},{"text":"    500 => ::typenum::U500,","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    128 => ::typenum::U128,","highlight_start":1,"highlight_end":28},{"text":"    256 => ::typenum::U256,","highlight_start":1,"highlight_end":28},{"text":"    512 => ::typenum::U512,","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    1000 => ::typenum::U1000,","highlight_start":1,"highlight_end":30},{"text":"    1024 => ::typenum::U1024","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_from!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2480,"byte_end":2502,"line_start":126,"line_end":126,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! impl_from {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `relaxed_coherence`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs:136:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            #[cfg(relaxed_coherence)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_from! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    33 => ::typenum::U33,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    34 => ::typenum::U34,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    35 => ::typenum::U35,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    1024 => ::typenum::U1024\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `relaxed_coherence`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":3704,"byte_end":3721,"line_start":158,"line_end":158,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"            #[cfg(not(relaxed_coherence))]","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":5356,"byte_end":6617,"line_start":219,"line_end":269,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"impl_from! {","highlight_start":1,"highlight_end":13},{"text":"    33 => ::typenum::U33,","highlight_start":1,"highlight_end":26},{"text":"    34 => ::typenum::U34,","highlight_start":1,"highlight_end":26},{"text":"    35 => ::typenum::U35,","highlight_start":1,"highlight_end":26},{"text":"    36 => ::typenum::U36,","highlight_start":1,"highlight_end":26},{"text":"    37 => ::typenum::U37,","highlight_start":1,"highlight_end":26},{"text":"    38 => ::typenum::U38,","highlight_start":1,"highlight_end":26},{"text":"    39 => ::typenum::U39,","highlight_start":1,"highlight_end":26},{"text":"    40 => ::typenum::U40,","highlight_start":1,"highlight_end":26},{"text":"    41 => ::typenum::U41,","highlight_start":1,"highlight_end":26},{"text":"    42 => ::typenum::U42,","highlight_start":1,"highlight_end":26},{"text":"    43 => ::typenum::U43,","highlight_start":1,"highlight_end":26},{"text":"    44 => ::typenum::U44,","highlight_start":1,"highlight_end":26},{"text":"    45 => ::typenum::U45,","highlight_start":1,"highlight_end":26},{"text":"    46 => ::typenum::U46,","highlight_start":1,"highlight_end":26},{"text":"    47 => ::typenum::U47,","highlight_start":1,"highlight_end":26},{"text":"    48 => ::typenum::U48,","highlight_start":1,"highlight_end":26},{"text":"    49 => ::typenum::U49,","highlight_start":1,"highlight_end":26},{"text":"    50 => ::typenum::U50,","highlight_start":1,"highlight_end":26},{"text":"    51 => ::typenum::U51,","highlight_start":1,"highlight_end":26},{"text":"    52 => ::typenum::U52,","highlight_start":1,"highlight_end":26},{"text":"    53 => ::typenum::U53,","highlight_start":1,"highlight_end":26},{"text":"    54 => ::typenum::U54,","highlight_start":1,"highlight_end":26},{"text":"    55 => ::typenum::U55,","highlight_start":1,"highlight_end":26},{"text":"    56 => ::typenum::U56,","highlight_start":1,"highlight_end":26},{"text":"    57 => ::typenum::U57,","highlight_start":1,"highlight_end":26},{"text":"    58 => ::typenum::U58,","highlight_start":1,"highlight_end":26},{"text":"    59 => ::typenum::U59,","highlight_start":1,"highlight_end":26},{"text":"    60 => ::typenum::U60,","highlight_start":1,"highlight_end":26},{"text":"    61 => ::typenum::U61,","highlight_start":1,"highlight_end":26},{"text":"    62 => ::typenum::U62,","highlight_start":1,"highlight_end":26},{"text":"    63 => ::typenum::U63,","highlight_start":1,"highlight_end":26},{"text":"    64 => ::typenum::U64,","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    70 => ::typenum::U70,","highlight_start":1,"highlight_end":26},{"text":"    80 => ::typenum::U80,","highlight_start":1,"highlight_end":26},{"text":"    90 => ::typenum::U90,","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    100 => ::typenum::U100,","highlight_start":1,"highlight_end":28},{"text":"    200 => ::typenum::U200,","highlight_start":1,"highlight_end":28},{"text":"    300 => ::typenum::U300,","highlight_start":1,"highlight_end":28},{"text":"    400 => ::typenum::U400,","highlight_start":1,"highlight_end":28},{"text":"    500 => ::typenum::U500,","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    128 => ::typenum::U128,","highlight_start":1,"highlight_end":28},{"text":"    256 => ::typenum::U256,","highlight_start":1,"highlight_end":28},{"text":"    512 => ::typenum::U512,","highlight_start":1,"highlight_end":28},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    1000 => ::typenum::U1000,","highlight_start":1,"highlight_end":30},{"text":"    1024 => ::typenum::U1024","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_from!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs","byte_start":2480,"byte_end":2502,"line_start":126,"line_end":126,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! impl_from {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `relaxed_coherence`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/impls.rs:158:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            #[cfg(not(relaxed_coherence))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_from! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    33 => ::typenum::U33,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    34 => ::typenum::U34,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    35 => ::typenum::U35,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    1024 => ::typenum::U1024\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(relaxed_coherence)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(relaxed_coherence)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-generic-array-0.14.7"
## script = '''
## FROM scratch AS cratesio-generic-array-0.14.7
## ADD --chmod=0664 --unpack=true --checksum=sha256:85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a \
##   https://static.crates.io/crates/generic-array/generic-array-0.14.7.crate /'''
## 
## [[stages]]
## name = "dep-n-generic-array-0.14.7-2d6ea4fd5d7ef666"
## script = '''
## FROM rust-base AS dep-n-generic-array-0.14.7-2d6ea4fd5d7ef666
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-generic-array-0.14.7,source=/generic-array-0.14.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7 \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="generic_array" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Generic types implementing functionality of arrays" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="generic-array" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/fizyk20/generic-array.git" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.14.7" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="14" \
##         CARGO_PKG_VERSION_PATCH="7" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/generic-array-cd28e301f3f5ab63/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'generic_array' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="more_lengths"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("more_lengths", "serde", "zeroize"))' '-C' 'metadata=f4c2a838184dee55' '-C' 'extra-filename=-2d6ea4fd5d7ef666' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'typenum=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta' '--cap-lints' 'warn' '--cfg' 'relaxed_coherence' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.14.7/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2d6ea4fd5d7ef666-errcode'''
## 
## [[stages]]
## name = "out-2d6ea4fd5d7ef666"
## script = """
## FROM scratch AS out-2d6ea4fd5d7ef666
## COPY --from=dep-n-generic-array-0.14.7-2d6ea4fd5d7ef666 /tmp/clis-ntpd_1-2-3/release/deps/*-2d6ea4fd5d7ef666* /"""

FROM scratch AS cratesio-cfg-if-1.0.0
ADD --chmod=0664 --unpack=true --checksum=sha256:baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd \
  https://static.crates.io/crates/cfg-if/cfg-if-1.0.0.crate /
FROM rust-base AS dep-n-cfg-if-1.0.0-da34da6838abd7f1
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-cfg-if-1.0.0,source=/cfg-if-1.0.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cfg_if" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cfg-if" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'cfg_if' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))' '-C' 'metadata=f774a8b1a0b6ae97' '-C' 'extra-filename=-da34da6838abd7f1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-errcode
FROM scratch AS out-da34da6838abd7f1
COPY --from=dep-n-cfg-if-1.0.0-da34da6838abd7f1 /tmp/clis-ntpd_1-2-3/release/deps/*-da34da6838abd7f1* /

## this = "da34da6838abd7f1"
## writes = [
##     "deps/cfg_if-da34da6838abd7f1.d",
##     "deps/libcfg_if-da34da6838abd7f1.rmeta",
##     "deps/libcfg_if-da34da6838abd7f1.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/cfg_if-da34da6838abd7f1.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-cfg-if-1.0.0"
## script = '''
## FROM scratch AS cratesio-cfg-if-1.0.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd \
##   https://static.crates.io/crates/cfg-if/cfg-if-1.0.0.crate /'''
## 
## [[stages]]
## name = "dep-n-cfg-if-1.0.0-da34da6838abd7f1"
## script = '''
## FROM rust-base AS dep-n-cfg-if-1.0.0-da34da6838abd7f1
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-cfg-if-1.0.0,source=/cfg-if-1.0.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="cfg_if" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
##         CARGO_PKG_DESCRIPTION="A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/cfg-if" \
##         CARGO_PKG_LICENSE="MIT/Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="cfg-if" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/cfg-if" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="1.0.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'cfg_if' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))' '-C' 'metadata=f774a8b1a0b6ae97' '-C' 'extra-filename=-da34da6838abd7f1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-1.0.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-da34da6838abd7f1-errcode'''
## 
## [[stages]]
## name = "out-da34da6838abd7f1"
## script = """
## FROM scratch AS out-da34da6838abd7f1
## COPY --from=dep-n-cfg-if-1.0.0-da34da6838abd7f1 /tmp/clis-ntpd_1-2-3/release/deps/*-da34da6838abd7f1* /"""

FROM scratch AS cratesio-getrandom-0.2.15
ADD --chmod=0664 --unpack=true --checksum=sha256:c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7 \
  https://static.crates.io/crates/getrandom/getrandom-0.2.15.crate /
FROM rust-base AS dep-n-getrandom-0.2.15-84473f2ddfbb434a
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-getrandom-0.2.15,source=/getrandom-0.2.15,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15 \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="getrandom" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rand Project Developers" \
        CARGO_PKG_DESCRIPTION="A small cross-platform library for retrieving random data from system source" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="getrandom" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-random/getrandom" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.15" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="15" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'getrandom' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "custom", "js", "js-sys", "linux_disable_fallback", "rdrand", "rustc-dep-of-std", "std", "test-in-browser", "wasm-bindgen"))' '-C' 'metadata=b85a1c392b28b82e' '-C' 'extra-filename=-84473f2ddfbb434a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-errcode
FROM scratch AS out-84473f2ddfbb434a
COPY --from=dep-n-getrandom-0.2.15-84473f2ddfbb434a /tmp/clis-ntpd_1-2-3/release/deps/*-84473f2ddfbb434a* /

## this = "84473f2ddfbb434a"
## deps = [
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## short_externs = [
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## writes = [
##     "deps/getrandom-84473f2ddfbb434a.d",
##     "deps/libgetrandom-84473f2ddfbb434a.rmeta",
##     "deps/libgetrandom-84473f2ddfbb434a.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/getrandom-84473f2ddfbb434a.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-getrandom-0.2.15"
## script = '''
## FROM scratch AS cratesio-getrandom-0.2.15
## ADD --chmod=0664 --unpack=true --checksum=sha256:c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7 \
##   https://static.crates.io/crates/getrandom/getrandom-0.2.15.crate /'''
## 
## [[stages]]
## name = "dep-n-getrandom-0.2.15-84473f2ddfbb434a"
## script = '''
## FROM rust-base AS dep-n-getrandom-0.2.15-84473f2ddfbb434a
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-getrandom-0.2.15,source=/getrandom-0.2.15,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15 \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="getrandom" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rand Project Developers" \
##         CARGO_PKG_DESCRIPTION="A small cross-platform library for retrieving random data from system source" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="getrandom" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-random/getrandom" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.2.15" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="15" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'getrandom' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "custom", "js", "js-sys", "linux_disable_fallback", "rdrand", "rustc-dep-of-std", "std", "test-in-browser", "wasm-bindgen"))' '-C' 'metadata=b85a1c392b28b82e' '-C' 'extra-filename=-84473f2ddfbb434a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/getrandom-0.2.15/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-84473f2ddfbb434a-errcode'''
## 
## [[stages]]
## name = "out-84473f2ddfbb434a"
## script = """
## FROM scratch AS out-84473f2ddfbb434a
## COPY --from=dep-n-getrandom-0.2.15-84473f2ddfbb434a /tmp/clis-ntpd_1-2-3/release/deps/*-84473f2ddfbb434a* /"""

FROM scratch AS cratesio-rand_core-0.6.4
ADD --chmod=0664 --unpack=true --checksum=sha256:ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c \
  https://static.crates.io/crates/rand_core/rand_core-0.6.4.crate /
FROM rust-base AS dep-n-rand_core-0.6.4-434e8a9dd58e4456
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rand_core-0.6.4,source=/rand_core-0.6.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4 \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rand_core" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Core random number generator traits and tools for implementation.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rand_core" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.6.4" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rand_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "getrandom", "serde", "serde1", "std"))' '-C' 'metadata=3387514d18f28e83' '-C' 'extra-filename=-434e8a9dd58e4456' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'getrandom=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-errcode
FROM scratch AS out-434e8a9dd58e4456
COPY --from=dep-n-rand_core-0.6.4-434e8a9dd58e4456 /tmp/clis-ntpd_1-2-3/release/deps/*-434e8a9dd58e4456* /

## this = "434e8a9dd58e4456"
## deps = [
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## short_externs = [
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## writes = [
##     "deps/rand_core-434e8a9dd58e4456.d",
##     "deps/librand_core-434e8a9dd58e4456.rmeta",
##     "deps/librand_core-434e8a9dd58e4456.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rand_core-434e8a9dd58e4456.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs","byte_start":1522,"byte_end":1529,"line_start":38,"line_end":38,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"#![cfg_attr(doc_cfg, feature(doc_cfg))]","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs:38:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(doc_cfg, feature(doc_cfg))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs","byte_start":2073,"byte_end":2080,"line_start":50,"line_end":50,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs:50:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs","byte_start":2524,"byte_end":2531,"line_start":64,"line_end":64,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs:64:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs","byte_start":2916,"byte_end":2923,"line_start":75,"line_end":75,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/error.rs:75:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/os.rs","byte_start":1716,"byte_end":1723,"line_start":46,"line_end":46,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/os.rs:46:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs","byte_start":17130,"byte_end":17137,"line_start":411,"line_end":411,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs:411:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"6 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 6 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rand_core-0.6.4"
## script = '''
## FROM scratch AS cratesio-rand_core-0.6.4
## ADD --chmod=0664 --unpack=true --checksum=sha256:ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c \
##   https://static.crates.io/crates/rand_core/rand_core-0.6.4.crate /'''
## 
## [[stages]]
## name = "dep-n-rand_core-0.6.4-434e8a9dd58e4456"
## script = '''
## FROM rust-base AS dep-n-rand_core-0.6.4-434e8a9dd58e4456
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rand_core-0.6.4,source=/rand_core-0.6.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4 \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rand_core" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers" \
##         CARGO_PKG_DESCRIPTION="Core random number generator traits and tools for implementation.\n" \
##         CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rand_core" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.6.4" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="4" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rand_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "getrandom", "serde", "serde1", "std"))' '-C' 'metadata=3387514d18f28e83' '-C' 'extra-filename=-434e8a9dd58e4456' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'getrandom=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_core-0.6.4/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-434e8a9dd58e4456-errcode'''
## 
## [[stages]]
## name = "out-434e8a9dd58e4456"
## script = """
## FROM scratch AS out-434e8a9dd58e4456
## COPY --from=dep-n-rand_core-0.6.4-434e8a9dd58e4456 /tmp/clis-ntpd_1-2-3/release/deps/*-434e8a9dd58e4456* /"""

FROM scratch AS cratesio-crypto-common-0.1.6
ADD --chmod=0664 --unpack=true --checksum=sha256:1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3 \
  https://static.crates.io/crates/crypto-common/crypto-common-0.1.6.crate /
FROM rust-base AS dep-n-crypto-common-0.1.6-1009fce94369ad6b
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-crypto-common-0.1.6,source=/crypto-common-0.1.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6 \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="crypto_common" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Common cryptographic traits" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="crypto-common" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.6" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="6" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'crypto_common' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="getrandom"' '--cfg' 'feature="rand_core"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("getrandom", "rand_core", "std"))' '-C' 'metadata=a8e6e0e0c15f42ae' '-C' 'extra-filename=-1009fce94369ad6b' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--extern' 'typenum=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-errcode
FROM scratch AS out-1009fce94369ad6b
COPY --from=dep-n-crypto-common-0.1.6-1009fce94369ad6b /tmp/clis-ntpd_1-2-3/release/deps/*-1009fce94369ad6b* /

## this = "1009fce94369ad6b"
## deps = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## short_externs = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## writes = [
##     "deps/crypto_common-1009fce94369ad6b.d",
##     "deps/libcrypto_common-1009fce94369ad6b.rmeta",
##     "deps/libcrypto_common-1009fce94369ad6b.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/crypto_common-1009fce94369ad6b.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-crypto-common-0.1.6"
## script = '''
## FROM scratch AS cratesio-crypto-common-0.1.6
## ADD --chmod=0664 --unpack=true --checksum=sha256:1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3 \
##   https://static.crates.io/crates/crypto-common/crypto-common-0.1.6.crate /'''
## 
## [[stages]]
## name = "dep-n-crypto-common-0.1.6-1009fce94369ad6b"
## script = '''
## FROM rust-base AS dep-n-crypto-common-0.1.6-1009fce94369ad6b
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-crypto-common-0.1.6,source=/crypto-common-0.1.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6 \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="crypto_common" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Common cryptographic traits" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="crypto-common" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.1.6" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="6" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'crypto_common' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="getrandom"' '--cfg' 'feature="rand_core"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("getrandom", "rand_core", "std"))' '-C' 'metadata=a8e6e0e0c15f42ae' '-C' 'extra-filename=-1009fce94369ad6b' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--extern' 'typenum=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-common-0.1.6/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-1009fce94369ad6b-errcode'''
## 
## [[stages]]
## name = "out-1009fce94369ad6b"
## script = """
## FROM scratch AS out-1009fce94369ad6b
## COPY --from=dep-n-crypto-common-0.1.6-1009fce94369ad6b /tmp/clis-ntpd_1-2-3/release/deps/*-1009fce94369ad6b* /"""

FROM scratch AS cratesio-aead-0.5.2
ADD --chmod=0664 --unpack=true --checksum=sha256:d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0 \
  https://static.crates.io/crates/aead/aead-0.5.2.crate /
FROM rust-base AS dep-n-aead-0.5.2-2ba1712ad50273ba
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-aead-0.5.2,source=/aead-0.5.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2 \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="aead" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,\nsuch as AES-GCM as ChaCha20Poly1305, which provide a high-level API\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="aead" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.5.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'aead' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="rand_core"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "arrayvec", "blobby", "bytes", "default", "dev", "getrandom", "heapless", "rand_core", "std", "stream"))' '-C' 'metadata=f12b97cd59057afb' '-C' 'extra-filename=-2ba1712ad50273ba' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-errcode
FROM scratch AS out-2ba1712ad50273ba
COPY --from=dep-n-aead-0.5.2-2ba1712ad50273ba /tmp/clis-ntpd_1-2-3/release/deps/*-2ba1712ad50273ba* /

## this = "2ba1712ad50273ba"
## deps = [
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## short_externs = [
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## writes = [
##     "deps/aead-2ba1712ad50273ba.d",
##     "deps/libaead-2ba1712ad50273ba.rmeta",
##     "deps/libaead-2ba1712ad50273ba.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/aead-2ba1712ad50273ba.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-aead-0.5.2"
## script = '''
## FROM scratch AS cratesio-aead-0.5.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0 \
##   https://static.crates.io/crates/aead/aead-0.5.2.crate /'''
## 
## [[stages]]
## name = "dep-n-aead-0.5.2-2ba1712ad50273ba"
## script = '''
## FROM rust-base AS dep-n-aead-0.5.2-2ba1712ad50273ba
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-aead-0.5.2,source=/aead-0.5.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2 \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="aead" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,\nsuch as AES-GCM as ChaCha20Poly1305, which provide a high-level API\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="aead" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.5.2" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="5" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'aead' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="rand_core"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "arrayvec", "blobby", "bytes", "default", "dev", "getrandom", "heapless", "rand_core", "std", "stream"))' '-C' 'metadata=f12b97cd59057afb' '-C' 'extra-filename=-2ba1712ad50273ba' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aead-0.5.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2ba1712ad50273ba-errcode'''
## 
## [[stages]]
## name = "out-2ba1712ad50273ba"
## script = """
## FROM scratch AS out-2ba1712ad50273ba
## COPY --from=dep-n-aead-0.5.2-2ba1712ad50273ba /tmp/clis-ntpd_1-2-3/release/deps/*-2ba1712ad50273ba* /"""

FROM scratch AS cratesio-inout-0.1.3
ADD --chmod=0664 --unpack=true --checksum=sha256:a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5 \
  https://static.crates.io/crates/inout/inout-0.1.3.crate /
FROM rust-base AS dep-n-inout-0.1.3-56f37e149446be27
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-inout-0.1.3,source=/inout-0.1.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3 \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="inout" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Custom reference types for code generic over in-place and buffer-to-buffer modes of operation." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="inout" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.1.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'inout' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("block-padding", "std"))' '-C' 'metadata=028d39a374e5d943' '-C' 'extra-filename=-56f37e149446be27' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-errcode
FROM scratch AS out-56f37e149446be27
COPY --from=dep-n-inout-0.1.3-56f37e149446be27 /tmp/clis-ntpd_1-2-3/release/deps/*-56f37e149446be27* /

## this = "56f37e149446be27"
## deps = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## short_externs = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## writes = [
##     "deps/inout-56f37e149446be27.d",
##     "deps/libinout-56f37e149446be27.rmeta",
##     "deps/libinout-56f37e149446be27.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/inout-56f37e149446be27.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-inout-0.1.3"
## script = '''
## FROM scratch AS cratesio-inout-0.1.3
## ADD --chmod=0664 --unpack=true --checksum=sha256:a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5 \
##   https://static.crates.io/crates/inout/inout-0.1.3.crate /'''
## 
## [[stages]]
## name = "dep-n-inout-0.1.3-56f37e149446be27"
## script = '''
## FROM rust-base AS dep-n-inout-0.1.3-56f37e149446be27
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-inout-0.1.3,source=/inout-0.1.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3 \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="inout" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Custom reference types for code generic over in-place and buffer-to-buffer modes of operation." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="inout" \
##         CARGO_PKG_README= \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.1.3" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="3" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'inout' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("block-padding", "std"))' '-C' 'metadata=028d39a374e5d943' '-C' 'extra-filename=-56f37e149446be27' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/inout-0.1.3/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56f37e149446be27-errcode'''
## 
## [[stages]]
## name = "out-56f37e149446be27"
## script = """
## FROM scratch AS out-56f37e149446be27
## COPY --from=dep-n-inout-0.1.3-56f37e149446be27 /tmp/clis-ntpd_1-2-3/release/deps/*-56f37e149446be27* /"""

FROM scratch AS cratesio-cipher-0.4.4
ADD --chmod=0664 --unpack=true --checksum=sha256:773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad \
  https://static.crates.io/crates/cipher/cipher-0.4.4.crate /
FROM rust-base AS dep-n-cipher-0.4.4-ca1baada07864a60
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-cipher-0.4.4,source=/cipher-0.4.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4 \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cipher" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Traits for describing block ciphers and stream ciphers" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cipher" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.4.4" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'cipher' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "blobby", "block-padding", "dev", "rand_core", "std", "zeroize"))' '-C' 'metadata=443f4e0dfc99dcb5' '-C' 'extra-filename=-ca1baada07864a60' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'inout=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-errcode
FROM scratch AS out-ca1baada07864a60
COPY --from=dep-n-cipher-0.4.4-ca1baada07864a60 /tmp/clis-ntpd_1-2-3/release/deps/*-ca1baada07864a60* /

## this = "ca1baada07864a60"
## deps = [
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
## ]
## short_externs = [
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
## ]
## writes = [
##     "deps/cipher-ca1baada07864a60.d",
##     "deps/libcipher-ca1baada07864a60.rmeta",
##     "deps/libcipher-ca1baada07864a60.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/cipher-ca1baada07864a60.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-cipher-0.4.4"
## script = '''
## FROM scratch AS cratesio-cipher-0.4.4
## ADD --chmod=0664 --unpack=true --checksum=sha256:773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad \
##   https://static.crates.io/crates/cipher/cipher-0.4.4.crate /'''
## 
## [[stages]]
## name = "dep-n-cipher-0.4.4-ca1baada07864a60"
## script = '''
## FROM rust-base AS dep-n-cipher-0.4.4-ca1baada07864a60
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-cipher-0.4.4,source=/cipher-0.4.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4 \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="cipher" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Traits for describing block ciphers and stream ciphers" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="cipher" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.4.4" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="4" \
##         CARGO_PKG_VERSION_PATCH="4" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'cipher' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "blobby", "block-padding", "dev", "rand_core", "std", "zeroize"))' '-C' 'metadata=443f4e0dfc99dcb5' '-C' 'extra-filename=-ca1baada07864a60' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'inout=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cipher-0.4.4/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-ca1baada07864a60-errcode'''
## 
## [[stages]]
## name = "out-ca1baada07864a60"
## script = """
## FROM scratch AS out-ca1baada07864a60
## COPY --from=dep-n-cipher-0.4.4-ca1baada07864a60 /tmp/clis-ntpd_1-2-3/release/deps/*-ca1baada07864a60* /"""

FROM scratch AS cratesio-cpufeatures-0.2.12
ADD --chmod=0664 --unpack=true --checksum=sha256:53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504 \
  https://static.crates.io/crates/cpufeatures/cpufeatures-0.2.12.crate /
FROM rust-base AS dep-n-cpufeatures-0.2.12-4ab791033e58debd
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-cpufeatures-0.2.12,source=/cpufeatures-0.2.12,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cpufeatures" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, \nwith no_std support and support for mobile targets including Android and iOS\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cpufeatures" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.12" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="12" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'cpufeatures' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=a24ec131d35758fa' '-C' 'extra-filename=-4ab791033e58debd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-errcode
FROM scratch AS out-4ab791033e58debd
COPY --from=dep-n-cpufeatures-0.2.12-4ab791033e58debd /tmp/clis-ntpd_1-2-3/release/deps/*-4ab791033e58debd* /

## this = "4ab791033e58debd"
## writes = [
##     "deps/cpufeatures-4ab791033e58debd.d",
##     "deps/libcpufeatures-4ab791033e58debd.rmeta",
##     "deps/libcpufeatures-4ab791033e58debd.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/cpufeatures-4ab791033e58debd.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-cpufeatures-0.2.12"
## script = '''
## FROM scratch AS cratesio-cpufeatures-0.2.12
## ADD --chmod=0664 --unpack=true --checksum=sha256:53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504 \
##   https://static.crates.io/crates/cpufeatures/cpufeatures-0.2.12.crate /'''
## 
## [[stages]]
## name = "dep-n-cpufeatures-0.2.12-4ab791033e58debd"
## script = '''
## FROM rust-base AS dep-n-cpufeatures-0.2.12-4ab791033e58debd
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-cpufeatures-0.2.12,source=/cpufeatures-0.2.12,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="cpufeatures" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, \nwith no_std support and support for mobile targets including Android and iOS\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="cpufeatures" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.2.12" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="12" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'cpufeatures' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=a24ec131d35758fa' '-C' 'extra-filename=-4ab791033e58debd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4ab791033e58debd-errcode'''
## 
## [[stages]]
## name = "out-4ab791033e58debd"
## script = """
## FROM scratch AS out-4ab791033e58debd
## COPY --from=dep-n-cpufeatures-0.2.12-4ab791033e58debd /tmp/clis-ntpd_1-2-3/release/deps/*-4ab791033e58debd* /"""

FROM scratch AS cratesio-aes-0.8.4
ADD --chmod=0664 --unpack=true --checksum=sha256:b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0 \
  https://static.crates.io/crates/aes/aes-0.8.4.crate /
FROM rust-base AS dep-n-aes-0.8.4-81c9db97d7f9be78
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-aes-0.8.4,source=/aes-0.8.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4 \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="aes" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="aes" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/block-ciphers" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.8.4" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'aes' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("hazmat", "zeroize"))' '-C' 'metadata=a904c92e53e4b1cb' '-C' 'extra-filename=-81c9db97d7f9be78' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'cpufeatures=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-errcode
FROM scratch AS out-81c9db97d7f9be78
COPY --from=dep-n-aes-0.8.4-81c9db97d7f9be78 /tmp/clis-ntpd_1-2-3/release/deps/*-81c9db97d7f9be78* /

## this = "81c9db97d7f9be78"
## deps = [
##     "da34da6838abd7f1",
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
##     "4ab791033e58debd",
## ]
## short_externs = [
##     "da34da6838abd7f1",
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
##     "4ab791033e58debd",
## ]
## writes = [
##     "deps/aes-81c9db97d7f9be78.d",
##     "deps/libaes-81c9db97d7f9be78.rmeta",
##     "deps/libaes-81c9db97d7f9be78.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/aes-81c9db97d7f9be78.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_armv8`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs","byte_start":5052,"byte_end":5061,"line_start":134,"line_end":134,"column_start":43,"column_end":52,"is_primary":true,"text":[{"text":"    if #[cfg(all(target_arch = \"aarch64\", aes_armv8, not(aes_force_soft)))] {","highlight_start":43,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_armv8)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_armv8)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_armv8`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs:134:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if #[cfg(all(target_arch = \"aarch64\", aes_armv8, not(aes_force_soft)))] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_armv8)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_armv8)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_force_soft`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs","byte_start":5067,"byte_end":5081,"line_start":134,"line_end":134,"column_start":58,"column_end":72,"is_primary":true,"text":[{"text":"    if #[cfg(all(target_arch = \"aarch64\", aes_armv8, not(aes_force_soft)))] {","highlight_start":58,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_force_soft)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_force_soft)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_force_soft`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs:134:58\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if #[cfg(all(target_arch = \"aarch64\", aes_armv8, not(aes_force_soft)))] {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_force_soft)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_force_soft)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_force_soft`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs","byte_start":5257,"byte_end":5271,"line_start":140,"line_end":140,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"        not(aes_force_soft)","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_force_soft)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_force_soft)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_force_soft`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs:140:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        not(aes_force_soft)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_force_soft)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_force_soft)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":29324,"byte_end":29335,"line_start":1098,"line_end":1098,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"#[cfg(not(aes_compact))]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1098:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":29467,"byte_end":29478,"line_start":1106,"line_end":1106,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"#[cfg(not(aes_compact))]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1106:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":29977,"byte_end":29988,"line_start":1128,"line_end":1128,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"#[cfg(any(not(aes_compact), feature = \"hazmat\"))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1128:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(any(not(aes_compact), feature = \"hazmat\"))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":30929,"byte_end":30940,"line_start":1167,"line_end":1167,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"#[cfg(not(aes_compact))]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1167:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":39282,"byte_end":39293,"line_start":1401,"line_end":1401,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"#[cfg(not(aes_compact))]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1401:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":39503,"byte_end":39514,"line_start":1409,"line_end":1409,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"#[cfg(not(aes_compact))]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:1409:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":2085,"byte_end":2096,"line_start":65,"line_end":65,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    #[cfg(aes_compact)]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:65:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(aes_compact)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":2228,"byte_end":2239,"line_start":71,"line_end":71,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:71:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":5238,"byte_end":5249,"line_start":171,"line_end":171,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    #[cfg(aes_compact)]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:171:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":5382,"byte_end":5393,"line_start":177,"line_end":177,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":6975,"byte_end":6986,"line_start":241,"line_end":241,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"    #[cfg(aes_compact)]","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:241:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":7119,"byte_end":7130,"line_start":247,"line_end":247,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:247:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":8002,"byte_end":8013,"line_start":276,"line_end":276,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:276:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":8118,"byte_end":8129,"line_start":283,"line_end":283,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:283:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":8590,"byte_end":8601,"line_start":302,"line_end":302,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:302:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":10338,"byte_end":10349,"line_start":366,"line_end":366,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:366:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":9645,"byte_end":9656,"line_start":338,"line_end":338,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:338:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":9792,"byte_end":9803,"line_start":347,"line_end":347,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:347:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":10971,"byte_end":10982,"line_start":390,"line_end":390,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:390:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":11065,"byte_end":11076,"line_start":394,"line_end":394,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:394:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":12497,"byte_end":12508,"line_start":444,"line_end":444,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:444:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":12587,"byte_end":12598,"line_start":448,"line_end":448,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:448:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":13711,"byte_end":13722,"line_start":488,"line_end":488,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:488:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":13828,"byte_end":13839,"line_start":495,"line_end":495,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:495:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m495\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":14300,"byte_end":14311,"line_start":514,"line_end":514,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:514:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m514\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":16049,"byte_end":16060,"line_start":578,"line_end":578,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"    #[cfg(not(aes_compact))]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:578:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":15355,"byte_end":15366,"line_start":550,"line_end":550,"column_start":15,"column_end":26,"is_primary":true,"text":[{"text":"        #[cfg(aes_compact)]","highlight_start":15,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:550:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m550\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(aes_compact)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_compact`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs","byte_start":15503,"byte_end":15514,"line_start":559,"line_end":559,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"        #[cfg(not(aes_compact))]","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_compact`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/soft/fixslice64.rs:559:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m559\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(aes_compact))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_compact)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_compact)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `aes_armv8`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs","byte_start":386,"byte_end":395,"line_start":13,"line_end":13,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"#[cfg(all(target_arch = \"aarch64\", aes_armv8))]","highlight_start":36,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_armv8)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_armv8)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `aes_armv8`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs:13:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(target_arch = \"aarch64\", aes_armv8))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(aes_armv8)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(aes_armv8)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: ``","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":661,"byte_end":675,"line_start":17,"line_end":17,"column_start":47,"column_end":61,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":4498,"byte_end":4674,"line_start":172,"line_end":176,"column_start":21,"column_end":22,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs","byte_start":519,"byte_end":559,"line_start":19,"line_end":19,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"cpufeatures::new!(aes_intrinsics, \"aes\");","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cpufeatures::new!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":3943,"byte_end":3959,"line_start":156,"line_end":156,"column_start":1,"column_end":17,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__unless_target_features!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":476,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":38,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: ``\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcpufeatures::new!(aes_intrinsics, \"aes\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::__unless_target_features` which comes from the expansion of the macro `cpufeatures::new` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: ``","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":913,"byte_end":927,"line_start":22,"line_end":22,"column_start":43,"column_end":57,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":4498,"byte_end":4674,"line_start":172,"line_end":176,"column_start":21,"column_end":22,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs","byte_start":519,"byte_end":559,"line_start":19,"line_end":19,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"cpufeatures::new!(aes_intrinsics, \"aes\");","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cpufeatures::new!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":3943,"byte_end":3959,"line_start":156,"line_end":156,"column_start":1,"column_end":17,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__unless_target_features!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":476,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":38,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: ``\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcpufeatures::new!(aes_intrinsics, \"aes\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::__unless_target_features` which comes from the expansion of the macro `cpufeatures::new` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: ``","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":661,"byte_end":675,"line_start":17,"line_end":17,"column_start":47,"column_end":61,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":4928,"byte_end":5507,"line_start":184,"line_end":197,"column_start":27,"column_end":18,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs","byte_start":519,"byte_end":559,"line_start":19,"line_end":19,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"cpufeatures::new!(aes_intrinsics, \"aes\");","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cpufeatures::new!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":3943,"byte_end":3959,"line_start":156,"line_end":156,"column_start":1,"column_end":17,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__unless_target_features!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":476,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":38,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: ``\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcpufeatures::new!(aes_intrinsics, \"aes\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::__unless_target_features` which comes from the expansion of the macro `cpufeatures::new` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: ``","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":913,"byte_end":927,"line_start":22,"line_end":22,"column_start":43,"column_end":57,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":4928,"byte_end":5507,"line_start":184,"line_end":197,"column_start":27,"column_end":18,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs","byte_start":519,"byte_end":559,"line_start":19,"line_end":19,"column_start":1,"column_end":41,"is_primary":false,"text":[{"text":"cpufeatures::new!(aes_intrinsics, \"aes\");","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cpufeatures::new!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/lib.rs","byte_start":3943,"byte_end":3959,"line_start":156,"line_end":156,"column_start":1,"column_end":17,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__unless_target_features!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cpufeatures-0.2.12/src/x86.rs","byte_start":476,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":38,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: ``\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/autodetect.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcpufeatures::new!(aes_intrinsics, \"aes\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: using a cfg inside a macro will use the cfgs from the destination crate and not the ones from the defining crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try referring to `$crate::__unless_target_features` crate for guidance on how handle this unexpected cfg\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the macro `$crate::__unless_target_features` may come from an old version of the `cpufeatures` crate, try updating your dependency with `cargo update -p cpufeatures`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::__unless_target_features` which comes from the expansion of the macro `cpufeatures::new` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"36 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 36 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rmeta"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-aes-0.8.4"
## script = '''
## FROM scratch AS cratesio-aes-0.8.4
## ADD --chmod=0664 --unpack=true --checksum=sha256:b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0 \
##   https://static.crates.io/crates/aes/aes-0.8.4.crate /'''
## 
## [[stages]]
## name = "dep-n-aes-0.8.4-81c9db97d7f9be78"
## script = '''
## FROM rust-base AS dep-n-aes-0.8.4-81c9db97d7f9be78
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-aes-0.8.4,source=/aes-0.8.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4 \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="aes" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="aes" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/block-ciphers" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.8.4" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="8" \
##         CARGO_PKG_VERSION_PATCH="4" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'aes' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("hazmat", "zeroize"))' '-C' 'metadata=a904c92e53e4b1cb' '-C' 'extra-filename=-81c9db97d7f9be78' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'cpufeatures=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-0.8.4/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-81c9db97d7f9be78-errcode'''
## 
## [[stages]]
## name = "out-81c9db97d7f9be78"
## script = """
## FROM scratch AS out-81c9db97d7f9be78
## COPY --from=dep-n-aes-0.8.4-81c9db97d7f9be78 /tmp/clis-ntpd_1-2-3/release/deps/*-81c9db97d7f9be78* /"""

FROM scratch AS cratesio-dbl-0.3.2
ADD --chmod=0664 --unpack=true --checksum=sha256:bd2735a791158376708f9347fe8faba9667589d82427ef3aed6794a8981de3d9 \
  https://static.crates.io/crates/dbl/dbl-0.3.2.crate /
FROM rust-base AS dep-n-dbl-0.3.2-19f9a0f198045bc5
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-dbl-0.3.2,source=/dbl-0.3.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2 \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="dbl" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Double operation in Galois Field (GF)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="dbl" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'dbl' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=83352f6957298b08' '-C' 'extra-filename=-19f9a0f198045bc5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-errcode
FROM scratch AS out-19f9a0f198045bc5
COPY --from=dep-n-dbl-0.3.2-19f9a0f198045bc5 /tmp/clis-ntpd_1-2-3/release/deps/*-19f9a0f198045bc5* /

## this = "19f9a0f198045bc5"
## deps = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## short_externs = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## writes = [
##     "deps/dbl-19f9a0f198045bc5.d",
##     "deps/libdbl-19f9a0f198045bc5.rmeta",
##     "deps/libdbl-19f9a0f198045bc5.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/dbl-19f9a0f198045bc5.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-dbl-0.3.2"
## script = '''
## FROM scratch AS cratesio-dbl-0.3.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:bd2735a791158376708f9347fe8faba9667589d82427ef3aed6794a8981de3d9 \
##   https://static.crates.io/crates/dbl/dbl-0.3.2.crate /'''
## 
## [[stages]]
## name = "dep-n-dbl-0.3.2-19f9a0f198045bc5"
## script = '''
## FROM rust-base AS dep-n-dbl-0.3.2-19f9a0f198045bc5
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-dbl-0.3.2,source=/dbl-0.3.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2 \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="dbl" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Double operation in Galois Field (GF)" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="dbl" \
##         CARGO_PKG_README= \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.3.2" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="3" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'dbl' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=83352f6957298b08' '-C' 'extra-filename=-19f9a0f198045bc5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbl-0.3.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-19f9a0f198045bc5-errcode'''
## 
## [[stages]]
## name = "out-19f9a0f198045bc5"
## script = """
## FROM scratch AS out-19f9a0f198045bc5
## COPY --from=dep-n-dbl-0.3.2-19f9a0f198045bc5 /tmp/clis-ntpd_1-2-3/release/deps/*-19f9a0f198045bc5* /"""

FROM scratch AS cratesio-block-buffer-0.10.4
ADD --chmod=0664 --unpack=true --checksum=sha256:3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71 \
  https://static.crates.io/crates/block-buffer/block-buffer-0.10.4.crate /
FROM rust-base AS dep-n-block-buffer-0.10.4-bc12f6e8b62af3c6
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-block-buffer-0.10.4,source=/block-buffer-0.10.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4 \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="block_buffer" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Buffer type for block processing of data" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="block-buffer" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.10.4" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="10" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'block_buffer' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=c34575ffbc27f6c1' '-C' 'extra-filename=-bc12f6e8b62af3c6' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-errcode
FROM scratch AS out-bc12f6e8b62af3c6
COPY --from=dep-n-block-buffer-0.10.4-bc12f6e8b62af3c6 /tmp/clis-ntpd_1-2-3/release/deps/*-bc12f6e8b62af3c6* /

## this = "bc12f6e8b62af3c6"
## deps = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## short_externs = [
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
## ]
## writes = [
##     "deps/block_buffer-bc12f6e8b62af3c6.d",
##     "deps/libblock_buffer-bc12f6e8b62af3c6.rmeta",
##     "deps/libblock_buffer-bc12f6e8b62af3c6.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/block_buffer-bc12f6e8b62af3c6.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-block-buffer-0.10.4"
## script = '''
## FROM scratch AS cratesio-block-buffer-0.10.4
## ADD --chmod=0664 --unpack=true --checksum=sha256:3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71 \
##   https://static.crates.io/crates/block-buffer/block-buffer-0.10.4.crate /'''
## 
## [[stages]]
## name = "dep-n-block-buffer-0.10.4-bc12f6e8b62af3c6"
## script = '''
## FROM rust-base AS dep-n-block-buffer-0.10.4-bc12f6e8b62af3c6
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-block-buffer-0.10.4,source=/block-buffer-0.10.4,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4 \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="block_buffer" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Buffer type for block processing of data" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="block-buffer" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.10.4" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="10" \
##         CARGO_PKG_VERSION_PATCH="4" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'block_buffer' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=c34575ffbc27f6c1' '-C' 'extra-filename=-bc12f6e8b62af3c6' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'generic_array=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/block-buffer-0.10.4/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bc12f6e8b62af3c6-errcode'''
## 
## [[stages]]
## name = "out-bc12f6e8b62af3c6"
## script = """
## FROM scratch AS out-bc12f6e8b62af3c6
## COPY --from=dep-n-block-buffer-0.10.4-bc12f6e8b62af3c6 /tmp/clis-ntpd_1-2-3/release/deps/*-bc12f6e8b62af3c6* /"""

FROM scratch AS cratesio-subtle-2.6.1
ADD --chmod=0664 --unpack=true --checksum=sha256:13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292 \
  https://static.crates.io/crates/subtle/subtle-2.6.1.crate /
FROM rust-base AS dep-n-subtle-2.6.1-8b6e21d4a5a6c6ed
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-subtle-2.6.1,source=/subtle-2.6.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="subtle" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>" \
        CARGO_PKG_DESCRIPTION="Pure-Rust traits and utilities for constant-time cryptographic implementations." \
        CARGO_PKG_HOMEPAGE="https://dalek.rs/" \
        CARGO_PKG_LICENSE="BSD-3-Clause" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="subtle" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dalek-cryptography/subtle" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.6.1" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'subtle' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("const-generics", "core_hint_black_box", "default", "i128", "nightly", "std"))' '-C' 'metadata=9243ede5932f6852' '-C' 'extra-filename=-8b6e21d4a5a6c6ed' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-errcode
FROM scratch AS out-8b6e21d4a5a6c6ed
COPY --from=dep-n-subtle-2.6.1-8b6e21d4a5a6c6ed /tmp/clis-ntpd_1-2-3/release/deps/*-8b6e21d4a5a6c6ed* /

## this = "8b6e21d4a5a6c6ed"
## writes = [
##     "deps/subtle-8b6e21d4a5a6c6ed.d",
##     "deps/libsubtle-8b6e21d4a5a6c6ed.rmeta",
##     "deps/libsubtle-8b6e21d4a5a6c6ed.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/subtle-8b6e21d4a5a6c6ed.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-subtle-2.6.1"
## script = '''
## FROM scratch AS cratesio-subtle-2.6.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292 \
##   https://static.crates.io/crates/subtle/subtle-2.6.1.crate /'''
## 
## [[stages]]
## name = "dep-n-subtle-2.6.1-8b6e21d4a5a6c6ed"
## script = '''
## FROM rust-base AS dep-n-subtle-2.6.1-8b6e21d4a5a6c6ed
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-subtle-2.6.1,source=/subtle-2.6.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="subtle" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>" \
##         CARGO_PKG_DESCRIPTION="Pure-Rust traits and utilities for constant-time cryptographic implementations." \
##         CARGO_PKG_HOMEPAGE="https://dalek.rs/" \
##         CARGO_PKG_LICENSE="BSD-3-Clause" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="subtle" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dalek-cryptography/subtle" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="2.6.1" \
##         CARGO_PKG_VERSION_MAJOR="2" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'subtle' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("const-generics", "core_hint_black_box", "default", "i128", "nightly", "std"))' '-C' 'metadata=9243ede5932f6852' '-C' 'extra-filename=-8b6e21d4a5a6c6ed' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-2.6.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8b6e21d4a5a6c6ed-errcode'''
## 
## [[stages]]
## name = "out-8b6e21d4a5a6c6ed"
## script = """
## FROM scratch AS out-8b6e21d4a5a6c6ed
## COPY --from=dep-n-subtle-2.6.1-8b6e21d4a5a6c6ed /tmp/clis-ntpd_1-2-3/release/deps/*-8b6e21d4a5a6c6ed* /"""

FROM scratch AS cratesio-digest-0.10.7
ADD --chmod=0664 --unpack=true --checksum=sha256:9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292 \
  https://static.crates.io/crates/digest/digest-0.10.7.crate /
FROM rust-base AS dep-n-digest-0.10.7-65e96f3f500a3098
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-digest-0.10.7,source=/digest-0.10.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7 \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="digest" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Traits for cryptographic hash functions and message authentication codes" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="digest" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.10.7" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="10" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'digest' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="block-buffer"' '--cfg' 'feature="core-api"' '--cfg' 'feature="default"' '--cfg' 'feature="mac"' '--cfg' 'feature="std"' '--cfg' 'feature="subtle"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "blobby", "block-buffer", "const-oid", "core-api", "default", "dev", "mac", "oid", "rand_core", "std", "subtle"))' '-C' 'metadata=13ce549efcf8978b' '-C' 'extra-filename=-65e96f3f500a3098' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'block_buffer=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'subtle=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-errcode
FROM scratch AS out-65e96f3f500a3098
COPY --from=dep-n-digest-0.10.7-65e96f3f500a3098 /tmp/clis-ntpd_1-2-3/release/deps/*-65e96f3f500a3098* /

## this = "65e96f3f500a3098"
## deps = [
##     "bc12f6e8b62af3c6",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "1009fce94369ad6b",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "8b6e21d4a5a6c6ed",
## ]
## short_externs = [
##     "bc12f6e8b62af3c6",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "1009fce94369ad6b",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "8b6e21d4a5a6c6ed",
## ]
## writes = [
##     "deps/digest-65e96f3f500a3098.d",
##     "deps/libdigest-65e96f3f500a3098.rmeta",
##     "deps/libdigest-65e96f3f500a3098.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/digest-65e96f3f500a3098.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-digest-0.10.7"
## script = '''
## FROM scratch AS cratesio-digest-0.10.7
## ADD --chmod=0664 --unpack=true --checksum=sha256:9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292 \
##   https://static.crates.io/crates/digest/digest-0.10.7.crate /'''
## 
## [[stages]]
## name = "dep-n-digest-0.10.7-65e96f3f500a3098"
## script = '''
## FROM rust-base AS dep-n-digest-0.10.7-65e96f3f500a3098
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-digest-0.10.7,source=/digest-0.10.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7 \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="digest" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Traits for cryptographic hash functions and message authentication codes" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="digest" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.10.7" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="10" \
##         CARGO_PKG_VERSION_PATCH="7" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'digest' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="block-buffer"' '--cfg' 'feature="core-api"' '--cfg' 'feature="default"' '--cfg' 'feature="mac"' '--cfg' 'feature="std"' '--cfg' 'feature="subtle"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "blobby", "block-buffer", "const-oid", "core-api", "default", "dev", "mac", "oid", "rand_core", "std", "subtle"))' '-C' 'metadata=13ce549efcf8978b' '-C' 'extra-filename=-65e96f3f500a3098' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'block_buffer=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta' '--extern' 'crypto_common=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta' '--extern' 'subtle=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.10.7/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-65e96f3f500a3098-errcode'''
## 
## [[stages]]
## name = "out-65e96f3f500a3098"
## script = """
## FROM scratch AS out-65e96f3f500a3098
## COPY --from=dep-n-digest-0.10.7-65e96f3f500a3098 /tmp/clis-ntpd_1-2-3/release/deps/*-65e96f3f500a3098* /"""

FROM scratch AS cratesio-cmac-0.7.2
ADD --chmod=0664 --unpack=true --checksum=sha256:8543454e3c3f5126effff9cd44d562af4e31fb8ce1cc0d3dcd8f084515dbc1aa \
  https://static.crates.io/crates/cmac/cmac-0.7.2.crate /
FROM rust-base AS dep-n-cmac-0.7.2-568874dfd4c5be74
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-cmac-0.7.2,source=/cmac-0.7.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2 \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cmac" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Generic implementation of Cipher-based Message Authentication Code" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cmac" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/MACs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.7.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'cmac' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("std", "zeroize"))' '-C' 'metadata=c52bec0dc9f3e628' '-C' 'extra-filename=-568874dfd4c5be74' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'dbl=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-errcode
FROM scratch AS out-568874dfd4c5be74
COPY --from=dep-n-cmac-0.7.2-568874dfd4c5be74 /tmp/clis-ntpd_1-2-3/release/deps/*-568874dfd4c5be74* /

## this = "568874dfd4c5be74"
## deps = [
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
## ]
## short_externs = [
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
## ]
## writes = [
##     "deps/cmac-568874dfd4c5be74.d",
##     "deps/libcmac-568874dfd4c5be74.rmeta",
##     "deps/libcmac-568874dfd4c5be74.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/cmac-568874dfd4c5be74.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rmeta"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rmeta"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-cmac-0.7.2"
## script = '''
## FROM scratch AS cratesio-cmac-0.7.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:8543454e3c3f5126effff9cd44d562af4e31fb8ce1cc0d3dcd8f084515dbc1aa \
##   https://static.crates.io/crates/cmac/cmac-0.7.2.crate /'''
## 
## [[stages]]
## name = "dep-n-cmac-0.7.2-568874dfd4c5be74"
## script = '''
## FROM rust-base AS dep-n-cmac-0.7.2-568874dfd4c5be74
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-cmac-0.7.2,source=/cmac-0.7.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2 \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="cmac" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Generic implementation of Cipher-based Message Authentication Code" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="cmac" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/MACs" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.7.2" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="7" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'cmac' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("std", "zeroize"))' '-C' 'metadata=c52bec0dc9f3e628' '-C' 'extra-filename=-568874dfd4c5be74' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'dbl=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cmac-0.7.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-568874dfd4c5be74-errcode'''
## 
## [[stages]]
## name = "out-568874dfd4c5be74"
## script = """
## FROM scratch AS out-568874dfd4c5be74
## COPY --from=dep-n-cmac-0.7.2-568874dfd4c5be74 /tmp/clis-ntpd_1-2-3/release/deps/*-568874dfd4c5be74* /"""

FROM scratch AS cratesio-ctr-0.9.2
ADD --chmod=0664 --unpack=true --checksum=sha256:0369ee1ad671834580515889b80f2ea915f23b8be8d0daa4bbaf2ac5c7590835 \
  https://static.crates.io/crates/ctr/ctr-0.9.2.crate /
FROM rust-base AS dep-n-ctr-0.9.2-aca4c84266bacfb7
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ctr-0.9.2,source=/ctr-0.9.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2 \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ctr" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="CTR block modes of operation" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ctr" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/block-modes" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.9.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="9" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ctr' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "block-padding", "std", "zeroize"))' '-C' 'metadata=2c6c0332443a0ff8' '-C' 'extra-filename=-aca4c84266bacfb7' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-errcode
FROM scratch AS out-aca4c84266bacfb7
COPY --from=dep-n-ctr-0.9.2-aca4c84266bacfb7 /tmp/clis-ntpd_1-2-3/release/deps/*-aca4c84266bacfb7* /

## this = "aca4c84266bacfb7"
## deps = [
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
## ]
## short_externs = [
##     "ca1baada07864a60",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "56f37e149446be27",
## ]
## writes = [
##     "deps/ctr-aca4c84266bacfb7.d",
##     "deps/libctr-aca4c84266bacfb7.rmeta",
##     "deps/libctr-aca4c84266bacfb7.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ctr-aca4c84266bacfb7.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ctr-0.9.2"
## script = '''
## FROM scratch AS cratesio-ctr-0.9.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:0369ee1ad671834580515889b80f2ea915f23b8be8d0daa4bbaf2ac5c7590835 \
##   https://static.crates.io/crates/ctr/ctr-0.9.2.crate /'''
## 
## [[stages]]
## name = "dep-n-ctr-0.9.2-aca4c84266bacfb7"
## script = '''
## FROM rust-base AS dep-n-ctr-0.9.2-aca4c84266bacfb7
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ctr-0.9.2,source=/ctr-0.9.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2 \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ctr" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="CTR block modes of operation" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ctr" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/block-modes" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.9.2" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="9" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ctr' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "block-padding", "std", "zeroize"))' '-C' 'metadata=2c6c0332443a0ff8' '-C' 'extra-filename=-aca4c84266bacfb7' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ctr-0.9.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-aca4c84266bacfb7-errcode'''
## 
## [[stages]]
## name = "out-aca4c84266bacfb7"
## script = """
## FROM scratch AS out-aca4c84266bacfb7
## COPY --from=dep-n-ctr-0.9.2-aca4c84266bacfb7 /tmp/clis-ntpd_1-2-3/release/deps/*-aca4c84266bacfb7* /"""

FROM scratch AS cratesio-zeroize-1.8.1
ADD --chmod=0664 --unpack=true --checksum=sha256:ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde \
  https://static.crates.io/crates/zeroize/zeroize-1.8.1.crate /
FROM rust-base AS dep-n-zeroize-1.8.1-caf2b0ffe78763b7
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-zeroize-1.8.1,source=/zeroize-1.8.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="zeroize" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="The RustCrypto Project Developers" \
        CARGO_PKG_DESCRIPTION="Securely clear secrets from memory with a simple trait built on\nstable Rust primitives which guarantee memory is zeroed using an\noperation will not be 'optimized away' by the compiler.\nUses a portable pure Rust implementation that works everywhere,\neven WASM!\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="zeroize" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils/tree/master/zeroize" \
        CARGO_PKG_RUST_VERSION="1.60" \
        CARGO_PKG_VERSION="1.8.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'zeroize' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("aarch64", "alloc", "default", "derive", "serde", "simd", "std", "zeroize_derive"))' '-C' 'metadata=9cd21aaddf191e91' '-C' 'extra-filename=-caf2b0ffe78763b7' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-errcode
FROM scratch AS out-caf2b0ffe78763b7
COPY --from=dep-n-zeroize-1.8.1-caf2b0ffe78763b7 /tmp/clis-ntpd_1-2-3/release/deps/*-caf2b0ffe78763b7* /

## this = "caf2b0ffe78763b7"
## writes = [
##     "deps/zeroize-caf2b0ffe78763b7.d",
##     "deps/libzeroize-caf2b0ffe78763b7.rmeta",
##     "deps/libzeroize-caf2b0ffe78763b7.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/zeroize-caf2b0ffe78763b7.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unnecessary qualification","code":{"code":"unused_qualifications","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":14304,"byte_end":14324,"line_start":415,"line_end":415,"column_start":63,"column_end":83,"is_primary":true,"text":[{"text":"            volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());","highlight_start":63,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":292,"byte_end":313,"line_start":7,"line_end":7,"column_start":41,"column_end":62,"is_primary":true,"text":[{"text":"#![warn(missing_docs, rust_2018_idioms, unused_qualifications)]","highlight_start":41,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unnecessary path segments","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":14304,"byte_end":14309,"line_start":415,"line_end":415,"column_start":63,"column_end":68,"is_primary":true,"text":[{"text":"            volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());","highlight_start":63,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary qualification\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs:415:63\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs:7:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![warn(missing_docs, rust_2018_idioms, unused_qualifications)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary path segments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            volatile_set((self as *mut Self).cast::<u8>(), 0, \u001b[0m\u001b[0m\u001b[38;5;9mmem::\u001b[0m\u001b[0msize_of::<Self>());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            volatile_set((self as *mut Self).cast::<u8>(), 0, size_of::<Self>());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unnecessary qualification","code":{"code":"unused_qualifications","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":15847,"byte_end":15864,"line_start":460,"line_end":460,"column_start":43,"column_end":60,"is_primary":true,"text":[{"text":"        let size = self.len().checked_mul(mem::size_of::<Z>()).unwrap();","highlight_start":43,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unnecessary path segments","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":15847,"byte_end":15852,"line_start":460,"line_end":460,"column_start":43,"column_end":48,"is_primary":true,"text":[{"text":"        let size = self.len().checked_mul(mem::size_of::<Z>()).unwrap();","highlight_start":43,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary qualification\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs:460:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let size = self.len().checked_mul(mem::size_of::<Z>()).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary path segments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let size = self.len().checked_mul(\u001b[0m\u001b[0m\u001b[38;5;9mmem::\u001b[0m\u001b[0msize_of::<Z>()).unwrap();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let size = self.len().checked_mul(size_of::<Z>()).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unnecessary qualification","code":{"code":"unused_qualifications","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":26854,"byte_end":26871,"line_start":840,"line_end":840,"column_start":16,"column_end":33,"is_primary":true,"text":[{"text":"    let size = mem::size_of::<F>();","highlight_start":16,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unnecessary path segments","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs","byte_start":26854,"byte_end":26859,"line_start":840,"line_end":840,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"    let size = mem::size_of::<F>();","highlight_start":16,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary qualification\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs:840:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let size = mem::size_of::<F>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the unnecessary path segments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    let size = \u001b[0m\u001b[0m\u001b[38;5;9mmem::\u001b[0m\u001b[0msize_of::<F>();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    let size = size_of::<F>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-zeroize-1.8.1"
## script = '''
## FROM scratch AS cratesio-zeroize-1.8.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde \
##   https://static.crates.io/crates/zeroize/zeroize-1.8.1.crate /'''
## 
## [[stages]]
## name = "dep-n-zeroize-1.8.1-caf2b0ffe78763b7"
## script = '''
## FROM rust-base AS dep-n-zeroize-1.8.1-caf2b0ffe78763b7
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-zeroize-1.8.1,source=/zeroize-1.8.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="zeroize" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The RustCrypto Project Developers" \
##         CARGO_PKG_DESCRIPTION="Securely clear secrets from memory with a simple trait built on\nstable Rust primitives which guarantee memory is zeroed using an\noperation will not be 'optimized away' by the compiler.\nUses a portable pure Rust implementation that works everywhere,\neven WASM!\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="zeroize" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils/tree/master/zeroize" \
##         CARGO_PKG_RUST_VERSION="1.60" \
##         CARGO_PKG_VERSION="1.8.1" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="8" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'zeroize' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("aarch64", "alloc", "default", "derive", "serde", "simd", "std", "zeroize_derive"))' '-C' 'metadata=9cd21aaddf191e91' '-C' 'extra-filename=-caf2b0ffe78763b7' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/zeroize-1.8.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-caf2b0ffe78763b7-errcode'''
## 
## [[stages]]
## name = "out-caf2b0ffe78763b7"
## script = """
## FROM scratch AS out-caf2b0ffe78763b7
## COPY --from=dep-n-zeroize-1.8.1-caf2b0ffe78763b7 /tmp/clis-ntpd_1-2-3/release/deps/*-caf2b0ffe78763b7* /"""

FROM scratch AS cratesio-aes-siv-0.7.0
ADD --chmod=0664 --unpack=true --checksum=sha256:7e08d0cdb774acd1e4dac11478b1a0c0d203134b2aab0ba25eb430de9b18f8b9 \
  https://static.crates.io/crates/aes-siv/aes-siv-0.7.0.crate /
FROM rust-base AS dep-n-aes-siv-0.7.0-e0325614c1d7d6ab
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-aes-siv-0.7.0,source=/aes-siv-0.7.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0 \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="aes_siv" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Pure Rust implementation of the AES-SIV Misuse-Resistant Authenticated\nEncryption Cipher (RFC 5297) with optional architecture-specific\nhardware acceleration\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="aes-siv" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/AEADs" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="0.7.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'aes_siv' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "getrandom", "heapless", "pmac", "std", "stream"))' '-C' 'metadata=7a478ad10112b33f' '-C' 'extra-filename=-e0325614c1d7d6ab' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'aead=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta' '--extern' 'aes=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'cmac=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta' '--extern' 'ctr=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta' '--extern' 'dbl=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-errcode
FROM scratch AS out-e0325614c1d7d6ab
COPY --from=dep-n-aes-siv-0.7.0-e0325614c1d7d6ab /tmp/clis-ntpd_1-2-3/release/deps/*-e0325614c1d7d6ab* /

## this = "e0325614c1d7d6ab"
## deps = [
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
## ]
## short_externs = [
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
## ]
## writes = [
##     "deps/aes_siv-e0325614c1d7d6ab.d",
##     "deps/libaes_siv-e0325614c1d7d6ab.rmeta",
##     "deps/libaes_siv-e0325614c1d7d6ab.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/aes_siv-e0325614c1d7d6ab.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rmeta"
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rmeta"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rlib"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rmeta"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rlib"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rmeta"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rlib"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rmeta"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rmeta"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rmeta"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rlib"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rmeta"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-aes-siv-0.7.0"
## script = '''
## FROM scratch AS cratesio-aes-siv-0.7.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:7e08d0cdb774acd1e4dac11478b1a0c0d203134b2aab0ba25eb430de9b18f8b9 \
##   https://static.crates.io/crates/aes-siv/aes-siv-0.7.0.crate /'''
## 
## [[stages]]
## name = "dep-n-aes-siv-0.7.0-e0325614c1d7d6ab"
## script = '''
## FROM rust-base AS dep-n-aes-siv-0.7.0-e0325614c1d7d6ab
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-aes-siv-0.7.0,source=/aes-siv-0.7.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0 \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="aes_siv" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="Pure Rust implementation of the AES-SIV Misuse-Resistant Authenticated\nEncryption Cipher (RFC 5297) with optional architecture-specific\nhardware acceleration\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="aes-siv" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/AEADs" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="0.7.0" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="7" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'aes_siv' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "getrandom", "heapless", "pmac", "std", "stream"))' '-C' 'metadata=7a478ad10112b33f' '-C' 'extra-filename=-e0325614c1d7d6ab' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'aead=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta' '--extern' 'aes=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta' '--extern' 'cipher=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta' '--extern' 'cmac=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta' '--extern' 'ctr=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta' '--extern' 'dbl=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aes-siv-0.7.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e0325614c1d7d6ab-errcode'''
## 
## [[stages]]
## name = "out-e0325614c1d7d6ab"
## script = """
## FROM scratch AS out-e0325614c1d7d6ab
## COPY --from=dep-n-aes-siv-0.7.0-e0325614c1d7d6ab /tmp/clis-ntpd_1-2-3/release/deps/*-e0325614c1d7d6ab* /"""

FROM scratch AS cratesio-md-5-0.10.6
ADD --chmod=0664 --unpack=true --checksum=sha256:d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf \
  https://static.crates.io/crates/md-5/md-5-0.10.6.crate /
FROM rust-base AS dep-n-md-5-0.10.6-f0775f4337e7a668
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-md-5-0.10.6,source=/md-5-0.10.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6 \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="md5" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="MD5 hash function" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="md-5" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/hashes" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.10.6" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="10" \
        CARGO_PKG_VERSION_PATCH="6" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'md5' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("asm", "default", "force-soft", "loongarch64_asm", "md5-asm", "oid", "std"))' '-C' 'metadata=e3e8f62ce0227785' '-C' 'extra-filename=-f0775f4337e7a668' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-errcode
FROM scratch AS out-f0775f4337e7a668
COPY --from=dep-n-md-5-0.10.6-f0775f4337e7a668 /tmp/clis-ntpd_1-2-3/release/deps/*-f0775f4337e7a668* /

## this = "f0775f4337e7a668"
## deps = [
##     "da34da6838abd7f1",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "1009fce94369ad6b",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "8b6e21d4a5a6c6ed",
## ]
## short_externs = [
##     "da34da6838abd7f1",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "1009fce94369ad6b",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "8b6e21d4a5a6c6ed",
## ]
## writes = [
##     "deps/md5-f0775f4337e7a668.d",
##     "deps/libmd5-f0775f4337e7a668.rmeta",
##     "deps/libmd5-f0775f4337e7a668.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/md5-f0775f4337e7a668.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rmeta"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-md-5-0.10.6"
## script = '''
## FROM scratch AS cratesio-md-5-0.10.6
## ADD --chmod=0664 --unpack=true --checksum=sha256:d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf \
##   https://static.crates.io/crates/md-5/md-5-0.10.6.crate /'''
## 
## [[stages]]
## name = "dep-n-md-5-0.10.6-f0775f4337e7a668"
## script = '''
## FROM rust-base AS dep-n-md-5-0.10.6-f0775f4337e7a668
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-md-5-0.10.6,source=/md-5-0.10.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6 \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="md5" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6/Cargo.toml" \
##         CARGO_PKG_AUTHORS="RustCrypto Developers" \
##         CARGO_PKG_DESCRIPTION="MD5 hash function" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="md-5" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/hashes" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.10.6" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="10" \
##         CARGO_PKG_VERSION_PATCH="6" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'md5' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("asm", "default", "force-soft", "loongarch64_asm", "md5-asm", "oid", "std"))' '-C' 'metadata=e3e8f62ce0227785' '-C' 'extra-filename=-f0775f4337e7a668' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'digest=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/md-5-0.10.6/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f0775f4337e7a668-errcode'''
## 
## [[stages]]
## name = "out-f0775f4337e7a668"
## script = """
## FROM scratch AS out-f0775f4337e7a668
## COPY --from=dep-n-md-5-0.10.6-f0775f4337e7a668 /tmp/clis-ntpd_1-2-3/release/deps/*-f0775f4337e7a668* /"""

FROM scratch AS cratesio-ppv-lite86-0.2.17
ADD --chmod=0664 --unpack=true --checksum=sha256:5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de \
  https://static.crates.io/crates/ppv-lite86/ppv-lite86-0.2.17.crate /
FROM rust-base AS dep-n-ppv-lite86-0.2.17-af198cb5433f3d0c
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ppv-lite86-0.2.17,source=/ppv-lite86-0.2.17,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ppv_lite86" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17/Cargo.toml" \
        CARGO_PKG_AUTHORS="The CryptoCorrosion Contributors" \
        CARGO_PKG_DESCRIPTION="Implementation of the crypto-simd API for x86" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ppv-lite86" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/cryptocorrosion/cryptocorrosion" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.17" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="17" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ppv_lite86' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="simd"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "no_simd", "simd", "std"))' '-C' 'metadata=aaf213b1c0f9fc76' '-C' 'extra-filename=-af198cb5433f3d0c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-errcode
FROM scratch AS out-af198cb5433f3d0c
COPY --from=dep-n-ppv-lite86-0.2.17-af198cb5433f3d0c /tmp/clis-ntpd_1-2-3/release/deps/*-af198cb5433f3d0c* /

## this = "af198cb5433f3d0c"
## writes = [
##     "deps/ppv_lite86-af198cb5433f3d0c.d",
##     "deps/libppv_lite86-af198cb5433f3d0c.rmeta",
##     "deps/libppv_lite86-af198cb5433f3d0c.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ppv_lite86-af198cb5433f3d0c.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ppv-lite86-0.2.17"
## script = '''
## FROM scratch AS cratesio-ppv-lite86-0.2.17
## ADD --chmod=0664 --unpack=true --checksum=sha256:5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de \
##   https://static.crates.io/crates/ppv-lite86/ppv-lite86-0.2.17.crate /'''
## 
## [[stages]]
## name = "dep-n-ppv-lite86-0.2.17-af198cb5433f3d0c"
## script = '''
## FROM rust-base AS dep-n-ppv-lite86-0.2.17-af198cb5433f3d0c
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ppv-lite86-0.2.17,source=/ppv-lite86-0.2.17,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ppv_lite86" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The CryptoCorrosion Contributors" \
##         CARGO_PKG_DESCRIPTION="Implementation of the crypto-simd API for x86" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT/Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ppv-lite86" \
##         CARGO_PKG_README= \
##         CARGO_PKG_REPOSITORY="https://github.com/cryptocorrosion/cryptocorrosion" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.2.17" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="17" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ppv_lite86' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="simd"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "no_simd", "simd", "std"))' '-C' 'metadata=aaf213b1c0f9fc76' '-C' 'extra-filename=-af198cb5433f3d0c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ppv-lite86-0.2.17/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-af198cb5433f3d0c-errcode'''
## 
## [[stages]]
## name = "out-af198cb5433f3d0c"
## script = """
## FROM scratch AS out-af198cb5433f3d0c
## COPY --from=dep-n-ppv-lite86-0.2.17-af198cb5433f3d0c /tmp/clis-ntpd_1-2-3/release/deps/*-af198cb5433f3d0c* /"""

FROM scratch AS cratesio-rand_chacha-0.3.1
ADD --chmod=0664 --unpack=true --checksum=sha256:e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88 \
  https://static.crates.io/crates/rand_chacha/rand_chacha-0.3.1.crate /
FROM rust-base AS dep-n-rand_chacha-0.3.1-8e2f025dcc32e9af
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rand_chacha-0.3.1,source=/rand_chacha-0.3.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1 \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rand_chacha" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers:The CryptoCorrosion Contributors" \
        CARGO_PKG_DESCRIPTION="ChaCha random number generator\n" \
        CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rand_chacha" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rand_chacha' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "serde1", "simd", "std"))' '-C' 'metadata=f3ab709609c9e3db' '-C' 'extra-filename=-8e2f025dcc32e9af' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'ppv_lite86=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-errcode
FROM scratch AS out-8e2f025dcc32e9af
COPY --from=dep-n-rand_chacha-0.3.1-8e2f025dcc32e9af /tmp/clis-ntpd_1-2-3/release/deps/*-8e2f025dcc32e9af* /

## this = "8e2f025dcc32e9af"
## deps = [
##     "af198cb5433f3d0c",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## short_externs = [
##     "af198cb5433f3d0c",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
## ]
## writes = [
##     "deps/rand_chacha-8e2f025dcc32e9af.d",
##     "deps/librand_chacha-8e2f025dcc32e9af.rmeta",
##     "deps/librand_chacha-8e2f025dcc32e9af.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rand_chacha-8e2f025dcc32e9af.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rmeta"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rand_chacha-0.3.1"
## script = '''
## FROM scratch AS cratesio-rand_chacha-0.3.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88 \
##   https://static.crates.io/crates/rand_chacha/rand_chacha-0.3.1.crate /'''
## 
## [[stages]]
## name = "dep-n-rand_chacha-0.3.1-8e2f025dcc32e9af"
## script = '''
## FROM rust-base AS dep-n-rand_chacha-0.3.1-8e2f025dcc32e9af
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rand_chacha-0.3.1,source=/rand_chacha-0.3.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1 \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rand_chacha" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers:The CryptoCorrosion Contributors" \
##         CARGO_PKG_DESCRIPTION="ChaCha random number generator\n" \
##         CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rand_chacha" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.3.1" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="3" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rand_chacha' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "serde1", "simd", "std"))' '-C' 'metadata=f3ab709609c9e3db' '-C' 'extra-filename=-8e2f025dcc32e9af' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'ppv_lite86=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand_chacha-0.3.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8e2f025dcc32e9af-errcode'''
## 
## [[stages]]
## name = "out-8e2f025dcc32e9af"
## script = """
## FROM scratch AS out-8e2f025dcc32e9af
## COPY --from=dep-n-rand_chacha-0.3.1-8e2f025dcc32e9af /tmp/clis-ntpd_1-2-3/release/deps/*-8e2f025dcc32e9af* /"""

FROM scratch AS cratesio-rand-0.8.5
ADD --chmod=0664 --unpack=true --checksum=sha256:34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404 \
  https://static.crates.io/crates/rand/rand-0.8.5.crate /
FROM rust-base AS dep-n-rand-0.8.5-5161209caf71d483
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rand-0.8.5,source=/rand-0.8.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rand" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Random number generators and other randomness functionality.\n" \
        CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rand" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rand' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="libc"' '--cfg' 'feature="rand_chacha"' '--cfg' 'feature="std"' '--cfg' 'feature="std_rng"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "getrandom", "libc", "log", "min_const_gen", "nightly", "packed_simd", "rand_chacha", "serde", "serde1", "simd_support", "small_rng", "std", "std_rng"))' '-C' 'metadata=26b2e4280c900bcf' '-C' 'extra-filename=-5161209caf71d483' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'rand_chacha=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-errcode
FROM scratch AS out-5161209caf71d483
COPY --from=dep-n-rand-0.8.5-5161209caf71d483 /tmp/clis-ntpd_1-2-3/release/deps/*-5161209caf71d483* /

## this = "5161209caf71d483"
## deps = [
##     "a7905fdc410bdfce",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
## ]
## short_externs = [
##     "a7905fdc410bdfce",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
## ]
## writes = [
##     "deps/rand-5161209caf71d483.d",
##     "deps/librand-5161209caf71d483.rmeta",
##     "deps/librand-5161209caf71d483.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rand-5161209caf71d483.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs","byte_start":1937,"byte_end":1944,"line_start":53,"line_end":53,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"#![cfg_attr(doc_cfg, feature(doc_cfg))]","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs:53:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(doc_cfg, feature(doc_cfg))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs","byte_start":5646,"byte_end":5653,"line_start":181,"line_end":181,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs:181:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/mod.rs","byte_start":4796,"byte_end":4803,"line_start":116,"line_end":116,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/mod.rs:116:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `features`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/distribution.rs","byte_start":5194,"byte_end":5214,"line_start":162,"line_end":162,"column_start":7,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(features = \"nightly\")]","highlight_start":7,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name and value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/distribution.rs","byte_start":5194,"byte_end":5202,"line_start":162,"line_end":162,"column_start":7,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(features = \"nightly\")]","highlight_start":7,"highlight_end":15}],"label":null,"suggested_replacement":"feature","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `features`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/distribution.rs:162:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(features = \"nightly\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a config with a similar name and value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m#[cfg(\u001b[0m\u001b[0m\u001b[38;5;9mfeatures\u001b[0m\u001b[0m = \"nightly\")]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m#[cfg(\u001b[0m\u001b[0m\u001b[38;5;10mfeature\u001b[0m\u001b[0m = \"nightly\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `std`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8082,"byte_end":8085,"line_start":235,"line_end":235,"column_start":11,"column_end":14,"is_primary":true,"text":[{"text":"#[cfg(not(std))]","highlight_start":11,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8082,"byte_end":8085,"line_start":235,"line_end":235,"column_start":11,"column_end":14,"is_primary":true,"text":[{"text":"#[cfg(not(std))]","highlight_start":11,"highlight_end":14}],"label":null,"suggested_replacement":"feature = \"std\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:235:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(std))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"std\"`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `std`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9274,"byte_end":9277,"line_start":291,"line_end":291,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        #[cfg(not(std))]","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":10987,"byte_end":11015,"line_start":359,"line_end":359,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"scalar_float_impl!(f32, u32);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"scalar_float_impl!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9190,"byte_end":9220,"line_start":289,"line_end":289,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! scalar_float_impl {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9274,"byte_end":9277,"line_start":291,"line_end":291,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        #[cfg(not(std))]","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":"feature = \"std\"","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":10987,"byte_end":11015,"line_start":359,"line_end":359,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"scalar_float_impl!(f32, u32);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"scalar_float_impl!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9190,"byte_end":9220,"line_start":289,"line_end":289,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! scalar_float_impl {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:291:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(std))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"std\"`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mscalar_float_impl!(f32, u32);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `scalar_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `std`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9274,"byte_end":9277,"line_start":291,"line_end":291,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        #[cfg(not(std))]","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":11017,"byte_end":11045,"line_start":360,"line_end":360,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"scalar_float_impl!(f64, u64);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"scalar_float_impl!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9190,"byte_end":9220,"line_start":289,"line_end":289,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! scalar_float_impl {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9274,"byte_end":9277,"line_start":291,"line_end":291,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        #[cfg(not(std))]","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":"feature = \"std\"","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":11017,"byte_end":11045,"line_start":360,"line_end":360,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"scalar_float_impl!(f64, u64);","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"scalar_float_impl!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":9190,"byte_end":9220,"line_start":289,"line_end":289,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"macro_rules! scalar_float_impl {","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `std`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:291:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(std))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"std\"`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mscalar_float_impl!(f64, u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(std)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(std)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `scalar_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/weighted_index.rs","byte_start":3297,"byte_end":3304,"line_start":80,"line_end":80,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/weighted_index.rs:80:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/weighted_index.rs","byte_start":15232,"byte_end":15239,"line_start":429,"line_end":429,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/weighted_index.rs:429:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rng.rs","byte_start":12752,"byte_end":12759,"line_start":395,"line_end":395,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"min_const_gen\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rng.rs:395:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"min_const_gen\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/mod.rs","byte_start":5102,"byte_end":5109,"line_start":99,"line_end":99,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/mod.rs:99:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/mod.rs","byte_start":5862,"byte_end":5869,"line_start":118,"line_end":118,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/mod.rs:118:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"getrandom\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/std.rs","byte_start":1360,"byte_end":1367,"line_start":32,"line_end":32,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"std_rng\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/std.rs:32:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"std_rng\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/thread.rs","byte_start":2732,"byte_end":2739,"line_start":60,"line_end":60,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/thread.rs:60:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/thread.rs","byte_start":3856,"byte_end":3863,"line_start":87,"line_end":87,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/rngs/thread.rs:87:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(all(feature = \"std\", feature = \"std_rng\"))))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":986,"byte_end":993,"line_start":29,"line_end":29,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:29:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":22557,"byte_end":22564,"line_start":623,"line_end":623,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:623:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m623\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/index.rs","byte_start":8714,"byte_end":8721,"line_start":276,"line_end":276,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/index.rs:276:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":3739,"byte_end":3746,"line_start":114,"line_end":114,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:114:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":4950,"byte_end":4957,"line_start":142,"line_end":142,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:142:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":6062,"byte_end":6069,"line_start":170,"line_end":170,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:170:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":8300,"byte_end":8307,"line_start":219,"line_end":219,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:219:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"std\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `doc_cfg`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs","byte_start":17539,"byte_end":17546,"line_start":465,"line_end":465,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `doc_cfg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/seq/mod.rs:465:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg_attr(doc_cfg, doc(cfg(feature = \"alloc\")))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(doc_cfg)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(doc_cfg)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"diagnostic","message":"trait `Float` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8194,"byte_end":8199,"line_start":238,"line_end":238,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"pub(crate) trait Float: Sized {","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait `Float` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:238:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) trait Float: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"associated items `lanes`, `extract`, and `replace` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8399,"byte_end":8410,"line_start":245,"line_end":245,"column_start":18,"column_end":29,"is_primary":false,"text":[{"text":"pub(crate) trait FloatAsSIMD: Sized {","highlight_start":18,"highlight_end":29}],"label":"associated items in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8449,"byte_end":8454,"line_start":247,"line_end":247,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"    fn lanes() -> usize {","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8593,"byte_end":8600,"line_start":255,"line_end":255,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn extract(self, index: usize) -> Self {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8715,"byte_end":8722,"line_start":260,"line_end":260,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    fn replace(self, index: usize, new_value: Self) -> Self {","highlight_start":8,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated items `lanes`, `extract`, and `replace` are never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:247:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) trait FloatAsSIMD: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated items in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[inline(always)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn lanes() -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn extract(self, index: usize) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn replace(self, index: usize, new_value: Self) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"method `all` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8850,"byte_end":8860,"line_start":266,"line_end":266,"column_start":18,"column_end":28,"is_primary":false,"text":[{"text":"pub(crate) trait BoolAsSIMD: Sized {","highlight_start":18,"highlight_end":28}],"label":"method in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs","byte_start":8903,"byte_end":8906,"line_start":268,"line_end":268,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn all(self) -> bool;","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `all` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/distributions/utils.rs:268:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) trait BoolAsSIMD: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn any(self) -> bool;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn all(self) -> bool;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"26 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 26 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rmeta"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rlib"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rmeta"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rand-0.8.5"
## script = '''
## FROM scratch AS cratesio-rand-0.8.5
## ADD --chmod=0664 --unpack=true --checksum=sha256:34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404 \
##   https://static.crates.io/crates/rand/rand-0.8.5.crate /'''
## 
## [[stages]]
## name = "dep-n-rand-0.8.5-5161209caf71d483"
## script = '''
## FROM rust-base AS dep-n-rand-0.8.5-5161209caf71d483
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rand-0.8.5,source=/rand-0.8.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rand" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rand Project Developers:The Rust Project Developers" \
##         CARGO_PKG_DESCRIPTION="Random number generators and other randomness functionality.\n" \
##         CARGO_PKG_HOMEPAGE="https://rust-random.github.io/book" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rand" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-random/rand" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.8.5" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="8" \
##         CARGO_PKG_VERSION_PATCH="5" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rand' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="getrandom"' '--cfg' 'feature="libc"' '--cfg' 'feature="rand_chacha"' '--cfg' 'feature="std"' '--cfg' 'feature="std_rng"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "getrandom", "libc", "log", "min_const_gen", "nightly", "packed_simd", "rand_chacha", "serde", "serde1", "simd_support", "small_rng", "std", "std_rng"))' '-C' 'metadata=26b2e4280c900bcf' '-C' 'extra-filename=-5161209caf71d483' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'rand_chacha=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta' '--extern' 'rand_core=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rand-0.8.5/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5161209caf71d483-errcode'''
## 
## [[stages]]
## name = "out-5161209caf71d483"
## script = """
## FROM scratch AS out-5161209caf71d483
## COPY --from=dep-n-rand-0.8.5-5161209caf71d483 /tmp/clis-ntpd_1-2-3/release/deps/*-5161209caf71d483* /"""

FROM scratch AS cratesio-log-0.4.22
ADD --chmod=0664 --unpack=true --checksum=sha256:a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24 \
  https://static.crates.io/crates/log/log-0.4.22.crate /
FROM rust-base AS dep-n-log-0.4.22-b564a3159bfcf688
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-log-0.4.22,source=/log-0.4.22,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="log" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A lightweight logging facade for Rust\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="log" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/log" \
        CARGO_PKG_RUST_VERSION="1.60.0" \
        CARGO_PKG_VERSION="0.4.22" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="22" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'log' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("kv", "kv_serde", "kv_std", "kv_sval", "kv_unstable", "kv_unstable_serde", "kv_unstable_std", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval", "sval_ref", "value-bag"))' '-C' 'metadata=23b03b2578bfc130' '-C' 'extra-filename=-b564a3159bfcf688' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-errcode
FROM scratch AS out-b564a3159bfcf688
COPY --from=dep-n-log-0.4.22-b564a3159bfcf688 /tmp/clis-ntpd_1-2-3/release/deps/*-b564a3159bfcf688* /

## this = "b564a3159bfcf688"
## writes = [
##     "deps/log-b564a3159bfcf688.d",
##     "deps/liblog-b564a3159bfcf688.rmeta",
##     "deps/liblog-b564a3159bfcf688.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/log-b564a3159bfcf688.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-log-0.4.22"
## script = '''
## FROM scratch AS cratesio-log-0.4.22
## ADD --chmod=0664 --unpack=true --checksum=sha256:a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24 \
##   https://static.crates.io/crates/log/log-0.4.22.crate /'''
## 
## [[stages]]
## name = "dep-n-log-0.4.22-b564a3159bfcf688"
## script = '''
## FROM rust-base AS dep-n-log-0.4.22-b564a3159bfcf688
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-log-0.4.22,source=/log-0.4.22,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="log" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22/Cargo.toml" \
##         CARGO_PKG_AUTHORS="The Rust Project Developers" \
##         CARGO_PKG_DESCRIPTION="A lightweight logging facade for Rust\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="log" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-lang/log" \
##         CARGO_PKG_RUST_VERSION="1.60.0" \
##         CARGO_PKG_VERSION="0.4.22" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="4" \
##         CARGO_PKG_VERSION_PATCH="22" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'log' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("kv", "kv_serde", "kv_std", "kv_sval", "kv_unstable", "kv_unstable_serde", "kv_unstable_std", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval", "sval_ref", "value-bag"))' '-C' 'metadata=23b03b2578bfc130' '-C' 'extra-filename=-b564a3159bfcf688' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.22/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b564a3159bfcf688-errcode'''
## 
## [[stages]]
## name = "out-b564a3159bfcf688"
## script = """
## FROM scratch AS out-b564a3159bfcf688
## COPY --from=dep-n-log-0.4.22-b564a3159bfcf688 /tmp/clis-ntpd_1-2-3/release/deps/*-b564a3159bfcf688* /"""

FROM scratch AS cratesio-once_cell-1.19.0
ADD --chmod=0664 --unpack=true --checksum=sha256:3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92 \
  https://static.crates.io/crates/once_cell/once_cell-1.19.0.crate /
FROM rust-base AS dep-n-once_cell-1.19.0-6ed51fafe322ecba
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-once_cell-1.19.0,source=/once_cell-1.19.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="once_cell" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Aleksey Kladov <aleksey.kladov@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Single assignment cells and lazy values." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="once_cell" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/matklad/once_cell" \
        CARGO_PKG_RUST_VERSION="1.60" \
        CARGO_PKG_VERSION="1.19.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="19" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'once_cell' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="race"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "atomic-polyfill", "critical-section", "default", "parking_lot", "portable-atomic", "race", "std", "unstable"))' '-C' 'metadata=afc296a215691e24' '-C' 'extra-filename=-6ed51fafe322ecba' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-errcode
FROM scratch AS out-6ed51fafe322ecba
COPY --from=dep-n-once_cell-1.19.0-6ed51fafe322ecba /tmp/clis-ntpd_1-2-3/release/deps/*-6ed51fafe322ecba* /

## this = "6ed51fafe322ecba"
## writes = [
##     "deps/once_cell-6ed51fafe322ecba.d",
##     "deps/libonce_cell-6ed51fafe322ecba.rmeta",
##     "deps/libonce_cell-6ed51fafe322ecba.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/once_cell-6ed51fafe322ecba.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-once_cell-1.19.0"
## script = '''
## FROM scratch AS cratesio-once_cell-1.19.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92 \
##   https://static.crates.io/crates/once_cell/once_cell-1.19.0.crate /'''
## 
## [[stages]]
## name = "dep-n-once_cell-1.19.0-6ed51fafe322ecba"
## script = '''
## FROM rust-base AS dep-n-once_cell-1.19.0-6ed51fafe322ecba
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-once_cell-1.19.0,source=/once_cell-1.19.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="once_cell" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Aleksey Kladov <aleksey.kladov@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Single assignment cells and lazy values." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="once_cell" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/matklad/once_cell" \
##         CARGO_PKG_RUST_VERSION="1.60" \
##         CARGO_PKG_VERSION="1.19.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="19" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'once_cell' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="race"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "atomic-polyfill", "critical-section", "default", "parking_lot", "portable-atomic", "race", "std", "unstable"))' '-C' 'metadata=afc296a215691e24' '-C' 'extra-filename=-6ed51fafe322ecba' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/once_cell-1.19.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-6ed51fafe322ecba-errcode'''
## 
## [[stages]]
## name = "out-6ed51fafe322ecba"
## script = """
## FROM scratch AS out-6ed51fafe322ecba
## COPY --from=dep-n-once_cell-1.19.0-6ed51fafe322ecba /tmp/clis-ntpd_1-2-3/release/deps/*-6ed51fafe322ecba* /"""

FROM scratch AS cratesio-spin-0.9.8
ADD --chmod=0664 --unpack=true --checksum=sha256:6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67 \
  https://static.crates.io/crates/spin/spin-0.9.8.crate /
FROM rust-base AS dep-n-spin-0.9.8-126f99f44d356e93
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-spin-0.9.8,source=/spin-0.9.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="spin" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8/Cargo.toml" \
        CARGO_PKG_AUTHORS="Mathijs van de Nes <git@mathijs.vd-nes.nl>:John Ericson <git@JohnEricson.me>:Joshua Barretto <joshua.s.barretto@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Spin-based synchronization primitives" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="spin" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/mvdnes/spin-rs.git" \
        CARGO_PKG_RUST_VERSION="1.38" \
        CARGO_PKG_VERSION="0.9.8" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="9" \
        CARGO_PKG_VERSION_PATCH="8" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'spin' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="once"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("barrier", "default", "fair_mutex", "lazy", "lock_api", "lock_api_crate", "mutex", "once", "portable-atomic", "portable_atomic", "rwlock", "spin_mutex", "std", "ticket_mutex", "use_ticket_mutex"))' '-C' 'metadata=60813e2ad9e2eb14' '-C' 'extra-filename=-126f99f44d356e93' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-errcode
FROM scratch AS out-126f99f44d356e93
COPY --from=dep-n-spin-0.9.8-126f99f44d356e93 /tmp/clis-ntpd_1-2-3/release/deps/*-126f99f44d356e93* /

## this = "126f99f44d356e93"
## writes = [
##     "deps/spin-126f99f44d356e93.d",
##     "deps/libspin-126f99f44d356e93.rmeta",
##     "deps/libspin-126f99f44d356e93.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/spin-126f99f44d356e93.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-spin-0.9.8"
## script = '''
## FROM scratch AS cratesio-spin-0.9.8
## ADD --chmod=0664 --unpack=true --checksum=sha256:6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67 \
##   https://static.crates.io/crates/spin/spin-0.9.8.crate /'''
## 
## [[stages]]
## name = "dep-n-spin-0.9.8-126f99f44d356e93"
## script = '''
## FROM rust-base AS dep-n-spin-0.9.8-126f99f44d356e93
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-spin-0.9.8,source=/spin-0.9.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="spin" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Mathijs van de Nes <git@mathijs.vd-nes.nl>:John Ericson <git@JohnEricson.me>:Joshua Barretto <joshua.s.barretto@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Spin-based synchronization primitives" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="spin" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/mvdnes/spin-rs.git" \
##         CARGO_PKG_RUST_VERSION="1.38" \
##         CARGO_PKG_VERSION="0.9.8" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="9" \
##         CARGO_PKG_VERSION_PATCH="8" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'spin' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="once"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("barrier", "default", "fair_mutex", "lazy", "lock_api", "lock_api_crate", "mutex", "once", "portable-atomic", "portable_atomic", "rwlock", "spin_mutex", "std", "ticket_mutex", "use_ticket_mutex"))' '-C' 'metadata=60813e2ad9e2eb14' '-C' 'extra-filename=-126f99f44d356e93' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/spin-0.9.8/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-126f99f44d356e93-errcode'''
## 
## [[stages]]
## name = "out-126f99f44d356e93"
## script = """
## FROM scratch AS out-126f99f44d356e93
## COPY --from=dep-n-spin-0.9.8-126f99f44d356e93 /tmp/clis-ntpd_1-2-3/release/deps/*-126f99f44d356e93* /"""

FROM scratch AS cratesio-untrusted-0.9.0
ADD --chmod=0664 --unpack=true --checksum=sha256:8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1 \
  https://static.crates.io/crates/untrusted/untrusted-0.9.0.crate /
FROM rust-base AS dep-n-untrusted-0.9.0-2cf0189e0a6f5785
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-untrusted-0.9.0,source=/untrusted-0.9.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="untrusted" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Brian Smith <brian@briansmith.org>" \
        CARGO_PKG_DESCRIPTION="Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="ISC" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="untrusted" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/briansmith/untrusted" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.9.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="9" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'untrusted' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=e184a6c513ada7de' '-C' 'extra-filename=-2cf0189e0a6f5785' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-errcode
FROM scratch AS out-2cf0189e0a6f5785
COPY --from=dep-n-untrusted-0.9.0-2cf0189e0a6f5785 /tmp/clis-ntpd_1-2-3/release/deps/*-2cf0189e0a6f5785* /

## this = "2cf0189e0a6f5785"
## writes = [
##     "deps/untrusted-2cf0189e0a6f5785.d",
##     "deps/libuntrusted-2cf0189e0a6f5785.rmeta",
##     "deps/libuntrusted-2cf0189e0a6f5785.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/untrusted-2cf0189e0a6f5785.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-untrusted-0.9.0"
## script = '''
## FROM scratch AS cratesio-untrusted-0.9.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1 \
##   https://static.crates.io/crates/untrusted/untrusted-0.9.0.crate /'''
## 
## [[stages]]
## name = "dep-n-untrusted-0.9.0-2cf0189e0a6f5785"
## script = '''
## FROM rust-base AS dep-n-untrusted-0.9.0-2cf0189e0a6f5785
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-untrusted-0.9.0,source=/untrusted-0.9.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="untrusted" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Brian Smith <brian@briansmith.org>" \
##         CARGO_PKG_DESCRIPTION="Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="ISC" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="untrusted" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/briansmith/untrusted" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.9.0" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="9" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'untrusted' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=e184a6c513ada7de' '-C' 'extra-filename=-2cf0189e0a6f5785' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/untrusted-0.9.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2cf0189e0a6f5785-errcode'''
## 
## [[stages]]
## name = "out-2cf0189e0a6f5785"
## script = """
## FROM scratch AS out-2cf0189e0a6f5785
## COPY --from=dep-n-untrusted-0.9.0-2cf0189e0a6f5785 /tmp/clis-ntpd_1-2-3/release/deps/*-2cf0189e0a6f5785* /"""

FROM scratch AS cratesio-ring-0.17.8
ADD --chmod=0664 --unpack=true --checksum=sha256:c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d \
  https://static.crates.io/crates/ring/ring-0.17.8.crate /
FROM rust-base AS dep-n-ring-0.17.8-162d4bd1f192637c
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ring-0.17.8,source=/ring-0.17.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8 \
  --mount=from=crate_out-a0b19822430eae69,dst=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ring" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/Cargo.toml" \
        CARGO_PKG_AUTHORS="Brian Smith <brian@briansmith.org>" \
        CARGO_PKG_DESCRIPTION="Safe, fast, small crypto using Rust." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE= \
        CARGO_PKG_LICENSE_FILE="LICENSE" \
        CARGO_PKG_NAME="ring" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/briansmith/ring" \
        CARGO_PKG_RUST_VERSION="1.61.0" \
        CARGO_PKG_VERSION="0.17.8" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="17" \
        CARGO_PKG_VERSION_PATCH="8" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
        RING_CORE_PREFIX="ring_core_0_17_8_" \
      rustc '--crate-name' 'ring' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="dev_urandom_fallback"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "less-safe-getrandom-custom-or-rdrand", "slow_tests", "std", "test_logging", "unstable-testing-arm-no-hw", "unstable-testing-arm-no-neon", "wasm32_unknown_unknown_js"))' '-C' 'metadata=978176b97882da5c' '-C' 'extra-filename=-162d4bd1f192637c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'getrandom=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta' '--extern' 'spin=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta' '--extern' 'untrusted=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' '-l' 'static=ring_core_0_17_8_' '-l' 'static=ring_core_0_17_8_test' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-errcode
FROM scratch AS out-162d4bd1f192637c
COPY --from=dep-n-ring-0.17.8-162d4bd1f192637c /tmp/clis-ntpd_1-2-3/release/deps/*-162d4bd1f192637c* /

## this = "162d4bd1f192637c"
## deps = [
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
## ]
## short_externs = [
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
## ]
## writes = [
##     "deps/ring-162d4bd1f192637c.d",
##     "deps/libring-162d4bd1f192637c.rmeta",
##     "deps/libring-162d4bd1f192637c.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ring-162d4bd1f192637c.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `pregenerate_asm_only`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/src/lib.rs","byte_start":2343,"byte_end":2363,"line_start":47,"line_end":47,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"#![cfg(not(pregenerate_asm_only))]","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(pregenerate_asm_only)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(pregenerate_asm_only)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `pregenerate_asm_only`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/src/lib.rs:47:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg(not(pregenerate_asm_only))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(pregenerate_asm_only)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(pregenerate_asm_only)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rmeta"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rmeta"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ring-0.17.8"
## script = '''
## FROM scratch AS cratesio-ring-0.17.8
## ADD --chmod=0664 --unpack=true --checksum=sha256:c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d \
##   https://static.crates.io/crates/ring/ring-0.17.8.crate /'''
## 
## [[stages]]
## name = "dep-n-ring-0.17.8-162d4bd1f192637c"
## script = '''
## FROM rust-base AS dep-n-ring-0.17.8-162d4bd1f192637c
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ring-0.17.8,source=/ring-0.17.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8 \
##   --mount=from=crate_out-a0b19822430eae69,dst=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ring" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Brian Smith <brian@briansmith.org>" \
##         CARGO_PKG_DESCRIPTION="Safe, fast, small crypto using Rust." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE= \
##         CARGO_PKG_LICENSE_FILE="LICENSE" \
##         CARGO_PKG_NAME="ring" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/briansmith/ring" \
##         CARGO_PKG_RUST_VERSION="1.61.0" \
##         CARGO_PKG_VERSION="0.17.8" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="17" \
##         CARGO_PKG_VERSION_PATCH="8" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##         RING_CORE_PREFIX="ring_core_0_17_8_" \
##       rustc '--crate-name' 'ring' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="dev_urandom_fallback"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "less-safe-getrandom-custom-or-rdrand", "slow_tests", "std", "test_logging", "unstable-testing-arm-no-hw", "unstable-testing-arm-no-neon", "wasm32_unknown_unknown_js"))' '-C' 'metadata=978176b97882da5c' '-C' 'extra-filename=-162d4bd1f192637c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'getrandom=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta' '--extern' 'spin=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta' '--extern' 'untrusted=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' '-l' 'static=ring_core_0_17_8_' '-l' 'static=ring_core_0_17_8_test' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ring-0.17.8/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-162d4bd1f192637c-errcode'''
## 
## [[stages]]
## name = "out-162d4bd1f192637c"
## script = """
## FROM scratch AS out-162d4bd1f192637c
## COPY --from=dep-n-ring-0.17.8-162d4bd1f192637c /tmp/clis-ntpd_1-2-3/release/deps/*-162d4bd1f192637c* /"""

FROM scratch AS cratesio-rustls-pki-types-1.7.0
ADD --chmod=0664 --unpack=true --checksum=sha256:976295e77ce332211c0d24d92c0e83e50f5c5f046d11082cea19f3df13a3562d \
  https://static.crates.io/crates/rustls-pki-types/rustls-pki-types-1.7.0.crate /
FROM rust-base AS dep-n-rustls-pki-types-1.7.0-0bd417676bde33fe
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rustls-pki-types-1.7.0,source=/rustls-pki-types-1.7.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rustls_pki_types" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Shared types for the rustls PKI ecosystem" \
        CARGO_PKG_HOMEPAGE="https://github.com/rustls/pki-types" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustls-pki-types" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rustls/pki-types" \
        CARGO_PKG_RUST_VERSION="1.60" \
        CARGO_PKG_VERSION="1.7.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rustls_pki_types' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "std", "web", "web-time"))' '-C' 'metadata=658233308e04b69e' '-C' 'extra-filename=-0bd417676bde33fe' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-errcode
FROM scratch AS out-0bd417676bde33fe
COPY --from=dep-n-rustls-pki-types-1.7.0-0bd417676bde33fe /tmp/clis-ntpd_1-2-3/release/deps/*-0bd417676bde33fe* /

## this = "0bd417676bde33fe"
## writes = [
##     "deps/rustls_pki_types-0bd417676bde33fe.d",
##     "deps/librustls_pki_types-0bd417676bde33fe.rmeta",
##     "deps/librustls_pki_types-0bd417676bde33fe.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rustls_pki_types-0bd417676bde33fe.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"elided lifetime has a name","code":{"code":"elided_named_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/src/server_name.rs","byte_start":4466,"byte_end":4468,"line_start":136,"line_end":136,"column_start":40,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn borrow(&'a self) -> DnsName<'_> {","highlight_start":40,"highlight_end":42}],"label":"this elided lifetime gets resolved as `'a`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/src/server_name.rs","byte_start":4345,"byte_end":4347,"line_start":134,"line_end":134,"column_start":6,"column_end":8,"is_primary":false,"text":[{"text":"impl<'a> DnsName<'a> {","highlight_start":6,"highlight_end":8}],"label":"lifetime `'a` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(elided_named_lifetimes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: elided lifetime has a name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/src/server_name.rs:136:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<'a> DnsName<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mlifetime `'a` declared here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Produce a borrowed `DnsName` from this owned `DnsName`.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn borrow(&'a self) -> DnsName<'_> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis elided lifetime gets resolved as `'a`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(elided_named_lifetimes)]` on by default\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rustls-pki-types-1.7.0"
## script = '''
## FROM scratch AS cratesio-rustls-pki-types-1.7.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:976295e77ce332211c0d24d92c0e83e50f5c5f046d11082cea19f3df13a3562d \
##   https://static.crates.io/crates/rustls-pki-types/rustls-pki-types-1.7.0.crate /'''
## 
## [[stages]]
## name = "dep-n-rustls-pki-types-1.7.0-0bd417676bde33fe"
## script = '''
## FROM rust-base AS dep-n-rustls-pki-types-1.7.0-0bd417676bde33fe
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rustls-pki-types-1.7.0,source=/rustls-pki-types-1.7.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rustls_pki_types" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Shared types for the rustls PKI ecosystem" \
##         CARGO_PKG_HOMEPAGE="https://github.com/rustls/pki-types" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rustls-pki-types" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rustls/pki-types" \
##         CARGO_PKG_RUST_VERSION="1.60" \
##         CARGO_PKG_VERSION="1.7.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="7" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rustls_pki_types' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "std", "web", "web-time"))' '-C' 'metadata=658233308e04b69e' '-C' 'extra-filename=-0bd417676bde33fe' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pki-types-1.7.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0bd417676bde33fe-errcode'''
## 
## [[stages]]
## name = "out-0bd417676bde33fe"
## script = """
## FROM scratch AS out-0bd417676bde33fe
## COPY --from=dep-n-rustls-pki-types-1.7.0-0bd417676bde33fe /tmp/clis-ntpd_1-2-3/release/deps/*-0bd417676bde33fe* /"""

FROM scratch AS cratesio-rustls-webpki-0.102.5
ADD --chmod=0664 --unpack=true --checksum=sha256:f9a6fccd794a42c2c105b513a2f62bc3fd8f3ba57a4593677ceb0bd035164d78 \
  https://static.crates.io/crates/rustls-webpki/rustls-webpki-0.102.5.crate /
FROM rust-base AS dep-n-rustls-webpki-0.102.5-0b45a7938c797eef
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rustls-webpki-0.102.5,source=/rustls-webpki-0.102.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5 \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="webpki" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Web PKI X.509 Certificate Verification." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="ISC" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustls-webpki" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rustls/webpki" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="0.102.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="102" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'webpki' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="ring"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "aws_lc_rs", "default", "ring", "std"))' '-C' 'metadata=fcb50671f0ac0aef' '-C' 'extra-filename=-0b45a7938c797eef' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'ring=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--extern' 'untrusted=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-errcode
FROM scratch AS out-0b45a7938c797eef
COPY --from=dep-n-rustls-webpki-0.102.5-0b45a7938c797eef /tmp/clis-ntpd_1-2-3/release/deps/*-0b45a7938c797eef* /

## this = "0b45a7938c797eef"
## deps = [
##     "162d4bd1f192637c",
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
## ]
## short_externs = [
##     "162d4bd1f192637c",
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
## ]
## writes = [
##     "deps/webpki-0b45a7938c797eef.d",
##     "deps/libwebpki-0b45a7938c797eef.rmeta",
##     "deps/libwebpki-0b45a7938c797eef.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/webpki-0b45a7938c797eef.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rmeta"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rmeta"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rmeta"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rustls-webpki-0.102.5"
## script = '''
## FROM scratch AS cratesio-rustls-webpki-0.102.5
## ADD --chmod=0664 --unpack=true --checksum=sha256:f9a6fccd794a42c2c105b513a2f62bc3fd8f3ba57a4593677ceb0bd035164d78 \
##   https://static.crates.io/crates/rustls-webpki/rustls-webpki-0.102.5.crate /'''
## 
## [[stages]]
## name = "dep-n-rustls-webpki-0.102.5-0b45a7938c797eef"
## script = '''
## FROM rust-base AS dep-n-rustls-webpki-0.102.5-0b45a7938c797eef
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rustls-webpki-0.102.5,source=/rustls-webpki-0.102.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5 \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="webpki" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Web PKI X.509 Certificate Verification." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="ISC" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rustls-webpki" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rustls/webpki" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="0.102.5" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="102" \
##         CARGO_PKG_VERSION_PATCH="5" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'webpki' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="ring"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "aws_lc_rs", "default", "ring", "std"))' '-C' 'metadata=fcb50671f0ac0aef' '-C' 'extra-filename=-0b45a7938c797eef' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'ring=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--extern' 'untrusted=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-webpki-0.102.5/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0b45a7938c797eef-errcode'''
## 
## [[stages]]
## name = "out-0b45a7938c797eef"
## script = """
## FROM scratch AS out-0b45a7938c797eef
## COPY --from=dep-n-rustls-webpki-0.102.5-0b45a7938c797eef /tmp/clis-ntpd_1-2-3/release/deps/*-0b45a7938c797eef* /"""

FROM scratch AS cratesio-rustls-0.23.11
ADD --chmod=0664 --unpack=true --checksum=sha256:4828ea528154ae444e5a642dbb7d5623354030dc9822b83fd9bb79683c7399d0 \
  https://static.crates.io/crates/rustls/rustls-0.23.11.crate /
FROM rust-base AS dep-n-rustls-0.23.11-fd2c262888e3ecb5
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rustls-0.23.11,source=/rustls-0.23.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11 \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rustls" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Rustls is a modern TLS library written in Rust." \
        CARGO_PKG_HOMEPAGE="https://github.com/rustls/rustls" \
        CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustls" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rustls/rustls" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="0.23.11" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="23" \
        CARGO_PKG_VERSION_PATCH="11" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/rustls-9b4f70d52aa3418f/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rustls' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="log"' '--cfg' 'feature="logging"' '--cfg' 'feature="ring"' '--cfg' 'feature="std"' '--cfg' 'feature="tls12"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("aws-lc-rs", "aws_lc_rs", "brotli", "default", "fips", "hashbrown", "log", "logging", "read_buf", "ring", "rustversion", "std", "tls12", "zlib"))' '-C' 'metadata=0f5ddfd1f042597f' '-C' 'extra-filename=-fd2c262888e3ecb5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'log=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--extern' 'ring=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--extern' 'webpki=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta' '--extern' 'subtle=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' '--check-cfg' 'cfg(bench)' '--check-cfg' 'cfg(read_buf)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-errcode
FROM scratch AS out-fd2c262888e3ecb5
COPY --from=dep-n-rustls-0.23.11-fd2c262888e3ecb5 /tmp/clis-ntpd_1-2-3/release/deps/*-fd2c262888e3ecb5* /

## this = "fd2c262888e3ecb5"
## deps = [
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "8b6e21d4a5a6c6ed",
##     "caf2b0ffe78763b7",
## ]
## short_externs = [
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "da34da6838abd7f1",
##     "84473f2ddfbb434a",
##     "a7905fdc410bdfce",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "8b6e21d4a5a6c6ed",
##     "caf2b0ffe78763b7",
## ]
## writes = [
##     "deps/rustls-fd2c262888e3ecb5.d",
##     "deps/librustls-fd2c262888e3ecb5.rmeta",
##     "deps/librustls-fd2c262888e3ecb5.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rustls-fd2c262888e3ecb5.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unused import: `crate::log::debug`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/src/crypto/ring/ticketer.rs","byte_start":398,"byte_end":415,"line_start":17,"line_end":17,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use crate::log::debug;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/src/crypto/ring/ticketer.rs","byte_start":366,"byte_end":417,"line_start":16,"line_end":18,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[cfg(feature = \"logging\")]","highlight_start":1,"highlight_end":28},{"text":"use crate::log::debug;","highlight_start":1,"highlight_end":23},{"text":"use crate::rand::GetRandomFailed;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::log::debug`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/src/crypto/ring/ticketer.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::log::debug;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rmeta"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rmeta"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rmeta"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rmeta"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rmeta"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rmeta"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rlib"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rustls-0.23.11"
## script = '''
## FROM scratch AS cratesio-rustls-0.23.11
## ADD --chmod=0664 --unpack=true --checksum=sha256:4828ea528154ae444e5a642dbb7d5623354030dc9822b83fd9bb79683c7399d0 \
##   https://static.crates.io/crates/rustls/rustls-0.23.11.crate /'''
## 
## [[stages]]
## name = "dep-n-rustls-0.23.11-fd2c262888e3ecb5"
## script = '''
## FROM rust-base AS dep-n-rustls-0.23.11-fd2c262888e3ecb5
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rustls-0.23.11,source=/rustls-0.23.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11 \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rustls" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Rustls is a modern TLS library written in Rust." \
##         CARGO_PKG_HOMEPAGE="https://github.com/rustls/rustls" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rustls" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rustls/rustls" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="0.23.11" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="23" \
##         CARGO_PKG_VERSION_PATCH="11" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/rustls-9b4f70d52aa3418f/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rustls' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="log"' '--cfg' 'feature="logging"' '--cfg' 'feature="ring"' '--cfg' 'feature="std"' '--cfg' 'feature="tls12"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("aws-lc-rs", "aws_lc_rs", "brotli", "default", "fips", "hashbrown", "log", "logging", "read_buf", "ring", "rustversion", "std", "tls12", "zlib"))' '-C' 'metadata=0f5ddfd1f042597f' '-C' 'extra-filename=-fd2c262888e3ecb5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'log=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--extern' 'ring=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--extern' 'webpki=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta' '--extern' 'subtle=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' '--check-cfg' 'cfg(bench)' '--check-cfg' 'cfg(read_buf)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-0.23.11/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-fd2c262888e3ecb5-errcode'''
## 
## [[stages]]
## name = "out-fd2c262888e3ecb5"
## script = """
## FROM scratch AS out-fd2c262888e3ecb5
## COPY --from=dep-n-rustls-0.23.11-fd2c262888e3ecb5 /tmp/clis-ntpd_1-2-3/release/deps/*-fd2c262888e3ecb5* /"""

FROM scratch AS cratesio-serde_derive-1.0.204
ADD --chmod=0664 --unpack=true --checksum=sha256:e0cd7e117be63d3c3678776753929474f3b04a43a080c744d6b0ae2a8c28e222 \
  https://static.crates.io/crates/serde_derive/serde_derive-1.0.204.crate /
FROM rust-base AS dep-n-serde_derive-1.0.204-b74741511dfa898a
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-serde_derive-1.0.204,source=/serde_derive-1.0.204,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde_derive" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204/Cargo.toml" \
        CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Macros 1.1 implementation of #[derive(Serialize, Deserialize)]" \
        CARGO_PKG_HOMEPAGE="https://serde.rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde_derive" \
        CARGO_PKG_README="crates-io.md" \
        CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.204" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="204" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'serde_derive' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "deserialize_in_place"))' '-C' 'metadata=f57af49d134c85f7' '-C' 'extra-filename=-b74741511dfa898a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-errcode
FROM scratch AS out-b74741511dfa898a
COPY --from=dep-n-serde_derive-1.0.204-b74741511dfa898a /tmp/clis-ntpd_1-2-3/release/deps/*-b74741511dfa898a* /

## this = "b74741511dfa898a"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/serde_derive-b74741511dfa898a.d",
##     "deps/libserde_derive-b74741511dfa898a.so",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/serde_derive-b74741511dfa898a.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-serde_derive-1.0.204"
## script = '''
## FROM scratch AS cratesio-serde_derive-1.0.204
## ADD --chmod=0664 --unpack=true --checksum=sha256:e0cd7e117be63d3c3678776753929474f3b04a43a080c744d6b0ae2a8c28e222 \
##   https://static.crates.io/crates/serde_derive/serde_derive-1.0.204.crate /'''
## 
## [[stages]]
## name = "dep-n-serde_derive-1.0.204-b74741511dfa898a"
## script = '''
## FROM rust-base AS dep-n-serde_derive-1.0.204-b74741511dfa898a
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-serde_derive-1.0.204,source=/serde_derive-1.0.204,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="serde_derive" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Macros 1.1 implementation of #[derive(Serialize, Deserialize)]" \
##         CARGO_PKG_HOMEPAGE="https://serde.rs" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="serde_derive" \
##         CARGO_PKG_README="crates-io.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="1.0.204" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="204" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'serde_derive' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "deserialize_in_place"))' '-C' 'metadata=f57af49d134c85f7' '-C' 'extra-filename=-b74741511dfa898a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_derive-1.0.204/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b74741511dfa898a-errcode'''
## 
## [[stages]]
## name = "out-b74741511dfa898a"
## script = """
## FROM scratch AS out-b74741511dfa898a
## COPY --from=dep-n-serde_derive-1.0.204-b74741511dfa898a /tmp/clis-ntpd_1-2-3/release/deps/*-b74741511dfa898a* /"""

FROM scratch AS cratesio-serde-1.0.204
ADD --chmod=0664 --unpack=true --checksum=sha256:bc76f558e0cbb2a839d37354c575f1dc3fdc6546b5be373ba43d95f231bf7c12 \
  https://static.crates.io/crates/serde/serde-1.0.204.crate /
FROM rust-base AS dep-n-serde-1.0.204-986325a49dffbcd1
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-serde-1.0.204,source=/serde-1.0.204,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204 \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204/Cargo.toml" \
        CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A generic serialization/deserialization framework" \
        CARGO_PKG_HOMEPAGE="https://serde.rs" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde" \
        CARGO_PKG_README="crates-io.md" \
        CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
        CARGO_PKG_RUST_VERSION="1.31" \
        CARGO_PKG_VERSION="1.0.204" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="204" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/serde-50e9549579b4bd5b/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'serde' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="serde_derive"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "derive", "rc", "serde_derive", "std", "unstable"))' '-C' 'metadata=7bea8907baa99a52' '-C' 'extra-filename=-986325a49dffbcd1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde_derive=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so' '--cap-lints' 'warn' '--check-cfg' 'cfg(no_core_cstr)' '--check-cfg' 'cfg(no_core_num_saturating)' '--check-cfg' 'cfg(no_core_try_from)' '--check-cfg' 'cfg(no_diagnostic_namespace)' '--check-cfg' 'cfg(no_float_copysign)' '--check-cfg' 'cfg(no_num_nonzero_signed)' '--check-cfg' 'cfg(no_relaxed_trait_bounds)' '--check-cfg' 'cfg(no_serde_derive)' '--check-cfg' 'cfg(no_std_atomic)' '--check-cfg' 'cfg(no_std_atomic64)' '--check-cfg' 'cfg(no_systemtime_checked_add)' '--check-cfg' 'cfg(no_target_has_atomic)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-errcode
FROM scratch AS out-986325a49dffbcd1
COPY --from=dep-n-serde-1.0.204-986325a49dffbcd1 /tmp/clis-ntpd_1-2-3/release/deps/*-986325a49dffbcd1* /

## this = "986325a49dffbcd1"
## deps = [
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/serde-986325a49dffbcd1.d",
##     "deps/libserde-986325a49dffbcd1.rmeta",
##     "deps/libserde-986325a49dffbcd1.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/serde-986325a49dffbcd1.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-serde-1.0.204"
## script = '''
## FROM scratch AS cratesio-serde-1.0.204
## ADD --chmod=0664 --unpack=true --checksum=sha256:bc76f558e0cbb2a839d37354c575f1dc3fdc6546b5be373ba43d95f231bf7c12 \
##   https://static.crates.io/crates/serde/serde-1.0.204.crate /'''
## 
## [[stages]]
## name = "dep-n-serde-1.0.204-986325a49dffbcd1"
## script = '''
## FROM rust-base AS dep-n-serde-1.0.204-986325a49dffbcd1
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-serde-1.0.204,source=/serde-1.0.204,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204 \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="serde" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="A generic serialization/deserialization framework" \
##         CARGO_PKG_HOMEPAGE="https://serde.rs" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="serde" \
##         CARGO_PKG_README="crates-io.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/serde-rs/serde" \
##         CARGO_PKG_RUST_VERSION="1.31" \
##         CARGO_PKG_VERSION="1.0.204" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="204" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/serde-50e9549579b4bd5b/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'serde' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="serde_derive"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "derive", "rc", "serde_derive", "std", "unstable"))' '-C' 'metadata=7bea8907baa99a52' '-C' 'extra-filename=-986325a49dffbcd1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde_derive=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so' '--cap-lints' 'warn' '--check-cfg' 'cfg(no_core_cstr)' '--check-cfg' 'cfg(no_core_num_saturating)' '--check-cfg' 'cfg(no_core_try_from)' '--check-cfg' 'cfg(no_diagnostic_namespace)' '--check-cfg' 'cfg(no_float_copysign)' '--check-cfg' 'cfg(no_num_nonzero_signed)' '--check-cfg' 'cfg(no_relaxed_trait_bounds)' '--check-cfg' 'cfg(no_serde_derive)' '--check-cfg' 'cfg(no_std_atomic)' '--check-cfg' 'cfg(no_std_atomic64)' '--check-cfg' 'cfg(no_systemtime_checked_add)' '--check-cfg' 'cfg(no_target_has_atomic)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde-1.0.204/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-986325a49dffbcd1-errcode'''
## 
## [[stages]]
## name = "out-986325a49dffbcd1"
## script = """
## FROM scratch AS out-986325a49dffbcd1
## COPY --from=dep-n-serde-1.0.204-986325a49dffbcd1 /tmp/clis-ntpd_1-2-3/release/deps/*-986325a49dffbcd1* /"""

FROM scratch AS cratesio-pin-project-lite-0.2.14
ADD --chmod=0664 --unpack=true --checksum=sha256:bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02 \
  https://static.crates.io/crates/pin-project-lite/pin-project-lite-0.2.14.crate /
FROM rust-base AS dep-n-pin-project-lite-0.2.14-32982cb980ef9328
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-pin-project-lite-0.2.14,source=/pin-project-lite-0.2.14,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="pin_project_lite" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A lightweight version of pin-project written with declarative macros.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="pin-project-lite" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/taiki-e/pin-project-lite" \
        CARGO_PKG_RUST_VERSION="1.37" \
        CARGO_PKG_VERSION="0.2.14" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="14" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'pin_project_lite' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'unreachable_pub' '--warn' 'clippy::undocumented_unsafe_blocks' '--warn' 'clippy::transmute_undefined_repr' '--warn' 'clippy::trailing_empty_array' '--warn' 'single_use_lifetimes' '--warn' 'rust_2018_idioms' '--warn' 'clippy::pedantic' '--warn' 'non_ascii_idents' '--warn' 'clippy::inline_asm_x86_att_syntax' '--warn' 'improper_ctypes_definitions' '--warn' 'improper_ctypes' '--warn' 'clippy::default_union_representation' '--warn' 'clippy::as_ptr_cast_mut' '--warn' 'clippy::all' '--allow' 'clippy::type_complexity' '--allow' 'clippy::too_many_lines' '--allow' 'clippy::too_many_arguments' '--allow' 'clippy::struct_field_names' '--allow' 'clippy::struct_excessive_bools' '--allow' 'clippy::single_match_else' '--allow' 'clippy::single_match' '--allow' 'clippy::similar_names' '--allow' 'clippy::module_name_repetitions' '--allow' 'clippy::missing_errors_doc' '--allow' 'clippy::manual_range_contains' '--allow' 'clippy::manual_assert' '--allow' 'clippy::float_cmp' '--allow' 'clippy::doc_markdown' '--allow' 'clippy::declare_interior_mutable_const' '--allow' 'clippy::borrow_as_ptr' '--allow' 'clippy::bool_assert_comparison' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=4446bbbb89f9b38b' '-C' 'extra-filename=-32982cb980ef9328' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-errcode
FROM scratch AS out-32982cb980ef9328
COPY --from=dep-n-pin-project-lite-0.2.14-32982cb980ef9328 /tmp/clis-ntpd_1-2-3/release/deps/*-32982cb980ef9328* /

## this = "32982cb980ef9328"
## writes = [
##     "deps/pin_project_lite-32982cb980ef9328.d",
##     "deps/libpin_project_lite-32982cb980ef9328.rmeta",
##     "deps/libpin_project_lite-32982cb980ef9328.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/pin_project_lite-32982cb980ef9328.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-pin-project-lite-0.2.14"
## script = '''
## FROM scratch AS cratesio-pin-project-lite-0.2.14
## ADD --chmod=0664 --unpack=true --checksum=sha256:bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02 \
##   https://static.crates.io/crates/pin-project-lite/pin-project-lite-0.2.14.crate /'''
## 
## [[stages]]
## name = "dep-n-pin-project-lite-0.2.14-32982cb980ef9328"
## script = '''
## FROM rust-base AS dep-n-pin-project-lite-0.2.14-32982cb980ef9328
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-pin-project-lite-0.2.14,source=/pin-project-lite-0.2.14,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="pin_project_lite" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="A lightweight version of pin-project written with declarative macros.\n" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="pin-project-lite" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/taiki-e/pin-project-lite" \
##         CARGO_PKG_RUST_VERSION="1.37" \
##         CARGO_PKG_VERSION="0.2.14" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="14" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'pin_project_lite' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'unreachable_pub' '--warn' 'clippy::undocumented_unsafe_blocks' '--warn' 'clippy::transmute_undefined_repr' '--warn' 'clippy::trailing_empty_array' '--warn' 'single_use_lifetimes' '--warn' 'rust_2018_idioms' '--warn' 'clippy::pedantic' '--warn' 'non_ascii_idents' '--warn' 'clippy::inline_asm_x86_att_syntax' '--warn' 'improper_ctypes_definitions' '--warn' 'improper_ctypes' '--warn' 'clippy::default_union_representation' '--warn' 'clippy::as_ptr_cast_mut' '--warn' 'clippy::all' '--allow' 'clippy::type_complexity' '--allow' 'clippy::too_many_lines' '--allow' 'clippy::too_many_arguments' '--allow' 'clippy::struct_field_names' '--allow' 'clippy::struct_excessive_bools' '--allow' 'clippy::single_match_else' '--allow' 'clippy::single_match' '--allow' 'clippy::similar_names' '--allow' 'clippy::module_name_repetitions' '--allow' 'clippy::missing_errors_doc' '--allow' 'clippy::manual_range_contains' '--allow' 'clippy::manual_assert' '--allow' 'clippy::float_cmp' '--allow' 'clippy::doc_markdown' '--allow' 'clippy::declare_interior_mutable_const' '--allow' 'clippy::borrow_as_ptr' '--allow' 'clippy::bool_assert_comparison' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=4446bbbb89f9b38b' '-C' 'extra-filename=-32982cb980ef9328' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pin-project-lite-0.2.14/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-32982cb980ef9328-errcode'''
## 
## [[stages]]
## name = "out-32982cb980ef9328"
## script = """
## FROM scratch AS out-32982cb980ef9328
## COPY --from=dep-n-pin-project-lite-0.2.14-32982cb980ef9328 /tmp/clis-ntpd_1-2-3/release/deps/*-32982cb980ef9328* /"""

FROM scratch AS cratesio-tracing-attributes-0.1.27
ADD --chmod=0664 --unpack=true --checksum=sha256:34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7 \
  https://static.crates.io/crates/tracing-attributes/tracing-attributes-0.1.27.crate /
FROM rust-base AS dep-n-tracing-attributes-0.1.27-ff2e92028461b3cf
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tracing-attributes-0.1.27,source=/tracing-attributes-0.1.27,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tracing_attributes" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>:Eliza Weisman <eliza@buoyant.io>:David Barsky <dbarsky@amazon.com>" \
        CARGO_PKG_DESCRIPTION="Procedural macro attributes for automatically instrumenting functions.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tracing-attributes" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
        CARGO_PKG_RUST_VERSION="1.56.0" \
        CARGO_PKG_VERSION="0.1.27" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="27" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tracing_attributes' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("async-await"))' '-C' 'metadata=1e71a38898867952' '-C' 'extra-filename=-ff2e92028461b3cf' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-errcode
FROM scratch AS out-ff2e92028461b3cf
COPY --from=dep-n-tracing-attributes-0.1.27-ff2e92028461b3cf /tmp/clis-ntpd_1-2-3/release/deps/*-ff2e92028461b3cf* /

## this = "ff2e92028461b3cf"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/tracing_attributes-ff2e92028461b3cf.d",
##     "deps/libtracing_attributes-ff2e92028461b3cf.so",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tracing_attributes-ff2e92028461b3cf.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information","code":{"code":"renamed_and_removed_lints","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/src/lib.rs","byte_start":2431,"byte_end":2448,"line_start":73,"line_end":73,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    private_in_public,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(renamed_and_removed_lints)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/src/lib.rs:73:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    private_in_public,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(renamed_and_removed_lints)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tracing-attributes-0.1.27"
## script = '''
## FROM scratch AS cratesio-tracing-attributes-0.1.27
## ADD --chmod=0664 --unpack=true --checksum=sha256:34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7 \
##   https://static.crates.io/crates/tracing-attributes/tracing-attributes-0.1.27.crate /'''
## 
## [[stages]]
## name = "dep-n-tracing-attributes-0.1.27-ff2e92028461b3cf"
## script = '''
## FROM rust-base AS dep-n-tracing-attributes-0.1.27-ff2e92028461b3cf
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tracing-attributes-0.1.27,source=/tracing-attributes-0.1.27,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tracing_attributes" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>:Eliza Weisman <eliza@buoyant.io>:David Barsky <dbarsky@amazon.com>" \
##         CARGO_PKG_DESCRIPTION="Procedural macro attributes for automatically instrumenting functions.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tracing-attributes" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
##         CARGO_PKG_RUST_VERSION="1.56.0" \
##         CARGO_PKG_VERSION="0.1.27" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="27" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tracing_attributes' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("async-await"))' '-C' 'metadata=1e71a38898867952' '-C' 'extra-filename=-ff2e92028461b3cf' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-attributes-0.1.27/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-ff2e92028461b3cf-errcode'''
## 
## [[stages]]
## name = "out-ff2e92028461b3cf"
## script = """
## FROM scratch AS out-ff2e92028461b3cf
## COPY --from=dep-n-tracing-attributes-0.1.27-ff2e92028461b3cf /tmp/clis-ntpd_1-2-3/release/deps/*-ff2e92028461b3cf* /"""

FROM scratch AS cratesio-tracing-core-0.1.32
ADD --chmod=0664 --unpack=true --checksum=sha256:c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54 \
  https://static.crates.io/crates/tracing-core/tracing-core-0.1.32.crate /
FROM rust-base AS dep-n-tracing-core-0.1.32-100f3fe23952e4be
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tracing-core-0.1.32,source=/tracing-core-0.1.32,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32 \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tracing_core" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Core primitives for application-level tracing.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tracing-core" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
        CARGO_PKG_RUST_VERSION="1.56.0" \
        CARGO_PKG_VERSION="0.1.32" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="32" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tracing_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="once_cell"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "once_cell", "std", "valuable"))' '-C' 'metadata=7b5e5968a572b562' '-C' 'extra-filename=-100f3fe23952e4be' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-errcode
FROM scratch AS out-100f3fe23952e4be
COPY --from=dep-n-tracing-core-0.1.32-100f3fe23952e4be /tmp/clis-ntpd_1-2-3/release/deps/*-100f3fe23952e4be* /

## this = "100f3fe23952e4be"
## deps = ["6ed51fafe322ecba"]
## short_externs = ["6ed51fafe322ecba"]
## writes = [
##     "deps/tracing_core-100f3fe23952e4be.d",
##     "deps/libtracing_core-100f3fe23952e4be.rmeta",
##     "deps/libtracing_core-100f3fe23952e4be.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tracing_core-100f3fe23952e4be.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information","code":{"code":"renamed_and_removed_lints","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/lib.rs","byte_start":5184,"byte_end":5201,"line_start":138,"line_end":138,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    private_in_public,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(renamed_and_removed_lints)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/lib.rs:138:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    private_in_public,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(renamed_and_removed_lints)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `alloc`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs","byte_start":5465,"byte_end":5482,"line_start":147,"line_end":147,"column_start":7,"column_end":24,"is_primary":true,"text":[{"text":"#[cfg(feature = \"alloc\")]","highlight_start":7,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default`, `once_cell`, `std`, and `valuable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `alloc` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `alloc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs:147:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"alloc\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default`, `once_cell`, `std`, and `valuable`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `alloc` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `alloc`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs","byte_start":5522,"byte_end":5539,"line_start":150,"line_end":150,"column_start":7,"column_end":24,"is_primary":true,"text":[{"text":"#[cfg(feature = \"alloc\")]","highlight_start":7,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `default`, `once_cell`, `std`, and `valuable`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `alloc` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `alloc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs:150:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(feature = \"alloc\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `default`, `once_cell`, `std`, and `valuable`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `alloc` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":14048,"byte_end":14064,"line_start":374,"line_end":374,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:374:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":23811,"byte_end":23827,"line_start":719,"line_end":719,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:719:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m719\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":23918,"byte_end":23934,"line_start":722,"line_end":722,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:722:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m722\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":24193,"byte_end":24209,"line_start":730,"line_end":730,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:730:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m730\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":24307,"byte_end":24323,"line_start":733,"line_end":733,"column_start":11,"column_end":27,"is_primary":true,"text":[{"text":"#[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":11,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:733:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m733\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `tracing_unstable`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs","byte_start":10700,"byte_end":10716,"line_start":270,"line_end":270,"column_start":15,"column_end":31,"is_primary":true,"text":[{"text":"    #[cfg(all(tracing_unstable, feature = \"valuable\"))]","highlight_start":15,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `tracing_unstable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/field.rs:270:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(all(tracing_unstable, feature = \"valuable\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(tracing_unstable)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(tracing_unstable)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"creating a shared reference to mutable static is discouraged","code":{"code":"static_mut_refs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs","byte_start":16239,"byte_end":16255,"line_start":458,"line_end":458,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"        &GLOBAL_DISPATCH","highlight_start":9,"highlight_end":25}],"label":"shared reference to mutable static","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(static_mut_refs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `&raw const` instead to create a raw pointer","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs","byte_start":16239,"byte_end":16240,"line_start":458,"line_end":458,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        &GLOBAL_DISPATCH","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"&raw const ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: creating a shared reference to mutable static is discouraged\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/dispatcher.rs:458:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &GLOBAL_DISPATCH\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mshared reference to mutable static\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(static_mut_refs)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `&raw const` instead to create a raw pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10m&raw const \u001b[0m\u001b[0mGLOBAL_DISPATCH\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 10 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tracing-core-0.1.32"
## script = '''
## FROM scratch AS cratesio-tracing-core-0.1.32
## ADD --chmod=0664 --unpack=true --checksum=sha256:c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54 \
##   https://static.crates.io/crates/tracing-core/tracing-core-0.1.32.crate /'''
## 
## [[stages]]
## name = "dep-n-tracing-core-0.1.32-100f3fe23952e4be"
## script = '''
## FROM rust-base AS dep-n-tracing-core-0.1.32-100f3fe23952e4be
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tracing-core-0.1.32,source=/tracing-core-0.1.32,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32 \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tracing_core" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="Core primitives for application-level tracing.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tracing-core" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
##         CARGO_PKG_RUST_VERSION="1.56.0" \
##         CARGO_PKG_VERSION="0.1.32" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="32" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tracing_core' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="once_cell"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "once_cell", "std", "valuable"))' '-C' 'metadata=7b5e5968a572b562' '-C' 'extra-filename=-100f3fe23952e4be' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-core-0.1.32/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-100f3fe23952e4be-errcode'''
## 
## [[stages]]
## name = "out-100f3fe23952e4be"
## script = """
## FROM scratch AS out-100f3fe23952e4be
## COPY --from=dep-n-tracing-core-0.1.32-100f3fe23952e4be /tmp/clis-ntpd_1-2-3/release/deps/*-100f3fe23952e4be* /"""

FROM scratch AS cratesio-tracing-0.1.40
ADD --chmod=0664 --unpack=true --checksum=sha256:c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef \
  https://static.crates.io/crates/tracing/tracing-0.1.40.crate /
FROM rust-base AS dep-n-tracing-0.1.40-7d2675bffdb63c95
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tracing-0.1.40,source=/tracing-0.1.40,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40 \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tracing" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/Cargo.toml" \
        CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>:Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Application-level tracing for Rust.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tracing" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
        CARGO_PKG_RUST_VERSION="1.56.0" \
        CARGO_PKG_VERSION="0.1.40" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="40" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tracing' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="attributes"' '--cfg' 'feature="default"' '--cfg' 'feature="log"' '--cfg' 'feature="std"' '--cfg' 'feature="tracing-attributes"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("async-await", "attributes", "default", "log", "log-always", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "std", "tracing-attributes", "valuable"))' '-C' 'metadata=4c23ddf93bdc0ed1' '-C' 'extra-filename=-7d2675bffdb63c95' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'log=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta' '--extern' 'pin_project_lite=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta' '--extern' 'tracing_attributes=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so' '--extern' 'tracing_core=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-errcode
FROM scratch AS out-7d2675bffdb63c95
COPY --from=dep-n-tracing-0.1.40-7d2675bffdb63c95 /tmp/clis-ntpd_1-2-3/release/deps/*-7d2675bffdb63c95* /

## this = "7d2675bffdb63c95"
## deps = [
##     "b564a3159bfcf688",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "100f3fe23952e4be",
##     "6ed51fafe322ecba",
## ]
## short_externs = [
##     "b564a3159bfcf688",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "100f3fe23952e4be",
##     "6ed51fafe322ecba",
## ]
## writes = [
##     "deps/tracing-7d2675bffdb63c95.d",
##     "deps/libtracing-7d2675bffdb63c95.rmeta",
##     "deps/libtracing-7d2675bffdb63c95.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tracing-7d2675bffdb63c95.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information","code":{"code":"renamed_and_removed_lints","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/src/lib.rs","byte_start":39540,"byte_end":39557,"line_start":932,"line_end":932,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    private_in_public,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(renamed_and_removed_lints)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/src/lib.rs:932:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m932\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    private_in_public,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(renamed_and_removed_lints)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rmeta"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rmeta"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-ff2e92028461b3cf"
## xtern = "libtracing_attributes-ff2e92028461b3cf.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rmeta"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tracing-0.1.40"
## script = '''
## FROM scratch AS cratesio-tracing-0.1.40
## ADD --chmod=0664 --unpack=true --checksum=sha256:c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef \
##   https://static.crates.io/crates/tracing/tracing-0.1.40.crate /'''
## 
## [[stages]]
## name = "dep-n-tracing-0.1.40-7d2675bffdb63c95"
## script = '''
## FROM rust-base AS dep-n-tracing-0.1.40-7d2675bffdb63c95
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tracing-0.1.40,source=/tracing-0.1.40,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40 \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tracing" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>:Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="Application-level tracing for Rust.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tracing" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
##         CARGO_PKG_RUST_VERSION="1.56.0" \
##         CARGO_PKG_VERSION="0.1.40" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="40" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tracing' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="attributes"' '--cfg' 'feature="default"' '--cfg' 'feature="log"' '--cfg' 'feature="std"' '--cfg' 'feature="tracing-attributes"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("async-await", "attributes", "default", "log", "log-always", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "std", "tracing-attributes", "valuable"))' '-C' 'metadata=4c23ddf93bdc0ed1' '-C' 'extra-filename=-7d2675bffdb63c95' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'log=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta' '--extern' 'pin_project_lite=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta' '--extern' 'tracing_attributes=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so' '--extern' 'tracing_core=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-0.1.40/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7d2675bffdb63c95-errcode'''
## 
## [[stages]]
## name = "out-7d2675bffdb63c95"
## script = """
## FROM scratch AS out-7d2675bffdb63c95
## COPY --from=dep-n-tracing-0.1.40-7d2675bffdb63c95 /tmp/clis-ntpd_1-2-3/release/deps/*-7d2675bffdb63c95* /"""

FROM scratch AS cratesio-ntp-proto-1.2.3
ADD --chmod=0664 --unpack=true --checksum=sha256:850f821039dbfbb429c92dc3148d24cd2655e170cac6c034bba50bde5a45fa65 \
  https://static.crates.io/crates/ntp-proto/ntp-proto-1.2.3.crate /
FROM rust-base AS dep-n-ntp-proto-1.2.3-5a810c5444456e7d
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ntp-proto-1.2.3,source=/ntp-proto-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3 \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta,source=/libaes_siv-e0325614c1d7d6ab.rmeta \
  --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
  --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta,source=/libmd5-f0775f4337e7a668.rmeta \
  --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
  --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta,source=/librand-5161209caf71d483.rmeta \
  --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
  --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta,source=/librustls-fd2c262888e3ecb5.rmeta \
  --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ntp_proto" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="ntpd-rs packet parsing and algorithms" \
        CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ntp-proto" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_RUST_VERSION="1.70" \
        CARGO_PKG_VERSION="1.2.3" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ntp_proto' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="__internal-api"' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("__internal-api", "__internal-fuzz", "__internal-test", "arbitrary", "default", "ntpv5", "nts-pool"))' '-C' 'metadata=8d11cd7892aac378' '-C' 'extra-filename=-5a810c5444456e7d' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'aead=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta' '--extern' 'aes_siv=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta' '--extern' 'md5=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-errcode
FROM scratch AS out-5a810c5444456e7d
COPY --from=dep-n-ntp-proto-1.2.3-5a810c5444456e7d /tmp/clis-ntpd_1-2-3/release/deps/*-5a810c5444456e7d* /

## this = "5a810c5444456e7d"
## deps = [
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
## ]
## short_externs = [
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "a7905fdc410bdfce",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
## ]
## writes = [
##     "deps/ntp_proto-5a810c5444456e7d.d",
##     "deps/libntp_proto-5a810c5444456e7d.rmeta",
##     "deps/libntp_proto-5a810c5444456e7d.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ntp_proto-5a810c5444456e7d.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rmeta"
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-e0325614c1d7d6ab"
## xtern = "libaes_siv-e0325614c1d7d6ab.rmeta"
## 
## [[externs]]
## from = "out-e0325614c1d7d6ab"
## xtern = "libaes_siv-e0325614c1d7d6ab.rlib"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rmeta"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rlib"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rmeta"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rlib"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rmeta"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rlib"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rmeta"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rmeta"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rmeta"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rlib"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rmeta"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rlib"
## 
## [[externs]]
## from = "out-f0775f4337e7a668"
## xtern = "libmd5-f0775f4337e7a668.rmeta"
## 
## [[externs]]
## from = "out-f0775f4337e7a668"
## xtern = "libmd5-f0775f4337e7a668.rlib"
## 
## [[externs]]
## from = "out-5161209caf71d483"
## xtern = "librand-5161209caf71d483.rmeta"
## 
## [[externs]]
## from = "out-5161209caf71d483"
## xtern = "librand-5161209caf71d483.rlib"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rmeta"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rlib"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rmeta"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rlib"
## 
## [[externs]]
## from = "out-fd2c262888e3ecb5"
## xtern = "librustls-fd2c262888e3ecb5.rmeta"
## 
## [[externs]]
## from = "out-fd2c262888e3ecb5"
## xtern = "librustls-fd2c262888e3ecb5.rlib"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rmeta"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rmeta"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rmeta"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rmeta"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rmeta"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rmeta"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rmeta"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-ff2e92028461b3cf"
## xtern = "libtracing_attributes-ff2e92028461b3cf.so"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rmeta"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ntp-proto-1.2.3"
## script = '''
## FROM scratch AS cratesio-ntp-proto-1.2.3
## ADD --chmod=0664 --unpack=true --checksum=sha256:850f821039dbfbb429c92dc3148d24cd2655e170cac6c034bba50bde5a45fa65 \
##   https://static.crates.io/crates/ntp-proto/ntp-proto-1.2.3.crate /'''
## 
## [[stages]]
## name = "dep-n-ntp-proto-1.2.3-5a810c5444456e7d"
## script = '''
## FROM rust-base AS dep-n-ntp-proto-1.2.3-5a810c5444456e7d
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ntp-proto-1.2.3,source=/ntp-proto-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3 \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta,source=/libaes_siv-e0325614c1d7d6ab.rmeta \
##   --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
##   --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta,source=/libmd5-f0775f4337e7a668.rmeta \
##   --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
##   --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta,source=/librand-5161209caf71d483.rmeta \
##   --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
##   --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta,source=/librustls-fd2c262888e3ecb5.rmeta \
##   --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ntp_proto" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="ntpd-rs packet parsing and algorithms" \
##         CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ntp-proto" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_RUST_VERSION="1.70" \
##         CARGO_PKG_VERSION="1.2.3" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="3" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ntp_proto' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="__internal-api"' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("__internal-api", "__internal-fuzz", "__internal-test", "arbitrary", "default", "ntpv5", "nts-pool"))' '-C' 'metadata=8d11cd7892aac378' '-C' 'extra-filename=-5a810c5444456e7d' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'aead=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta' '--extern' 'aes_siv=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta' '--extern' 'md5=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--extern' 'zeroize=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntp-proto-1.2.3/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-5a810c5444456e7d-errcode'''
## 
## [[stages]]
## name = "out-5a810c5444456e7d"
## script = """
## FROM scratch AS out-5a810c5444456e7d
## COPY --from=dep-n-ntp-proto-1.2.3-5a810c5444456e7d /tmp/clis-ntpd_1-2-3/release/deps/*-5a810c5444456e7d* /"""

FROM scratch AS cratesio-openssl-probe-0.1.5
ADD --chmod=0664 --unpack=true --checksum=sha256:ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf \
  https://static.crates.io/crates/openssl-probe/openssl-probe-0.1.5.crate /
FROM rust-base AS dep-n-openssl-probe-0.1.5-0ee236ae7bf0c632
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-openssl-probe-0.1.5,source=/openssl-probe-0.1.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="openssl_probe" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="Tool for helping to find SSL certificate locations on the system for OpenSSL\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/openssl-probe" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="openssl-probe" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/openssl-probe" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'openssl_probe' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=aeffdc3a0f5740b3' '-C' 'extra-filename=-0ee236ae7bf0c632' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-errcode
FROM scratch AS out-0ee236ae7bf0c632
COPY --from=dep-n-openssl-probe-0.1.5-0ee236ae7bf0c632 /tmp/clis-ntpd_1-2-3/release/deps/*-0ee236ae7bf0c632* /

## this = "0ee236ae7bf0c632"
## writes = [
##     "deps/openssl_probe-0ee236ae7bf0c632.d",
##     "deps/libopenssl_probe-0ee236ae7bf0c632.rmeta",
##     "deps/libopenssl_probe-0ee236ae7bf0c632.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/openssl_probe-0ee236ae7bf0c632.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-openssl-probe-0.1.5"
## script = '''
## FROM scratch AS cratesio-openssl-probe-0.1.5
## ADD --chmod=0664 --unpack=true --checksum=sha256:ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf \
##   https://static.crates.io/crates/openssl-probe/openssl-probe-0.1.5.crate /'''
## 
## [[stages]]
## name = "dep-n-openssl-probe-0.1.5-0ee236ae7bf0c632"
## script = '''
## FROM rust-base AS dep-n-openssl-probe-0.1.5-0ee236ae7bf0c632
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-openssl-probe-0.1.5,source=/openssl-probe-0.1.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="openssl_probe" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
##         CARGO_PKG_DESCRIPTION="Tool for helping to find SSL certificate locations on the system for OpenSSL\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/openssl-probe" \
##         CARGO_PKG_LICENSE="MIT/Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="openssl-probe" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/openssl-probe" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.1.5" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="5" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'openssl_probe' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=aeffdc3a0f5740b3' '-C' 'extra-filename=-0ee236ae7bf0c632' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/openssl-probe-0.1.5/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-0ee236ae7bf0c632-errcode'''
## 
## [[stages]]
## name = "out-0ee236ae7bf0c632"
## script = """
## FROM scratch AS out-0ee236ae7bf0c632
## COPY --from=dep-n-openssl-probe-0.1.5-0ee236ae7bf0c632 /tmp/clis-ntpd_1-2-3/release/deps/*-0ee236ae7bf0c632* /"""

FROM scratch AS cratesio-base64-0.22.1
ADD --chmod=0664 --unpack=true --checksum=sha256:72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6 \
  https://static.crates.io/crates/base64/base64-0.22.1.crate /
FROM rust-base AS dep-n-base64-0.22.1-b08e25582a8fdf7e
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-base64-0.22.1,source=/base64-0.22.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="base64" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Marshall Pierce <marshall@mpierce.org>" \
        CARGO_PKG_DESCRIPTION="encodes and decodes base64 as bytes or utf8" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="base64" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/marshallpierce/rust-base64" \
        CARGO_PKG_RUST_VERSION="1.48.0" \
        CARGO_PKG_VERSION="0.22.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="22" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'base64' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "std"))' '-C' 'metadata=33815964528ad9c4' '-C' 'extra-filename=-b08e25582a8fdf7e' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-errcode
FROM scratch AS out-b08e25582a8fdf7e
COPY --from=dep-n-base64-0.22.1-b08e25582a8fdf7e /tmp/clis-ntpd_1-2-3/release/deps/*-b08e25582a8fdf7e* /

## this = "b08e25582a8fdf7e"
## writes = [
##     "deps/base64-b08e25582a8fdf7e.d",
##     "deps/libbase64-b08e25582a8fdf7e.rmeta",
##     "deps/libbase64-b08e25582a8fdf7e.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/base64-b08e25582a8fdf7e.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `cargo-clippy`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/src/lib.rs","byte_start":9108,"byte_end":9132,"line_start":223,"line_end":223,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"cargo-clippy\", allow(clippy::cast_lossless))]","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `feature` are: `alloc`, `default`, and `std`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider adding `cargo-clippy` as a feature in `Cargo.toml`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `cargo-clippy`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/src/lib.rs:223:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"cargo-clippy\", allow(clippy::cast_lossless))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `feature` are: `alloc`, `default`, and `std`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider adding `cargo-clippy` as a feature in `Cargo.toml`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-base64-0.22.1"
## script = '''
## FROM scratch AS cratesio-base64-0.22.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6 \
##   https://static.crates.io/crates/base64/base64-0.22.1.crate /'''
## 
## [[stages]]
## name = "dep-n-base64-0.22.1-b08e25582a8fdf7e"
## script = '''
## FROM rust-base AS dep-n-base64-0.22.1-b08e25582a8fdf7e
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-base64-0.22.1,source=/base64-0.22.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="base64" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Marshall Pierce <marshall@mpierce.org>" \
##         CARGO_PKG_DESCRIPTION="encodes and decodes base64 as bytes or utf8" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="base64" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/marshallpierce/rust-base64" \
##         CARGO_PKG_RUST_VERSION="1.48.0" \
##         CARGO_PKG_VERSION="0.22.1" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="22" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'base64' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "std"))' '-C' 'metadata=33815964528ad9c4' '-C' 'extra-filename=-b08e25582a8fdf7e' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/base64-0.22.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b08e25582a8fdf7e-errcode'''
## 
## [[stages]]
## name = "out-b08e25582a8fdf7e"
## script = """
## FROM scratch AS out-b08e25582a8fdf7e
## COPY --from=dep-n-base64-0.22.1-b08e25582a8fdf7e /tmp/clis-ntpd_1-2-3/release/deps/*-b08e25582a8fdf7e* /"""

FROM scratch AS cratesio-rustls-pemfile-2.1.2
ADD --chmod=0664 --unpack=true --checksum=sha256:29993a25686778eb88d4189742cd713c9bce943bc54251a33509dc63cbacf73d \
  https://static.crates.io/crates/rustls-pemfile/rustls-pemfile-2.1.2.crate /
FROM rust-base AS dep-n-rustls-pemfile-2.1.2-e86acdc6389f12a9
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rustls-pemfile-2.1.2,source=/rustls-pemfile-2.1.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2 \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rustls_pemfile" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Basic .pem file parser for keys and certificates" \
        CARGO_PKG_HOMEPAGE="https://github.com/rustls/pemfile" \
        CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustls-pemfile" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rustls/pemfile" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.1.2" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rustls_pemfile' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "std"))' '-C' 'metadata=983a903aa0d60059' '-C' 'extra-filename=-e86acdc6389f12a9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'base64=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-errcode
FROM scratch AS out-e86acdc6389f12a9
COPY --from=dep-n-rustls-pemfile-2.1.2-e86acdc6389f12a9 /tmp/clis-ntpd_1-2-3/release/deps/*-e86acdc6389f12a9* /

## this = "e86acdc6389f12a9"
## deps = [
##     "b08e25582a8fdf7e",
##     "0bd417676bde33fe",
## ]
## short_externs = [
##     "b08e25582a8fdf7e",
##     "0bd417676bde33fe",
## ]
## writes = [
##     "deps/rustls_pemfile-e86acdc6389f12a9.d",
##     "deps/librustls_pemfile-e86acdc6389f12a9.rmeta",
##     "deps/librustls_pemfile-e86acdc6389f12a9.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rustls_pemfile-e86acdc6389f12a9.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rmeta"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rustls-pemfile-2.1.2"
## script = '''
## FROM scratch AS cratesio-rustls-pemfile-2.1.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:29993a25686778eb88d4189742cd713c9bce943bc54251a33509dc63cbacf73d \
##   https://static.crates.io/crates/rustls-pemfile/rustls-pemfile-2.1.2.crate /'''
## 
## [[stages]]
## name = "dep-n-rustls-pemfile-2.1.2-e86acdc6389f12a9"
## script = '''
## FROM rust-base AS dep-n-rustls-pemfile-2.1.2-e86acdc6389f12a9
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rustls-pemfile-2.1.2,source=/rustls-pemfile-2.1.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2 \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rustls_pemfile" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Basic .pem file parser for keys and certificates" \
##         CARGO_PKG_HOMEPAGE="https://github.com/rustls/pemfile" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rustls-pemfile" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rustls/pemfile" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="2.1.2" \
##         CARGO_PKG_VERSION_MAJOR="2" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rustls_pemfile' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "std"))' '-C' 'metadata=983a903aa0d60059' '-C' 'extra-filename=-e86acdc6389f12a9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'base64=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-pemfile-2.1.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e86acdc6389f12a9-errcode'''
## 
## [[stages]]
## name = "out-e86acdc6389f12a9"
## script = """
## FROM scratch AS out-e86acdc6389f12a9
## COPY --from=dep-n-rustls-pemfile-2.1.2-e86acdc6389f12a9 /tmp/clis-ntpd_1-2-3/release/deps/*-e86acdc6389f12a9* /"""

FROM scratch AS cratesio-rustls-native-certs-0.7.1
ADD --chmod=0664 --unpack=true --checksum=sha256:a88d6d420651b496bdd98684116959239430022a115c1240e6c3993be0b15fba \
  https://static.crates.io/crates/rustls-native-certs/rustls-native-certs-0.7.1.crate /
FROM rust-base AS dep-n-rustls-native-certs-0.7.1-9a69f5c8c648a58b
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-rustls-native-certs-0.7.1,source=/rustls-native-certs-0.7.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1 \
  --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta,source=/libopenssl_probe-0ee236ae7bf0c632.rmeta \
  --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
  --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta,source=/librustls_pemfile-e86acdc6389f12a9.rmeta \
  --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="rustls_native_certs" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="rustls-native-certs allows rustls to use the platform native certificate store" \
        CARGO_PKG_HOMEPAGE="https://github.com/rustls/rustls-native-certs" \
        CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="rustls-native-certs" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rustls/rustls-native-certs" \
        CARGO_PKG_RUST_VERSION="1.60" \
        CARGO_PKG_VERSION="0.7.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'rustls_native_certs' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=e8a82754a751336b' '-C' 'extra-filename=-9a69f5c8c648a58b' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'openssl_probe=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-errcode
FROM scratch AS out-9a69f5c8c648a58b
COPY --from=dep-n-rustls-native-certs-0.7.1-9a69f5c8c648a58b /tmp/clis-ntpd_1-2-3/release/deps/*-9a69f5c8c648a58b* /

## this = "9a69f5c8c648a58b"
## deps = [
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "0bd417676bde33fe",
## ]
## short_externs = [
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "0bd417676bde33fe",
## ]
## writes = [
##     "deps/rustls_native_certs-9a69f5c8c648a58b.d",
##     "deps/librustls_native_certs-9a69f5c8c648a58b.rmeta",
##     "deps/librustls_native_certs-9a69f5c8c648a58b.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/rustls_native_certs-9a69f5c8c648a58b.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-0ee236ae7bf0c632"
## xtern = "libopenssl_probe-0ee236ae7bf0c632.rmeta"
## 
## [[externs]]
## from = "out-0ee236ae7bf0c632"
## xtern = "libopenssl_probe-0ee236ae7bf0c632.rlib"
## 
## [[externs]]
## from = "out-e86acdc6389f12a9"
## xtern = "librustls_pemfile-e86acdc6389f12a9.rmeta"
## 
## [[externs]]
## from = "out-e86acdc6389f12a9"
## xtern = "librustls_pemfile-e86acdc6389f12a9.rlib"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rmeta"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-rustls-native-certs-0.7.1"
## script = '''
## FROM scratch AS cratesio-rustls-native-certs-0.7.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:a88d6d420651b496bdd98684116959239430022a115c1240e6c3993be0b15fba \
##   https://static.crates.io/crates/rustls-native-certs/rustls-native-certs-0.7.1.crate /'''
## 
## [[stages]]
## name = "dep-n-rustls-native-certs-0.7.1-9a69f5c8c648a58b"
## script = '''
## FROM rust-base AS dep-n-rustls-native-certs-0.7.1-9a69f5c8c648a58b
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-rustls-native-certs-0.7.1,source=/rustls-native-certs-0.7.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1 \
##   --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta,source=/libopenssl_probe-0ee236ae7bf0c632.rmeta \
##   --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
##   --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta,source=/librustls_pemfile-e86acdc6389f12a9.rmeta \
##   --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="rustls_native_certs" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="rustls-native-certs allows rustls to use the platform native certificate store" \
##         CARGO_PKG_HOMEPAGE="https://github.com/rustls/rustls-native-certs" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR ISC OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="rustls-native-certs" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rustls/rustls-native-certs" \
##         CARGO_PKG_RUST_VERSION="1.60" \
##         CARGO_PKG_VERSION="0.7.1" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="7" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'rustls_native_certs' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=e8a82754a751336b' '-C' 'extra-filename=-9a69f5c8c648a58b' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'openssl_probe=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta' '--extern' 'pki_types=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/rustls-native-certs-0.7.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-9a69f5c8c648a58b-errcode'''
## 
## [[stages]]
## name = "out-9a69f5c8c648a58b"
## script = """
## FROM scratch AS out-9a69f5c8c648a58b
## COPY --from=dep-n-rustls-native-certs-0.7.1-9a69f5c8c648a58b /tmp/clis-ntpd_1-2-3/release/deps/*-9a69f5c8c648a58b* /"""

FROM scratch AS cratesio-itoa-1.0.11
ADD --chmod=0664 --unpack=true --checksum=sha256:49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b \
  https://static.crates.io/crates/itoa/itoa-1.0.11.crate /
FROM rust-base AS dep-n-itoa-1.0.11-95ec35c9faa8fa43
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-itoa-1.0.11,source=/itoa-1.0.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="itoa" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Fast integer primitive to string conversion" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="itoa" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/itoa" \
        CARGO_PKG_RUST_VERSION="1.36" \
        CARGO_PKG_VERSION="1.0.11" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="11" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'itoa' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no-panic"))' '-C' 'metadata=2d3c6ff08e17fc95' '-C' 'extra-filename=-95ec35c9faa8fa43' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-errcode
FROM scratch AS out-95ec35c9faa8fa43
COPY --from=dep-n-itoa-1.0.11-95ec35c9faa8fa43 /tmp/clis-ntpd_1-2-3/release/deps/*-95ec35c9faa8fa43* /

## this = "95ec35c9faa8fa43"
## writes = [
##     "deps/itoa-95ec35c9faa8fa43.d",
##     "deps/libitoa-95ec35c9faa8fa43.rmeta",
##     "deps/libitoa-95ec35c9faa8fa43.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/itoa-95ec35c9faa8fa43.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-itoa-1.0.11"
## script = '''
## FROM scratch AS cratesio-itoa-1.0.11
## ADD --chmod=0664 --unpack=true --checksum=sha256:49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b \
##   https://static.crates.io/crates/itoa/itoa-1.0.11.crate /'''
## 
## [[stages]]
## name = "dep-n-itoa-1.0.11-95ec35c9faa8fa43"
## script = '''
## FROM rust-base AS dep-n-itoa-1.0.11-95ec35c9faa8fa43
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-itoa-1.0.11,source=/itoa-1.0.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="itoa" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Fast integer primitive to string conversion" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="itoa" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/itoa" \
##         CARGO_PKG_RUST_VERSION="1.36" \
##         CARGO_PKG_VERSION="1.0.11" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="11" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'itoa' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no-panic"))' '-C' 'metadata=2d3c6ff08e17fc95' '-C' 'extra-filename=-95ec35c9faa8fa43' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itoa-1.0.11/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-95ec35c9faa8fa43-errcode'''
## 
## [[stages]]
## name = "out-95ec35c9faa8fa43"
## script = """
## FROM scratch AS out-95ec35c9faa8fa43
## COPY --from=dep-n-itoa-1.0.11-95ec35c9faa8fa43 /tmp/clis-ntpd_1-2-3/release/deps/*-95ec35c9faa8fa43* /"""

FROM scratch AS cratesio-ryu-1.0.18
ADD --chmod=0664 --unpack=true --checksum=sha256:f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f \
  https://static.crates.io/crates/ryu/ryu-1.0.18.crate /
FROM rust-base AS dep-n-ryu-1.0.18-56a874feb6525857
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ryu-1.0.18,source=/ryu-1.0.18,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ryu" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Fast floating point to string conversion" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR BSL-1.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ryu" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/ryu" \
        CARGO_PKG_RUST_VERSION="1.36" \
        CARGO_PKG_VERSION="1.0.18" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="18" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ryu' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no-panic", "small"))' '-C' 'metadata=b513255835a8ab16' '-C' 'extra-filename=-56a874feb6525857' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-errcode
FROM scratch AS out-56a874feb6525857
COPY --from=dep-n-ryu-1.0.18-56a874feb6525857 /tmp/clis-ntpd_1-2-3/release/deps/*-56a874feb6525857* /

## this = "56a874feb6525857"
## writes = [
##     "deps/ryu-56a874feb6525857.d",
##     "deps/libryu-56a874feb6525857.rmeta",
##     "deps/libryu-56a874feb6525857.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ryu-56a874feb6525857.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ryu-1.0.18"
## script = '''
## FROM scratch AS cratesio-ryu-1.0.18
## ADD --chmod=0664 --unpack=true --checksum=sha256:f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f \
##   https://static.crates.io/crates/ryu/ryu-1.0.18.crate /'''
## 
## [[stages]]
## name = "dep-n-ryu-1.0.18-56a874feb6525857"
## script = '''
## FROM rust-base AS dep-n-ryu-1.0.18-56a874feb6525857
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ryu-1.0.18,source=/ryu-1.0.18,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ryu" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18/Cargo.toml" \
##         CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Fast floating point to string conversion" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR BSL-1.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ryu" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/dtolnay/ryu" \
##         CARGO_PKG_RUST_VERSION="1.36" \
##         CARGO_PKG_VERSION="1.0.18" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="18" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ryu' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no-panic", "small"))' '-C' 'metadata=b513255835a8ab16' '-C' 'extra-filename=-56a874feb6525857' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ryu-1.0.18/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56a874feb6525857-errcode'''
## 
## [[stages]]
## name = "out-56a874feb6525857"
## script = """
## FROM scratch AS out-56a874feb6525857
## COPY --from=dep-n-ryu-1.0.18-56a874feb6525857 /tmp/clis-ntpd_1-2-3/release/deps/*-56a874feb6525857* /"""

FROM scratch AS cratesio-serde_json-1.0.120
ADD --chmod=0664 --unpack=true --checksum=sha256:4e0d21c9a8cae1235ad58a00c11cb40d4b1e5c784f1ef2c537876ed6ffd8b7c5 \
  https://static.crates.io/crates/serde_json/serde_json-1.0.120.crate /
FROM rust-base AS dep-n-serde_json-1.0.120-2a345737f765283a
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-serde_json-1.0.120,source=/serde_json-1.0.120,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120 \
  --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta,source=/libitoa-95ec35c9faa8fa43.rmeta \
  --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
  --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta,source=/libryu-56a874feb6525857.rmeta \
  --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde_json" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120/Cargo.toml" \
        CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A JSON serialization file format" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde_json" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/serde-rs/json" \
        CARGO_PKG_RUST_VERSION="1.56" \
        CARGO_PKG_VERSION="1.0.120" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="120" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/serde_json-9e72609c9dae05e3/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'serde_json' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "arbitrary_precision", "default", "float_roundtrip", "indexmap", "preserve_order", "raw_value", "std", "unbounded_depth"))' '-C' 'metadata=5c5e8e1a9dda7ff4' '-C' 'extra-filename=-2a345737f765283a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'itoa=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta' '--extern' 'ryu=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' '--cfg' 'limb_width_64' '--check-cfg' 'cfg(limb_width_32)' '--check-cfg' 'cfg(limb_width_64)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-errcode
FROM scratch AS out-2a345737f765283a
COPY --from=dep-n-serde_json-1.0.120-2a345737f765283a /tmp/clis-ntpd_1-2-3/release/deps/*-2a345737f765283a* /

## this = "2a345737f765283a"
## deps = [
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/serde_json-2a345737f765283a.d",
##     "deps/libserde_json-2a345737f765283a.rmeta",
##     "deps/libserde_json-2a345737f765283a.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/serde_json-2a345737f765283a.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-95ec35c9faa8fa43"
## xtern = "libitoa-95ec35c9faa8fa43.rmeta"
## 
## [[externs]]
## from = "out-95ec35c9faa8fa43"
## xtern = "libitoa-95ec35c9faa8fa43.rlib"
## 
## [[externs]]
## from = "out-56a874feb6525857"
## xtern = "libryu-56a874feb6525857.rmeta"
## 
## [[externs]]
## from = "out-56a874feb6525857"
## xtern = "libryu-56a874feb6525857.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-serde_json-1.0.120"
## script = '''
## FROM scratch AS cratesio-serde_json-1.0.120
## ADD --chmod=0664 --unpack=true --checksum=sha256:4e0d21c9a8cae1235ad58a00c11cb40d4b1e5c784f1ef2c537876ed6ffd8b7c5 \
##   https://static.crates.io/crates/serde_json/serde_json-1.0.120.crate /'''
## 
## [[stages]]
## name = "dep-n-serde_json-1.0.120-2a345737f765283a"
## script = '''
## FROM rust-base AS dep-n-serde_json-1.0.120-2a345737f765283a
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-serde_json-1.0.120,source=/serde_json-1.0.120,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120 \
##   --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta,source=/libitoa-95ec35c9faa8fa43.rmeta \
##   --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
##   --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta,source=/libryu-56a874feb6525857.rmeta \
##   --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="serde_json" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="A JSON serialization file format" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="serde_json" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/serde-rs/json" \
##         CARGO_PKG_RUST_VERSION="1.56" \
##         CARGO_PKG_VERSION="1.0.120" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="120" \
##         CARGO_PKG_VERSION_PRE= \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/serde_json-9e72609c9dae05e3/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'serde_json' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "arbitrary_precision", "default", "float_roundtrip", "indexmap", "preserve_order", "raw_value", "std", "unbounded_depth"))' '-C' 'metadata=5c5e8e1a9dda7ff4' '-C' 'extra-filename=-2a345737f765283a' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'itoa=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta' '--extern' 'ryu=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' '--cfg' 'limb_width_64' '--check-cfg' 'cfg(limb_width_32)' '--check-cfg' 'cfg(limb_width_64)' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_json-1.0.120/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2a345737f765283a-errcode'''
## 
## [[stages]]
## name = "out-2a345737f765283a"
## script = """
## FROM scratch AS out-2a345737f765283a
## COPY --from=dep-n-serde_json-1.0.120-2a345737f765283a /tmp/clis-ntpd_1-2-3/release/deps/*-2a345737f765283a* /"""

FROM scratch AS cratesio-bytes-1.6.0
ADD --chmod=0664 --unpack=true --checksum=sha256:514de17de45fdb8dc022b1a7975556c53c86f9f0aa5f534b98977b171857c2c9 \
  https://static.crates.io/crates/bytes/bytes-1.6.0.crate /
FROM rust-base AS dep-n-bytes-1.6.0-17cf73a7d3f13d95
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-bytes-1.6.0,source=/bytes-1.6.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bytes" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>" \
        CARGO_PKG_DESCRIPTION="Types and traits for working with bytes" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bytes" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/bytes" \
        CARGO_PKG_RUST_VERSION="1.39" \
        CARGO_PKG_VERSION="1.6.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'bytes' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "std"))' '-C' 'metadata=eefdb7d6e7fd0e6f' '-C' 'extra-filename=-17cf73a7d3f13d95' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-errcode
FROM scratch AS out-17cf73a7d3f13d95
COPY --from=dep-n-bytes-1.6.0-17cf73a7d3f13d95 /tmp/clis-ntpd_1-2-3/release/deps/*-17cf73a7d3f13d95* /

## this = "17cf73a7d3f13d95"
## writes = [
##     "deps/bytes-17cf73a7d3f13d95.d",
##     "deps/libbytes-17cf73a7d3f13d95.rmeta",
##     "deps/libbytes-17cf73a7d3f13d95.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/bytes-17cf73a7d3f13d95.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs","byte_start":36630,"byte_end":36634,"line_start":1321,"line_end":1321,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(all(test, loom))]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs:1321:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(test, loom))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs","byte_start":4906,"byte_end":4910,"line_start":135,"line_end":135,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg(not(all(loom, test)))]","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs:135:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(all(loom, test)))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs","byte_start":5147,"byte_end":5151,"line_start":143,"line_end":143,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    #[cfg(all(loom, test))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs:143:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(all(loom, test))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs","byte_start":5644,"byte_end":5648,"line_start":163,"line_end":163,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"    #[cfg(not(all(loom, test)))]","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs:163:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(not(all(loom, test)))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs","byte_start":5917,"byte_end":5921,"line_start":173,"line_end":173,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    #[cfg(all(loom, test))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes.rs:173:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(all(loom, test))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes_mut.rs","byte_start":52583,"byte_end":52587,"line_start":1774,"line_end":1774,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(all(test, loom))]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/bytes_mut.rs:1774:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1774\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(test, loom))]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/loom.rs","byte_start":20,"byte_end":24,"line_start":1,"line_end":1,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"#[cfg(not(all(test, loom)))]","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/loom.rs:1:21\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(all(test, loom)))]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/loom.rs","byte_start":585,"byte_end":589,"line_start":23,"line_end":23,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(all(test, loom))]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/loom.rs:23:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(test, loom))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"8 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 8 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-bytes-1.6.0"
## script = '''
## FROM scratch AS cratesio-bytes-1.6.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:514de17de45fdb8dc022b1a7975556c53c86f9f0aa5f534b98977b171857c2c9 \
##   https://static.crates.io/crates/bytes/bytes-1.6.0.crate /'''
## 
## [[stages]]
## name = "dep-n-bytes-1.6.0-17cf73a7d3f13d95"
## script = '''
## FROM rust-base AS dep-n-bytes-1.6.0-17cf73a7d3f13d95
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-bytes-1.6.0,source=/bytes-1.6.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="bytes" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>" \
##         CARGO_PKG_DESCRIPTION="Types and traits for working with bytes" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="bytes" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/bytes" \
##         CARGO_PKG_RUST_VERSION="1.39" \
##         CARGO_PKG_VERSION="1.6.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'bytes' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde", "std"))' '-C' 'metadata=eefdb7d6e7fd0e6f' '-C' 'extra-filename=-17cf73a7d3f13d95' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bytes-1.6.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-17cf73a7d3f13d95-errcode'''
## 
## [[stages]]
## name = "out-17cf73a7d3f13d95"
## script = """
## FROM scratch AS out-17cf73a7d3f13d95
## COPY --from=dep-n-bytes-1.6.0-17cf73a7d3f13d95 /tmp/clis-ntpd_1-2-3/release/deps/*-17cf73a7d3f13d95* /"""

FROM scratch AS cratesio-mio-0.8.11
ADD --chmod=0664 --unpack=true --checksum=sha256:a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c \
  https://static.crates.io/crates/mio/mio-0.8.11.crate /
FROM rust-base AS dep-n-mio-0.8.11-57de3125ece5b1fd
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-mio-0.8.11,source=/mio-0.8.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="mio" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>:Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Lightweight non-blocking I/O." \
        CARGO_PKG_HOMEPAGE="https://github.com/tokio-rs/mio" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="mio" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/mio" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.11" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="11" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'mio' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="net"' '--cfg' 'feature="os-ext"' '--cfg' 'feature="os-poll"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "log", "net", "os-ext", "os-poll"))' '-C' 'metadata=4481a9b8971fe568' '-C' 'extra-filename=-57de3125ece5b1fd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-errcode
FROM scratch AS out-57de3125ece5b1fd
COPY --from=dep-n-mio-0.8.11-57de3125ece5b1fd /tmp/clis-ntpd_1-2-3/release/deps/*-57de3125ece5b1fd* /

## this = "57de3125ece5b1fd"
## deps = ["a7905fdc410bdfce"]
## short_externs = ["a7905fdc410bdfce"]
## writes = [
##     "deps/mio-57de3125ece5b1fd.d",
##     "deps/libmio-57de3125ece5b1fd.rmeta",
##     "deps/libmio-57de3125ece5b1fd.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/mio-57de3125ece5b1fd.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs","byte_start":29,"byte_end":60,"line_start":3,"line_end":3,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs","byte_start":17992,"byte_end":18023,"line_start":432,"line_end":432,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs:432:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs","byte_start":28900,"byte_end":28931,"line_start":723,"line_end":723,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs:723:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m723\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs","byte_start":29156,"byte_end":29187,"line_start":735,"line_end":735,"column_start":13,"column_end":44,"is_primary":true,"text":[{"text":"        not(mio_unsupported_force_poll_poll),","highlight_start":13,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/poll.rs:735:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m735\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs","byte_start":3281,"byte_end":3313,"line_start":102,"line_end":102,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"        mio_unsupported_force_waker_pipe,","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs:102:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mio_unsupported_force_waker_pipe,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs","byte_start":944,"byte_end":975,"line_start":38,"line_end":38,"column_start":23,"column_end":54,"is_primary":true,"text":[{"text":"        #[cfg(not(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\")))]","highlight_start":23,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs:38:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs","byte_start":2808,"byte_end":2839,"line_start":91,"line_end":91,"column_start":23,"column_end":54,"is_primary":true,"text":[{"text":"        #[cfg(not(any(mio_unsupported_force_poll_poll, target_os = \"solaris\",target_os = \"vita\")))]","highlight_start":23,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs:91:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(not(any(mio_unsupported_force_poll_poll, target_os = \"solaris\",target_os = \"vita\")))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs","byte_start":2970,"byte_end":3001,"line_start":94,"line_end":94,"column_start":19,"column_end":50,"is_primary":true,"text":[{"text":"        #[cfg(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\"))]","highlight_start":19,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/mod.rs:94:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\"))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":19,"byte_end":50,"line_start":2,"line_end":2,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":223,"byte_end":254,"line_start":13,"line_end":13,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":474,"byte_end":505,"line_start":24,"line_end":24,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    mio_unsupported_force_poll_poll,","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":587,"byte_end":618,"line_start":31,"line_end":31,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    mio_unsupported_force_poll_poll,","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":913,"byte_end":944,"line_start":43,"line_end":43,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":1238,"byte_end":1269,"line_start":58,"line_end":58,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs","byte_start":767,"byte_end":798,"line_start":38,"line_end":38,"column_start":15,"column_end":46,"is_primary":true,"text":[{"text":"    #[cfg(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\"))]","highlight_start":15,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/selector/mod.rs:38:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[cfg(any(mio_unsupported_force_poll_poll, target_os = \"solaris\", target_os = \"vita\"))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":19,"byte_end":50,"line_start":2,"line_end":2,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":78,"byte_end":110,"line_start":4,"line_end":4,"column_start":13,"column_end":45,"is_primary":true,"text":[{"text":"        not(mio_unsupported_force_waker_pipe),","highlight_start":13,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:4:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":1445,"byte_end":1476,"line_start":55,"line_end":55,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_poll_poll),","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:55:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_poll_poll),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":1504,"byte_end":1536,"line_start":57,"line_end":57,"column_start":13,"column_end":45,"is_primary":true,"text":[{"text":"        not(mio_unsupported_force_waker_pipe),","highlight_start":13,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:57:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":1847,"byte_end":1879,"line_start":71,"line_end":71,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_waker_pipe),","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:71:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":4377,"byte_end":4408,"line_start":143,"line_end":143,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    mio_unsupported_force_poll_poll,","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:143:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":4418,"byte_end":4450,"line_start":144,"line_end":144,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_waker_pipe),","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:144:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":4596,"byte_end":4628,"line_start":150,"line_end":150,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_waker_pipe),","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:150:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":5734,"byte_end":5766,"line_start":191,"line_end":191,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"    not(mio_unsupported_force_waker_pipe),","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:191:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":5979,"byte_end":6011,"line_start":203,"line_end":203,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"    mio_unsupported_force_waker_pipe,","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:203:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_waker_pipe,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":8560,"byte_end":8591,"line_start":288,"line_end":288,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"        mio_unsupported_force_poll_poll,","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:288:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":8618,"byte_end":8650,"line_start":290,"line_end":290,"column_start":13,"column_end":45,"is_primary":true,"text":[{"text":"            mio_unsupported_force_waker_pipe,","highlight_start":13,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:290:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            mio_unsupported_force_waker_pipe,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":8987,"byte_end":9018,"line_start":305,"line_end":305,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    mio_unsupported_force_poll_poll,","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:305:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":9595,"byte_end":9626,"line_start":335,"line_end":335,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"    mio_unsupported_force_poll_poll,","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:335:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mio_unsupported_force_poll_poll,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":412,"byte_end":444,"line_start":17,"line_end":17,"column_start":13,"column_end":45,"is_primary":true,"text":[{"text":"        not(mio_unsupported_force_waker_pipe),","highlight_start":13,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:17:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        not(mio_unsupported_force_waker_pipe),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":592,"byte_end":624,"line_start":22,"line_end":22,"column_start":9,"column_end":41,"is_primary":true,"text":[{"text":"        mio_unsupported_force_waker_pipe,","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_waker_pipe`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mio_unsupported_force_waker_pipe,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_waker_pipe)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_waker_pipe)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs","byte_start":3568,"byte_end":3599,"line_start":117,"line_end":117,"column_start":15,"column_end":46,"is_primary":true,"text":[{"text":"        #[cfg(mio_unsupported_force_poll_poll)]","highlight_start":15,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `mio_unsupported_force_poll_poll`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/sys/unix/waker.rs:117:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[cfg(mio_unsupported_force_poll_poll)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(mio_unsupported_force_poll_poll)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(mio_unsupported_force_poll_poll)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"32 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 32 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-mio-0.8.11"
## script = '''
## FROM scratch AS cratesio-mio-0.8.11
## ADD --chmod=0664 --unpack=true --checksum=sha256:a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c \
##   https://static.crates.io/crates/mio/mio-0.8.11.crate /'''
## 
## [[stages]]
## name = "dep-n-mio-0.8.11-57de3125ece5b1fd"
## script = '''
## FROM rust-base AS dep-n-mio-0.8.11-57de3125ece5b1fd
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-mio-0.8.11,source=/mio-0.8.11,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="mio" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>:Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="Lightweight non-blocking I/O." \
##         CARGO_PKG_HOMEPAGE="https://github.com/tokio-rs/mio" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="mio" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/mio" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.8.11" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="8" \
##         CARGO_PKG_VERSION_PATCH="11" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'mio' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="net"' '--cfg' 'feature="os-ext"' '--cfg' 'feature="os-poll"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "log", "net", "os-ext", "os-poll"))' '-C' 'metadata=4481a9b8971fe568' '-C' 'extra-filename=-57de3125ece5b1fd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/mio-0.8.11/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-57de3125ece5b1fd-errcode'''
## 
## [[stages]]
## name = "out-57de3125ece5b1fd"
## script = """
## FROM scratch AS out-57de3125ece5b1fd
## COPY --from=dep-n-mio-0.8.11-57de3125ece5b1fd /tmp/clis-ntpd_1-2-3/release/deps/*-57de3125ece5b1fd* /"""

FROM scratch AS cratesio-num_cpus-1.16.0
ADD --chmod=0664 --unpack=true --checksum=sha256:4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43 \
  https://static.crates.io/crates/num_cpus/num_cpus-1.16.0.crate /
FROM rust-base AS dep-n-num_cpus-1.16.0-516d6049f106f6a2
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-num_cpus-1.16.0,source=/num_cpus-1.16.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="num_cpus" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Sean McArthur <sean@seanmonstar.com>" \
        CARGO_PKG_DESCRIPTION="Get the number of CPUs on a machine." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="num_cpus" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/seanmonstar/num_cpus" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.16.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="16" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'num_cpus' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=9343f2e59e30aaf3' '-C' 'extra-filename=-516d6049f106f6a2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-errcode
FROM scratch AS out-516d6049f106f6a2
COPY --from=dep-n-num_cpus-1.16.0-516d6049f106f6a2 /tmp/clis-ntpd_1-2-3/release/deps/*-516d6049f106f6a2* /

## this = "516d6049f106f6a2"
## deps = ["a7905fdc410bdfce"]
## short_externs = ["a7905fdc410bdfce"]
## writes = [
##     "deps/num_cpus-516d6049f106f6a2.d",
##     "deps/libnum_cpus-516d6049f106f6a2.rmeta",
##     "deps/libnum_cpus-516d6049f106f6a2.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/num_cpus-516d6049f106f6a2.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `nacl`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs","byte_start":9940,"byte_end":9958,"line_start":355,"line_end":355,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    target_os = \"nacl\",","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `nacl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs:355:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    target_os = \"nacl\",\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `nacl`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs","byte_start":12204,"byte_end":12222,"line_start":437,"line_end":437,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    target_os = \"nacl\",","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `nacl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs:437:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    target_os = \"nacl\",\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, and `unknown` and 8 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-num_cpus-1.16.0"
## script = '''
## FROM scratch AS cratesio-num_cpus-1.16.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43 \
##   https://static.crates.io/crates/num_cpus/num_cpus-1.16.0.crate /'''
## 
## [[stages]]
## name = "dep-n-num_cpus-1.16.0-516d6049f106f6a2"
## script = '''
## FROM rust-base AS dep-n-num_cpus-1.16.0-516d6049f106f6a2
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-num_cpus-1.16.0,source=/num_cpus-1.16.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="num_cpus" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Sean McArthur <sean@seanmonstar.com>" \
##         CARGO_PKG_DESCRIPTION="Get the number of CPUs on a machine." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="num_cpus" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/seanmonstar/num_cpus" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="1.16.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="16" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'num_cpus' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=9343f2e59e30aaf3' '-C' 'extra-filename=-516d6049f106f6a2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/num_cpus-1.16.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-516d6049f106f6a2-errcode'''
## 
## [[stages]]
## name = "out-516d6049f106f6a2"
## script = """
## FROM scratch AS out-516d6049f106f6a2
## COPY --from=dep-n-num_cpus-1.16.0-516d6049f106f6a2 /tmp/clis-ntpd_1-2-3/release/deps/*-516d6049f106f6a2* /"""

FROM scratch AS cratesio-socket2-0.5.7
ADD --chmod=0664 --unpack=true --checksum=sha256:ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c \
  https://static.crates.io/crates/socket2/socket2-0.5.7.crate /
FROM rust-base AS dep-n-socket2-0.5.7-4f06700ac893bf17
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-socket2-0.5.7,source=/socket2-0.5.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="socket2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Utilities for handling networking sockets with a maximal amount of configuration\npossible intended.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/socket2" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="socket2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/socket2" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="0.5.7" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'socket2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="all"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("all"))' '-C' 'metadata=f9cf30be7cc8aee9' '-C' 'extra-filename=-4f06700ac893bf17' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-errcode
FROM scratch AS out-4f06700ac893bf17
COPY --from=dep-n-socket2-0.5.7-4f06700ac893bf17 /tmp/clis-ntpd_1-2-3/release/deps/*-4f06700ac893bf17* /

## this = "4f06700ac893bf17"
## deps = ["a7905fdc410bdfce"]
## short_externs = ["a7905fdc410bdfce"]
## writes = [
##     "deps/socket2-4f06700ac893bf17.d",
##     "deps/libsocket2-4f06700ac893bf17.rmeta",
##     "deps/libsocket2-4f06700ac893bf17.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/socket2-4f06700ac893bf17.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-socket2-0.5.7"
## script = '''
## FROM scratch AS cratesio-socket2-0.5.7
## ADD --chmod=0664 --unpack=true --checksum=sha256:ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c \
##   https://static.crates.io/crates/socket2/socket2-0.5.7.crate /'''
## 
## [[stages]]
## name = "dep-n-socket2-0.5.7-4f06700ac893bf17"
## script = '''
## FROM rust-base AS dep-n-socket2-0.5.7-4f06700ac893bf17
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-socket2-0.5.7,source=/socket2-0.5.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="socket2" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Utilities for handling networking sockets with a maximal amount of configuration\npossible intended.\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/socket2" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="socket2" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-lang/socket2" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="0.5.7" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="5" \
##         CARGO_PKG_VERSION_PATCH="7" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'socket2' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="all"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("all"))' '-C' 'metadata=f9cf30be7cc8aee9' '-C' 'extra-filename=-4f06700ac893bf17' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socket2-0.5.7/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-4f06700ac893bf17-errcode'''
## 
## [[stages]]
## name = "out-4f06700ac893bf17"
## script = """
## FROM scratch AS out-4f06700ac893bf17
## COPY --from=dep-n-socket2-0.5.7-4f06700ac893bf17 /tmp/clis-ntpd_1-2-3/release/deps/*-4f06700ac893bf17* /"""

FROM scratch AS cratesio-tokio-macros-2.3.0
ADD --chmod=0664 --unpack=true --checksum=sha256:5f5ae998a069d4b5aba8ee9dad856af7d520c3699e6159b185c2acd48155d39a \
  https://static.crates.io/crates/tokio-macros/tokio-macros-2.3.0.crate /
FROM rust-base AS dep-n-tokio-macros-2.3.0-56d9f1f76b7466fe
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tokio-macros-2.3.0,source=/tokio-macros-2.3.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0 \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tokio_macros" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Tokio's proc macros.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tokio-macros" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="2.3.0" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tokio_macros' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=53658764caaf4b55' '-C' 'extra-filename=-56d9f1f76b7466fe' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-errcode
FROM scratch AS out-56d9f1f76b7466fe
COPY --from=dep-n-tokio-macros-2.3.0-56d9f1f76b7466fe /tmp/clis-ntpd_1-2-3/release/deps/*-56d9f1f76b7466fe* /

## this = "56d9f1f76b7466fe"
## deps = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/tokio_macros-56d9f1f76b7466fe.d",
##     "deps/libtokio_macros-56d9f1f76b7466fe.so",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tokio_macros-56d9f1f76b7466fe.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tokio-macros-2.3.0"
## script = '''
## FROM scratch AS cratesio-tokio-macros-2.3.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:5f5ae998a069d4b5aba8ee9dad856af7d520c3699e6159b185c2acd48155d39a \
##   https://static.crates.io/crates/tokio-macros/tokio-macros-2.3.0.crate /'''
## 
## [[stages]]
## name = "dep-n-tokio-macros-2.3.0-56d9f1f76b7466fe"
## script = '''
## FROM rust-base AS dep-n-tokio-macros-2.3.0-56d9f1f76b7466fe
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tokio-macros-2.3.0,source=/tokio-macros-2.3.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0 \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tokio_macros" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="Tokio's proc macros.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tokio-macros" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="2.3.0" \
##         CARGO_PKG_VERSION_MAJOR="2" \
##         CARGO_PKG_VERSION_MINOR="3" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tokio_macros' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=53658764caaf4b55' '-C' 'extra-filename=-56d9f1f76b7466fe' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'proc_macro2=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib' '--extern' 'quote=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib' '--extern' 'syn=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-macros-2.3.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-56d9f1f76b7466fe-errcode'''
## 
## [[stages]]
## name = "out-56d9f1f76b7466fe"
## script = """
## FROM scratch AS out-56d9f1f76b7466fe
## COPY --from=dep-n-tokio-macros-2.3.0-56d9f1f76b7466fe /tmp/clis-ntpd_1-2-3/release/deps/*-56d9f1f76b7466fe* /"""

FROM scratch AS cratesio-tokio-1.38.1
ADD --chmod=0664 --unpack=true --checksum=sha256:eb2caba9f80616f438e09748d5acda951967e1ea58508ef53d9c6402485a46df \
  https://static.crates.io/crates/tokio/tokio-1.38.1.crate /
FROM rust-base AS dep-n-tokio-1.38.1-e6ed429a0a7450c0
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tokio-1.38.1,source=/tokio-1.38.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1 \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
  --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tokio" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="An event-driven, non-blocking I/O platform for writing asynchronous I/O\nbacked applications.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tokio" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="1.38.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="38" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tokio' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="bytes"' '--cfg' 'feature="default"' '--cfg' 'feature="fs"' '--cfg' 'feature="io-std"' '--cfg' 'feature="io-util"' '--cfg' 'feature="libc"' '--cfg' 'feature="macros"' '--cfg' 'feature="mio"' '--cfg' 'feature="net"' '--cfg' 'feature="num_cpus"' '--cfg' 'feature="rt"' '--cfg' 'feature="rt-multi-thread"' '--cfg' 'feature="socket2"' '--cfg' 'feature="sync"' '--cfg' 'feature="time"' '--cfg' 'feature="tokio-macros"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bytes", "default", "fs", "full", "io-std", "io-util", "libc", "macros", "mio", "net", "num_cpus", "parking_lot", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "test-util", "time", "tokio-macros", "tracing", "windows-sys"))' '-C' 'metadata=24e72a8c8e4c2f2f' '-C' 'extra-filename=-e6ed429a0a7450c0' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'bytes=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'mio=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta' '--extern' 'num_cpus=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta' '--extern' 'pin_project_lite=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta' '--extern' 'socket2=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta' '--extern' 'tokio_macros=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-errcode
FROM scratch AS out-e6ed429a0a7450c0
COPY --from=dep-n-tokio-1.38.1-e6ed429a0a7450c0 /tmp/clis-ntpd_1-2-3/release/deps/*-e6ed429a0a7450c0* /

## this = "e6ed429a0a7450c0"
## deps = [
##     "17cf73a7d3f13d95",
##     "a7905fdc410bdfce",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "32982cb980ef9328",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "17cf73a7d3f13d95",
##     "a7905fdc410bdfce",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "32982cb980ef9328",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/tokio-e6ed429a0a7450c0.d",
##     "deps/libtokio-e6ed429a0a7450c0.rmeta",
##     "deps/libtokio-e6ed429a0a7450c0.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tokio-e6ed429a0a7450c0.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rmeta"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rmeta"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rlib"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rmeta"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rmeta"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rmeta"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rlib"
## 
## [[externs]]
## from = "out-56d9f1f76b7466fe"
## xtern = "libtokio_macros-56d9f1f76b7466fe.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tokio-1.38.1"
## script = '''
## FROM scratch AS cratesio-tokio-1.38.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:eb2caba9f80616f438e09748d5acda951967e1ea58508ef53d9c6402485a46df \
##   https://static.crates.io/crates/tokio/tokio-1.38.1.crate /'''
## 
## [[stages]]
## name = "dep-n-tokio-1.38.1-e6ed429a0a7450c0"
## script = '''
## FROM rust-base AS dep-n-tokio-1.38.1-e6ed429a0a7450c0
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tokio-1.38.1,source=/tokio-1.38.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1 \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
##   --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tokio" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="An event-driven, non-blocking I/O platform for writing asynchronous I/O\nbacked applications.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tokio" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tokio" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="1.38.1" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="38" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tokio' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="bytes"' '--cfg' 'feature="default"' '--cfg' 'feature="fs"' '--cfg' 'feature="io-std"' '--cfg' 'feature="io-util"' '--cfg' 'feature="libc"' '--cfg' 'feature="macros"' '--cfg' 'feature="mio"' '--cfg' 'feature="net"' '--cfg' 'feature="num_cpus"' '--cfg' 'feature="rt"' '--cfg' 'feature="rt-multi-thread"' '--cfg' 'feature="socket2"' '--cfg' 'feature="sync"' '--cfg' 'feature="time"' '--cfg' 'feature="tokio-macros"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bytes", "default", "fs", "full", "io-std", "io-util", "libc", "macros", "mio", "net", "num_cpus", "parking_lot", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "test-util", "time", "tokio-macros", "tracing", "windows-sys"))' '-C' 'metadata=24e72a8c8e4c2f2f' '-C' 'extra-filename=-e6ed429a0a7450c0' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'bytes=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'mio=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta' '--extern' 'num_cpus=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta' '--extern' 'pin_project_lite=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta' '--extern' 'socket2=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta' '--extern' 'tokio_macros=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tokio-1.38.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-e6ed429a0a7450c0-errcode'''
## 
## [[stages]]
## name = "out-e6ed429a0a7450c0"
## script = """
## FROM scratch AS out-e6ed429a0a7450c0
## COPY --from=dep-n-tokio-1.38.1-e6ed429a0a7450c0 /tmp/clis-ntpd_1-2-3/release/deps/*-e6ed429a0a7450c0* /"""

FROM scratch AS cratesio-timestamped-socket-0.2.2
ADD --chmod=0664 --unpack=true --checksum=sha256:97fb9c05205fbac74629b661a8fb356882d7e540fbc66511b12d569701f241b1 \
  https://static.crates.io/crates/timestamped-socket/timestamped-socket-0.2.2.crate /
FROM rust-base AS dep-n-timestamped-socket-0.2.2-2f59881207cd7c68
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-timestamped-socket-0.2.2,source=/timestamped-socket-0.2.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2 \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta,source=/libtokio-e6ed429a0a7450c0.rmeta \
  --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
  --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="timestamped_socket" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Implementation of async UDP and raw ethernet sockets with timestamping" \
        CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/timestamped-socket" \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="timestamped-socket" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/timestamped-socket" \
        CARGO_PKG_RUST_VERSION="1.66" \
        CARGO_PKG_VERSION="0.2.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'timestamped_socket' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde"))' '-C' 'metadata=e415123c57a7dbdb' '-C' 'extra-filename=-2f59881207cd7c68' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-errcode
FROM scratch AS out-2f59881207cd7c68
COPY --from=dep-n-timestamped-socket-0.2.2-2f59881207cd7c68 /tmp/clis-ntpd_1-2-3/release/deps/*-2f59881207cd7c68* /

## this = "2f59881207cd7c68"
## deps = [
##     "a7905fdc410bdfce",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "32982cb980ef9328",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7d2675bffdb63c95",
##     "b564a3159bfcf688",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "6ed51fafe322ecba",
## ]
## short_externs = [
##     "a7905fdc410bdfce",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "32982cb980ef9328",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7d2675bffdb63c95",
##     "b564a3159bfcf688",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "6ed51fafe322ecba",
## ]
## writes = [
##     "deps/timestamped_socket-2f59881207cd7c68.d",
##     "deps/libtimestamped_socket-2f59881207cd7c68.rmeta",
##     "deps/libtimestamped_socket-2f59881207cd7c68.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/timestamped_socket-2f59881207cd7c68.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-e6ed429a0a7450c0"
## xtern = "libtokio-e6ed429a0a7450c0.rmeta"
## 
## [[externs]]
## from = "out-e6ed429a0a7450c0"
## xtern = "libtokio-e6ed429a0a7450c0.rlib"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rmeta"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rlib"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rmeta"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rlib"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rmeta"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rmeta"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rmeta"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rlib"
## 
## [[externs]]
## from = "out-56d9f1f76b7466fe"
## xtern = "libtokio_macros-56d9f1f76b7466fe.so"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rmeta"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rlib"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rmeta"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-ff2e92028461b3cf"
## xtern = "libtracing_attributes-ff2e92028461b3cf.so"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rmeta"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-timestamped-socket-0.2.2"
## script = '''
## FROM scratch AS cratesio-timestamped-socket-0.2.2
## ADD --chmod=0664 --unpack=true --checksum=sha256:97fb9c05205fbac74629b661a8fb356882d7e540fbc66511b12d569701f241b1 \
##   https://static.crates.io/crates/timestamped-socket/timestamped-socket-0.2.2.crate /'''
## 
## [[stages]]
## name = "dep-n-timestamped-socket-0.2.2-2f59881207cd7c68"
## script = '''
## FROM rust-base AS dep-n-timestamped-socket-0.2.2-2f59881207cd7c68
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-timestamped-socket-0.2.2,source=/timestamped-socket-0.2.2,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2 \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta,source=/libtokio-e6ed429a0a7450c0.rmeta \
##   --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
##   --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="timestamped_socket" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Implementation of async UDP and raw ethernet sockets with timestamping" \
##         CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/timestamped-socket" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="timestamped-socket" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/timestamped-socket" \
##         CARGO_PKG_RUST_VERSION="1.66" \
##         CARGO_PKG_VERSION="0.2.2" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="2" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'timestamped_socket' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "serde"))' '-C' 'metadata=e415123c57a7dbdb' '-C' 'extra-filename=-2f59881207cd7c68' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/timestamped-socket-0.2.2/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-2f59881207cd7c68-errcode'''
## 
## [[stages]]
## name = "out-2f59881207cd7c68"
## script = """
## FROM scratch AS out-2f59881207cd7c68
## COPY --from=dep-n-timestamped-socket-0.2.2-2f59881207cd7c68 /tmp/clis-ntpd_1-2-3/release/deps/*-2f59881207cd7c68* /"""

FROM scratch AS cratesio-serde_spanned-0.6.6
ADD --chmod=0664 --unpack=true --checksum=sha256:79e674e01f999af37c49f70a6ede167a8a60b2503e56c5599532a65baa5969a0 \
  https://static.crates.io/crates/serde_spanned/serde_spanned-0.6.6.crate /
FROM rust-base AS dep-n-serde_spanned-0.6.6-dc39aa05fabf8bb2
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-serde_spanned-0.6.6,source=/serde_spanned-0.6.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6 \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="serde_spanned" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Serde-compatible spanned Value" \
        CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="serde_spanned" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.6.6" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="6" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'serde_spanned' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde"))' '-C' 'metadata=0805a12f69e48c18' '-C' 'extra-filename=-dc39aa05fabf8bb2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-errcode
FROM scratch AS out-dc39aa05fabf8bb2
COPY --from=dep-n-serde_spanned-0.6.6-dc39aa05fabf8bb2 /tmp/clis-ntpd_1-2-3/release/deps/*-dc39aa05fabf8bb2* /

## this = "dc39aa05fabf8bb2"
## deps = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/serde_spanned-dc39aa05fabf8bb2.d",
##     "deps/libserde_spanned-dc39aa05fabf8bb2.rmeta",
##     "deps/libserde_spanned-dc39aa05fabf8bb2.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/serde_spanned-dc39aa05fabf8bb2.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-serde_spanned-0.6.6"
## script = '''
## FROM scratch AS cratesio-serde_spanned-0.6.6
## ADD --chmod=0664 --unpack=true --checksum=sha256:79e674e01f999af37c49f70a6ede167a8a60b2503e56c5599532a65baa5969a0 \
##   https://static.crates.io/crates/serde_spanned/serde_spanned-0.6.6.crate /'''
## 
## [[stages]]
## name = "dep-n-serde_spanned-0.6.6-dc39aa05fabf8bb2"
## script = '''
## FROM rust-base AS dep-n-serde_spanned-0.6.6-dc39aa05fabf8bb2
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-serde_spanned-0.6.6,source=/serde_spanned-0.6.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6 \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="serde_spanned" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Serde-compatible spanned Value" \
##         CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="serde_spanned" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
##         CARGO_PKG_RUST_VERSION="1.65" \
##         CARGO_PKG_VERSION="0.6.6" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="6" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'serde_spanned' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde"))' '-C' 'metadata=0805a12f69e48c18' '-C' 'extra-filename=-dc39aa05fabf8bb2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/serde_spanned-0.6.6/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-dc39aa05fabf8bb2-errcode'''
## 
## [[stages]]
## name = "out-dc39aa05fabf8bb2"
## script = """
## FROM scratch AS out-dc39aa05fabf8bb2
## COPY --from=dep-n-serde_spanned-0.6.6-dc39aa05fabf8bb2 /tmp/clis-ntpd_1-2-3/release/deps/*-dc39aa05fabf8bb2* /"""

FROM scratch AS cratesio-toml_datetime-0.6.6
ADD --chmod=0664 --unpack=true --checksum=sha256:4badfd56924ae69bcc9039335b2e017639ce3f9b001c393c1b2d1ef846ce2cbf \
  https://static.crates.io/crates/toml_datetime/toml_datetime-0.6.6.crate /
FROM rust-base AS dep-n-toml_datetime-0.6.6-f1d69a8e9c76a596
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-toml_datetime-0.6.6,source=/toml_datetime-0.6.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6 \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="toml_datetime" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A TOML-compatible datetime type" \
        CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="toml_datetime" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.6.6" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="6" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'toml_datetime' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde"))' '-C' 'metadata=1a18b6c1b16f8abd' '-C' 'extra-filename=-f1d69a8e9c76a596' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-errcode
FROM scratch AS out-f1d69a8e9c76a596
COPY --from=dep-n-toml_datetime-0.6.6-f1d69a8e9c76a596 /tmp/clis-ntpd_1-2-3/release/deps/*-f1d69a8e9c76a596* /

## this = "f1d69a8e9c76a596"
## deps = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## short_externs = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
## ]
## writes = [
##     "deps/toml_datetime-f1d69a8e9c76a596.d",
##     "deps/libtoml_datetime-f1d69a8e9c76a596.rmeta",
##     "deps/libtoml_datetime-f1d69a8e9c76a596.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/toml_datetime-f1d69a8e9c76a596.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-toml_datetime-0.6.6"
## script = '''
## FROM scratch AS cratesio-toml_datetime-0.6.6
## ADD --chmod=0664 --unpack=true --checksum=sha256:4badfd56924ae69bcc9039335b2e017639ce3f9b001c393c1b2d1ef846ce2cbf \
##   https://static.crates.io/crates/toml_datetime/toml_datetime-0.6.6.crate /'''
## 
## [[stages]]
## name = "dep-n-toml_datetime-0.6.6-f1d69a8e9c76a596"
## script = '''
## FROM rust-base AS dep-n-toml_datetime-0.6.6-f1d69a8e9c76a596
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-toml_datetime-0.6.6,source=/toml_datetime-0.6.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6 \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="toml_datetime" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
##         CARGO_PKG_DESCRIPTION="A TOML-compatible datetime type" \
##         CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="toml_datetime" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
##         CARGO_PKG_RUST_VERSION="1.65" \
##         CARGO_PKG_VERSION="0.6.6" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="6" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'toml_datetime' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde"))' '-C' 'metadata=1a18b6c1b16f8abd' '-C' 'extra-filename=-f1d69a8e9c76a596' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_datetime-0.6.6/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f1d69a8e9c76a596-errcode'''
## 
## [[stages]]
## name = "out-f1d69a8e9c76a596"
## script = """
## FROM scratch AS out-f1d69a8e9c76a596
## COPY --from=dep-n-toml_datetime-0.6.6-f1d69a8e9c76a596 /tmp/clis-ntpd_1-2-3/release/deps/*-f1d69a8e9c76a596* /"""

FROM scratch AS cratesio-equivalent-1.0.1
ADD --chmod=0664 --unpack=true --checksum=sha256:5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5 \
  https://static.crates.io/crates/equivalent/equivalent-1.0.1.crate /
FROM rust-base AS dep-n-equivalent-1.0.1-bd5b9404126e35a1
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-equivalent-1.0.1,source=/equivalent-1.0.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="equivalent" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Traits for key comparison in maps." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="equivalent" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/cuviper/equivalent" \
        CARGO_PKG_RUST_VERSION="1.6" \
        CARGO_PKG_VERSION="1.0.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'equivalent' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=fba4660c1979297c' '-C' 'extra-filename=-bd5b9404126e35a1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-errcode
FROM scratch AS out-bd5b9404126e35a1
COPY --from=dep-n-equivalent-1.0.1-bd5b9404126e35a1 /tmp/clis-ntpd_1-2-3/release/deps/*-bd5b9404126e35a1* /

## this = "bd5b9404126e35a1"
## writes = [
##     "deps/equivalent-bd5b9404126e35a1.d",
##     "deps/libequivalent-bd5b9404126e35a1.rmeta",
##     "deps/libequivalent-bd5b9404126e35a1.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/equivalent-bd5b9404126e35a1.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-equivalent-1.0.1"
## script = '''
## FROM scratch AS cratesio-equivalent-1.0.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5 \
##   https://static.crates.io/crates/equivalent/equivalent-1.0.1.crate /'''
## 
## [[stages]]
## name = "dep-n-equivalent-1.0.1-bd5b9404126e35a1"
## script = '''
## FROM rust-base AS dep-n-equivalent-1.0.1-bd5b9404126e35a1
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-equivalent-1.0.1,source=/equivalent-1.0.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="equivalent" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Traits for key comparison in maps." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="equivalent" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/cuviper/equivalent" \
##         CARGO_PKG_RUST_VERSION="1.6" \
##         CARGO_PKG_VERSION="1.0.1" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="0" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'equivalent' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=fba4660c1979297c' '-C' 'extra-filename=-bd5b9404126e35a1' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/equivalent-1.0.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bd5b9404126e35a1-errcode'''
## 
## [[stages]]
## name = "out-bd5b9404126e35a1"
## script = """
## FROM scratch AS out-bd5b9404126e35a1
## COPY --from=dep-n-equivalent-1.0.1-bd5b9404126e35a1 /tmp/clis-ntpd_1-2-3/release/deps/*-bd5b9404126e35a1* /"""

FROM scratch AS cratesio-hashbrown-0.14.5
ADD --chmod=0664 --unpack=true --checksum=sha256:e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1 \
  https://static.crates.io/crates/hashbrown/hashbrown-0.14.5.crate /
FROM rust-base AS dep-n-hashbrown-0.14.5-8bb46fd37d0b1c2d
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-hashbrown-0.14.5,source=/hashbrown-0.14.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="hashbrown" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A Rust port of Google's SwissTable hash map" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="hashbrown" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/hashbrown" \
        CARGO_PKG_RUST_VERSION="1.63.0" \
        CARGO_PKG_VERSION="0.14.5" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="14" \
        CARGO_PKG_VERSION_PATCH="5" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'hashbrown' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="raw"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("ahash", "alloc", "allocator-api2", "compiler_builtins", "core", "default", "equivalent", "inline-more", "nightly", "raw", "rayon", "rkyv", "rustc-dep-of-std", "rustc-internal-api", "serde"))' '-C' 'metadata=01ffcb5aa3c3b771' '-C' 'extra-filename=-8bb46fd37d0b1c2d' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-errcode
FROM scratch AS out-8bb46fd37d0b1c2d
COPY --from=dep-n-hashbrown-0.14.5-8bb46fd37d0b1c2d /tmp/clis-ntpd_1-2-3/release/deps/*-8bb46fd37d0b1c2d* /

## this = "8bb46fd37d0b1c2d"
## writes = [
##     "deps/hashbrown-8bb46fd37d0b1c2d.d",
##     "deps/libhashbrown-8bb46fd37d0b1c2d.rmeta",
##     "deps/libhashbrown-8bb46fd37d0b1c2d.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/hashbrown-8bb46fd37d0b1c2d.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-hashbrown-0.14.5"
## script = '''
## FROM scratch AS cratesio-hashbrown-0.14.5
## ADD --chmod=0664 --unpack=true --checksum=sha256:e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1 \
##   https://static.crates.io/crates/hashbrown/hashbrown-0.14.5.crate /'''
## 
## [[stages]]
## name = "dep-n-hashbrown-0.14.5-8bb46fd37d0b1c2d"
## script = '''
## FROM rust-base AS dep-n-hashbrown-0.14.5-8bb46fd37d0b1c2d
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-hashbrown-0.14.5,source=/hashbrown-0.14.5,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="hashbrown" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="A Rust port of Google's SwissTable hash map" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="hashbrown" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-lang/hashbrown" \
##         CARGO_PKG_RUST_VERSION="1.63.0" \
##         CARGO_PKG_VERSION="0.14.5" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="14" \
##         CARGO_PKG_VERSION_PATCH="5" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'hashbrown' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="raw"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("ahash", "alloc", "allocator-api2", "compiler_builtins", "core", "default", "equivalent", "inline-more", "nightly", "raw", "rayon", "rkyv", "rustc-dep-of-std", "rustc-internal-api", "serde"))' '-C' 'metadata=01ffcb5aa3c3b771' '-C' 'extra-filename=-8bb46fd37d0b1c2d' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hashbrown-0.14.5/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-8bb46fd37d0b1c2d-errcode'''
## 
## [[stages]]
## name = "out-8bb46fd37d0b1c2d"
## script = """
## FROM scratch AS out-8bb46fd37d0b1c2d
## COPY --from=dep-n-hashbrown-0.14.5-8bb46fd37d0b1c2d /tmp/clis-ntpd_1-2-3/release/deps/*-8bb46fd37d0b1c2d* /"""

FROM scratch AS cratesio-indexmap-2.2.6
ADD --chmod=0664 --unpack=true --checksum=sha256:168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26 \
  https://static.crates.io/crates/indexmap/indexmap-2.2.6.crate /
FROM rust-base AS dep-n-indexmap-2.2.6-bd5f37b7de678bd9
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-indexmap-2.2.6,source=/indexmap-2.2.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6 \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="indexmap" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A hash table with consistent order and fast iteration." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="indexmap" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/indexmap-rs/indexmap" \
        CARGO_PKG_RUST_VERSION="1.63" \
        CARGO_PKG_VERSION="2.2.6" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="6" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'indexmap' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--allow' 'clippy::style' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arbitrary", "borsh", "default", "quickcheck", "rayon", "rustc-rayon", "serde", "std", "test_debug"))' '-C' 'metadata=ba3428f64f949e8b' '-C' 'extra-filename=-bd5f37b7de678bd9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'equivalent=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta' '--extern' 'hashbrown=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-errcode
FROM scratch AS out-bd5f37b7de678bd9
COPY --from=dep-n-indexmap-2.2.6-bd5f37b7de678bd9 /tmp/clis-ntpd_1-2-3/release/deps/*-bd5f37b7de678bd9* /

## this = "bd5f37b7de678bd9"
## deps = [
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
## ]
## short_externs = [
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
## ]
## writes = [
##     "deps/indexmap-bd5f37b7de678bd9.d",
##     "deps/libindexmap-bd5f37b7de678bd9.rmeta",
##     "deps/libindexmap-bd5f37b7de678bd9.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/indexmap-bd5f37b7de678bd9.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rmeta"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rlib"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rmeta"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-indexmap-2.2.6"
## script = '''
## FROM scratch AS cratesio-indexmap-2.2.6
## ADD --chmod=0664 --unpack=true --checksum=sha256:168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26 \
##   https://static.crates.io/crates/indexmap/indexmap-2.2.6.crate /'''
## 
## [[stages]]
## name = "dep-n-indexmap-2.2.6-bd5f37b7de678bd9"
## script = '''
## FROM rust-base AS dep-n-indexmap-2.2.6-bd5f37b7de678bd9
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-indexmap-2.2.6,source=/indexmap-2.2.6,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6 \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="indexmap" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="A hash table with consistent order and fast iteration." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="indexmap" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/indexmap-rs/indexmap" \
##         CARGO_PKG_RUST_VERSION="1.63" \
##         CARGO_PKG_VERSION="2.2.6" \
##         CARGO_PKG_VERSION_MAJOR="2" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="6" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'indexmap' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--allow' 'clippy::style' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("arbitrary", "borsh", "default", "quickcheck", "rayon", "rustc-rayon", "serde", "std", "test_debug"))' '-C' 'metadata=ba3428f64f949e8b' '-C' 'extra-filename=-bd5f37b7de678bd9' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'equivalent=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta' '--extern' 'hashbrown=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/indexmap-2.2.6/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-bd5f37b7de678bd9-errcode'''
## 
## [[stages]]
## name = "out-bd5f37b7de678bd9"
## script = """
## FROM scratch AS out-bd5f37b7de678bd9
## COPY --from=dep-n-indexmap-2.2.6-bd5f37b7de678bd9 /tmp/clis-ntpd_1-2-3/release/deps/*-bd5f37b7de678bd9* /"""

FROM scratch AS cratesio-winnow-0.6.13
ADD --chmod=0664 --unpack=true --checksum=sha256:59b5e5f6c299a3c7890b876a2a587f3115162487e704907d9b6cd29473052ba1 \
  https://static.crates.io/crates/winnow/winnow-0.6.13.crate /
FROM rust-base AS dep-n-winnow-0.6.13-f45e6953436548b2
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-winnow-0.6.13,source=/winnow-0.6.13,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="winnow" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="A byte-oriented, zero-copy, parser combinators library" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="winnow" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/winnow-rs/winnow" \
        CARGO_PKG_RUST_VERSION="1.65.0" \
        CARGO_PKG_VERSION="0.6.13" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="13" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'winnow' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--allow' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--allow' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "debug", "default", "simd", "std", "unstable-doc", "unstable-recover"))' '-C' 'metadata=39d8324d856151ee' '-C' 'extra-filename=-f45e6953436548b2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-errcode
FROM scratch AS out-f45e6953436548b2
COPY --from=dep-n-winnow-0.6.13-f45e6953436548b2 /tmp/clis-ntpd_1-2-3/release/deps/*-f45e6953436548b2* /

## this = "f45e6953436548b2"
## writes = [
##     "deps/winnow-f45e6953436548b2.d",
##     "deps/libwinnow-f45e6953436548b2.rmeta",
##     "deps/libwinnow-f45e6953436548b2.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/winnow-f45e6953436548b2.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/error.rs","byte_start":2471,"byte_end":2478,"line_start":63,"line_end":63,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/error.rs:63:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/error.rs","byte_start":3480,"byte_end":3487,"line_start":97,"line_end":97,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/error.rs:97:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/multi.rs","byte_start":4289,"byte_end":4296,"line_start":130,"line_end":130,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/multi.rs:130:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":590,"byte_end":597,"line_start":18,"line_end":18,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":1066,"byte_end":1073,"line_start":41,"line_end":41,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:41:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":2155,"byte_end":2162,"line_start":88,"line_end":88,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:88:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":3716,"byte_end":3723,"line_start":147,"line_end":147,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:147:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":5138,"byte_end":5145,"line_start":204,"line_end":204,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:204:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":6501,"byte_end":6508,"line_start":261,"line_end":261,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:261:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":7848,"byte_end":7855,"line_start":316,"line_end":316,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:316:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":9051,"byte_end":9058,"line_start":366,"line_end":366,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:366:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":9839,"byte_end":9846,"line_start":399,"line_end":399,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:399:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":11374,"byte_end":11381,"line_start":462,"line_end":462,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:462:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m462\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":12311,"byte_end":12318,"line_start":504,"line_end":504,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:504:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":13344,"byte_end":13351,"line_start":546,"line_end":546,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:546:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":14164,"byte_end":14171,"line_start":583,"line_end":583,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:583:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":15389,"byte_end":15396,"line_start":632,"line_end":632,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:632:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":16643,"byte_end":16650,"line_start":681,"line_end":681,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:681:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m681\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":17666,"byte_end":17673,"line_start":725,"line_end":725,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:725:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m725\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":18730,"byte_end":18737,"line_start":769,"line_end":769,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:769:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m769\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":19701,"byte_end":19708,"line_start":811,"line_end":811,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:811:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":20906,"byte_end":20913,"line_start":858,"line_end":858,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:858:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `nightly`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs","byte_start":22307,"byte_end":22314,"line_start":913,"line_end":913,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]","highlight_start":12,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `nightly`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/combinator/parser.rs:913:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(nightly)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(nightly)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"23 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 23 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-winnow-0.6.13"
## script = '''
## FROM scratch AS cratesio-winnow-0.6.13
## ADD --chmod=0664 --unpack=true --checksum=sha256:59b5e5f6c299a3c7890b876a2a587f3115162487e704907d9b6cd29473052ba1 \
##   https://static.crates.io/crates/winnow/winnow-0.6.13.crate /'''
## 
## [[stages]]
## name = "dep-n-winnow-0.6.13-f45e6953436548b2"
## script = '''
## FROM rust-base AS dep-n-winnow-0.6.13-f45e6953436548b2
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-winnow-0.6.13,source=/winnow-0.6.13,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="winnow" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="A byte-oriented, zero-copy, parser combinators library" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="winnow" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/winnow-rs/winnow" \
##         CARGO_PKG_RUST_VERSION="1.65.0" \
##         CARGO_PKG_VERSION="0.6.13" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="6" \
##         CARGO_PKG_VERSION_PATCH="13" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'winnow' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--allow' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--allow' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "debug", "default", "simd", "std", "unstable-doc", "unstable-recover"))' '-C' 'metadata=39d8324d856151ee' '-C' 'extra-filename=-f45e6953436548b2' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/winnow-0.6.13/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f45e6953436548b2-errcode'''
## 
## [[stages]]
## name = "out-f45e6953436548b2"
## script = """
## FROM scratch AS out-f45e6953436548b2
## COPY --from=dep-n-winnow-0.6.13-f45e6953436548b2 /tmp/clis-ntpd_1-2-3/release/deps/*-f45e6953436548b2* /"""

FROM scratch AS cratesio-toml_edit-0.22.16
ADD --chmod=0664 --unpack=true --checksum=sha256:278f3d518e152219c994ce877758516bca5e118eaed6996192a774fb9fbf0788 \
  https://static.crates.io/crates/toml_edit/toml_edit-0.22.16.crate /
FROM rust-base AS dep-n-toml_edit-0.22.16-90c6c24e7a16fdd6
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-toml_edit-0.22.16,source=/toml_edit-0.22.16,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16 \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="toml_edit" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andronik Ordian <write@reusable.software>:Ed Page <eopage@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Yet another format-preserving TOML parser." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="toml_edit" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.22.16" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="22" \
        CARGO_PKG_VERSION_PATCH="16" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'toml_edit' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="parse"' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "display", "parse", "perf", "serde", "unbounded"))' '-C' 'metadata=42b680f1345ad443' '-C' 'extra-filename=-90c6c24e7a16fdd6' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'indexmap=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_spanned=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta' '--extern' 'toml_datetime=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta' '--extern' 'winnow=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-errcode
FROM scratch AS out-90c6c24e7a16fdd6
COPY --from=dep-n-toml_edit-0.22.16-90c6c24e7a16fdd6 /tmp/clis-ntpd_1-2-3/release/deps/*-90c6c24e7a16fdd6* /

## this = "90c6c24e7a16fdd6"
## deps = [
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "f45e6953436548b2",
## ]
## short_externs = [
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "f45e6953436548b2",
## ]
## writes = [
##     "deps/toml_edit-90c6c24e7a16fdd6.d",
##     "deps/libtoml_edit-90c6c24e7a16fdd6.rmeta",
##     "deps/libtoml_edit-90c6c24e7a16fdd6.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/toml_edit-90c6c24e7a16fdd6.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unused import: `std::borrow::Cow`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/key.rs","byte_start":4,"byte_end":20,"line_start":1,"line_end":1,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::borrow::Cow;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/key.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::borrow::Cow;","highlight_start":1,"highlight_end":22},{"text":"use std::str::FromStr;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::borrow::Cow`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/key.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::borrow::Cow;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unused import: `std::borrow::Cow`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/repr.rs","byte_start":4,"byte_end":20,"line_start":1,"line_end":1,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::borrow::Cow;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/repr.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::borrow::Cow;","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::borrow::Cow`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/repr.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::borrow::Cow;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unused import: `crate::value::DEFAULT_VALUE_DECOR`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":109,"byte_end":142,"line_start":7,"line_end":7,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use crate::value::DEFAULT_VALUE_DECOR;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":105,"byte_end":144,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::value::DEFAULT_VALUE_DECOR;","highlight_start":1,"highlight_end":39},{"text":"use crate::{InlineTable, InternalString, Item, KeyMut, Value};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::DEFAULT_VALUE_DECOR`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::DEFAULT_VALUE_DECOR;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"unused import: `crate::visit_mut::VisitMut`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/ser/mod.rs","byte_start":267,"byte_end":293,"line_start":15,"line_end":15,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use crate::visit_mut::VisitMut;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/ser/mod.rs","byte_start":263,"byte_end":295,"line_start":15,"line_end":16,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::visit_mut::VisitMut;","highlight_start":1,"highlight_end":32},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::visit_mut::VisitMut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/ser/mod.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::visit_mut::VisitMut;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_INLINE_KEY_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/inline_table.rs","byte_start":19968,"byte_end":19992,"line_start":600,"line_end":600,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_INLINE_KEY_DECOR: (&str, &str) = (\" \", \" \");","highlight_start":18,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_INLINE_KEY_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/inline_table.rs:600:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m600\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_INLINE_KEY_DECOR: (&str, &str) = (\" \", \" \");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"function `is_unquoted_char` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/parser/key.rs","byte_start":3206,"byte_end":3222,"line_start":99,"line_end":99,"column_start":15,"column_end":31,"is_primary":true,"text":[{"text":"pub(crate) fn is_unquoted_char(c: u8) -> bool {","highlight_start":15,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `is_unquoted_char` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/parser/key.rs:99:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) fn is_unquoted_char(c: u8) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '''{"$message_type":"diagnostic","message":"methods `to_str` and `to_str_with_default` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/raw_string.rs","byte_start":310,"byte_end":324,"line_start":14,"line_end":14,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"impl RawString {","highlight_start":1,"highlight_end":15}],"label":"methods in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/raw_string.rs","byte_start":1322,"byte_end":1328,"line_start":45,"line_end":45,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"    pub(crate) fn to_str<'s>(&'s self, input: &'s str) -> &'s str {","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/raw_string.rs","byte_start":1715,"byte_end":1734,"line_start":55,"line_end":55,"column_start":19,"column_end":38,"is_primary":true,"text":[{"text":"    pub(crate) fn to_str_with_default<'s>(","highlight_start":19,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `to_str` and `to_str_with_default` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/raw_string.rs:45:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl RawString {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn to_str<'s>(&'s self, input: &'s str) -> &'s str {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub(crate) fn to_str_with_default<'s>(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}''',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_ROOT_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":16107,"byte_end":16125,"line_start":507,"line_end":507,"column_start":18,"column_end":36,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_ROOT_DECOR: (&str, &str) = (\"\", \"\");","highlight_start":18,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_ROOT_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs:507:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_ROOT_DECOR: (&str, &str) = (\"\", \"\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_KEY_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":16169,"byte_end":16186,"line_start":508,"line_end":508,"column_start":18,"column_end":35,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_KEY_DECOR: (&str, &str) = (\"\", \" \");","highlight_start":18,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_KEY_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs:508:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m508\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_KEY_DECOR: (&str, &str) = (\"\", \" \");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_TABLE_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":16231,"byte_end":16250,"line_start":509,"line_end":509,"column_start":18,"column_end":37,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_TABLE_DECOR: (&str, &str) = (\"\\n\", \"\");","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_TABLE_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs:509:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m509\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_TABLE_DECOR: (&str, &str) = (\"\\n\", \"\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_KEY_PATH_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs","byte_start":16296,"byte_end":16318,"line_start":510,"line_end":510,"column_start":18,"column_end":40,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_KEY_PATH_DECOR: (&str, &str) = (\"\", \"\");","highlight_start":18,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_KEY_PATH_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/table.rs:510:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_KEY_PATH_DECOR: (&str, &str) = (\"\", \"\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"constant `DEFAULT_TRAILING_VALUE_DECOR` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/value.rs","byte_start":9534,"byte_end":9562,"line_start":364,"line_end":364,"column_start":18,"column_end":46,"is_primary":true,"text":[{"text":"pub(crate) const DEFAULT_TRAILING_VALUE_DECOR: (&str, &str) = (\" \", \" \");","highlight_start":18,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `DEFAULT_TRAILING_VALUE_DECOR` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/value.rs:364:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) const DEFAULT_TRAILING_VALUE_DECOR: (&str, &str) = (\" \", \" \");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"struct `Pretty` is never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/ser/pretty.rs","byte_start":18,"byte_end":24,"line_start":1,"line_end":1,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"pub(crate) struct Pretty;","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct `Pretty` is never constructed\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/ser/pretty.rs:1:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub(crate) struct Pretty;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"13 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 13 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rmeta"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rlib"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rmeta"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rlib"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rmeta"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rmeta"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rlib"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rmeta"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rlib"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rmeta"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-toml_edit-0.22.16"
## script = '''
## FROM scratch AS cratesio-toml_edit-0.22.16
## ADD --chmod=0664 --unpack=true --checksum=sha256:278f3d518e152219c994ce877758516bca5e118eaed6996192a774fb9fbf0788 \
##   https://static.crates.io/crates/toml_edit/toml_edit-0.22.16.crate /'''
## 
## [[stages]]
## name = "dep-n-toml_edit-0.22.16-90c6c24e7a16fdd6"
## script = '''
## FROM rust-base AS dep-n-toml_edit-0.22.16-90c6c24e7a16fdd6
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-toml_edit-0.22.16,source=/toml_edit-0.22.16,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16 \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="toml_edit" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Andronik Ordian <write@reusable.software>:Ed Page <eopage@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Yet another format-preserving TOML parser." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="toml_edit" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
##         CARGO_PKG_RUST_VERSION="1.65" \
##         CARGO_PKG_VERSION="0.22.16" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="22" \
##         CARGO_PKG_VERSION_PATCH="16" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'toml_edit' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="parse"' '--cfg' 'feature="serde"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "display", "parse", "perf", "serde", "unbounded"))' '-C' 'metadata=42b680f1345ad443' '-C' 'extra-filename=-90c6c24e7a16fdd6' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'indexmap=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_spanned=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta' '--extern' 'toml_datetime=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta' '--extern' 'winnow=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml_edit-0.22.16/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-90c6c24e7a16fdd6-errcode'''
## 
## [[stages]]
## name = "out-90c6c24e7a16fdd6"
## script = """
## FROM scratch AS out-90c6c24e7a16fdd6
## COPY --from=dep-n-toml_edit-0.22.16-90c6c24e7a16fdd6 /tmp/clis-ntpd_1-2-3/release/deps/*-90c6c24e7a16fdd6* /"""

FROM scratch AS cratesio-toml-0.8.15
ADD --chmod=0664 --unpack=true --checksum=sha256:ac2caab0bf757388c6c0ae23b3293fdb463fee59434529014f85e3263b995c28 \
  https://static.crates.io/crates/toml/toml-0.8.15.crate /
FROM rust-base AS dep-n-toml-0.8.15-7b6c235fb7422577
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-toml-0.8.15,source=/toml-0.8.15,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15 \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
  --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta,source=/libtoml_edit-90c6c24e7a16fdd6.rmeta \
  --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="toml" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="toml" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
        CARGO_PKG_RUST_VERSION="1.65" \
        CARGO_PKG_VERSION="0.8.15" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="15" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'toml' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="parse"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "display", "indexmap", "parse", "preserve_order"))' '-C' 'metadata=cf2ebbc3f5e123cf' '-C' 'extra-filename=-7b6c235fb7422577' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_spanned=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta' '--extern' 'toml_datetime=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta' '--extern' 'toml_edit=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-errcode
FROM scratch AS out-7b6c235fb7422577
COPY --from=dep-n-toml-0.8.15-7b6c235fb7422577 /tmp/clis-ntpd_1-2-3/release/deps/*-7b6c235fb7422577* /

## this = "7b6c235fb7422577"
## deps = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
## ]
## short_externs = [
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
## ]
## writes = [
##     "deps/toml-7b6c235fb7422577.d",
##     "deps/libtoml-7b6c235fb7422577.rmeta",
##     "deps/libtoml-7b6c235fb7422577.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/toml-7b6c235fb7422577.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unused import: `std::fmt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/src/table.rs","byte_start":4,"byte_end":12,"line_start":1,"line_end":1,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/src/table.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::fmt`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/src/table.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rmeta"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rlib"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rmeta"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rlib"
## 
## [[externs]]
## from = "out-90c6c24e7a16fdd6"
## xtern = "libtoml_edit-90c6c24e7a16fdd6.rmeta"
## 
## [[externs]]
## from = "out-90c6c24e7a16fdd6"
## xtern = "libtoml_edit-90c6c24e7a16fdd6.rlib"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rmeta"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rlib"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rmeta"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rlib"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rmeta"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rlib"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rmeta"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-toml-0.8.15"
## script = '''
## FROM scratch AS cratesio-toml-0.8.15
## ADD --chmod=0664 --unpack=true --checksum=sha256:ac2caab0bf757388c6c0ae23b3293fdb463fee59434529014f85e3263b995c28 \
##   https://static.crates.io/crates/toml/toml-0.8.15.crate /'''
## 
## [[stages]]
## name = "dep-n-toml-0.8.15-7b6c235fb7422577"
## script = '''
## FROM rust-base AS dep-n-toml-0.8.15-7b6c235fb7422577
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-toml-0.8.15,source=/toml-0.8.15,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15 \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
##   --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta,source=/libtoml_edit-90c6c24e7a16fdd6.rmeta \
##   --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="toml" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
##         CARGO_PKG_DESCRIPTION="A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/toml-rs/toml" \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="toml" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/toml-rs/toml" \
##         CARGO_PKG_RUST_VERSION="1.65" \
##         CARGO_PKG_VERSION="0.8.15" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="8" \
##         CARGO_PKG_VERSION_PATCH="15" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'toml' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--warn' 'clippy::zero_sized_map_values' '--warn' 'clippy::wildcard_imports' '--warn' 'clippy::verbose_file_reads' '--warn' 'unused_qualifications' '--warn' 'unused_macro_rules' '--warn' 'unused_lifetimes' '--warn' 'unsafe_op_in_unsafe_fn' '--warn' 'unreachable_pub' '--warn' 'clippy::trait_duplication_in_bounds' '--warn' 'clippy::todo' '--warn' 'clippy::string_to_string' '--warn' 'clippy::string_lit_as_bytes' '--warn' 'clippy::string_add_assign' '--warn' 'clippy::string_add' '--warn' 'clippy::str_to_string' '--warn' 'clippy::single_match_else' '--warn' 'clippy::semicolon_if_nothing_returned' '--warn' 'clippy::self_named_module_files' '--warn' 'clippy::same_functions_in_if_condition' '--warn' 'rust_2018_idioms' '--warn' 'clippy::rest_pat_in_fully_bound_structs' '--warn' 'clippy::ref_option_ref' '--warn' 'clippy::redundant_feature_names' '--warn' 'clippy::rc_mutex' '--warn' 'clippy::ptr_as_ptr' '--warn' 'clippy::path_buf_push_overwrite' '--warn' 'clippy::negative_feature_names' '--warn' 'clippy::needless_for_each' '--warn' 'clippy::needless_continue' '--warn' 'clippy::mutex_integer' '--warn' 'clippy::mem_forget' '--warn' 'clippy::match_wildcard_for_single_variants' '--warn' 'clippy::macro_use_imports' '--warn' 'clippy::lossy_float_literal' '--warn' 'clippy::linkedlist' '--allow' 'clippy::let_and_return' '--warn' 'clippy::large_types_passed_by_value' '--warn' 'clippy::large_stack_arrays' '--warn' 'clippy::large_digit_groups' '--warn' 'clippy::items_after_statements' '--warn' 'clippy::invalid_upcast_comparisons' '--warn' 'clippy::infinite_loop' '--warn' 'clippy::inefficient_to_string' '--warn' 'clippy::inconsistent_struct_constructor' '--warn' 'clippy::imprecise_flops' '--warn' 'clippy::implicit_clone' '--allow' 'clippy::if_same_then_else' '--warn' 'clippy::from_iter_instead_of_collect' '--warn' 'clippy::fn_params_excessive_bools' '--warn' 'clippy::float_cmp_const' '--warn' 'clippy::flat_map_option' '--warn' 'clippy::filter_map_next' '--warn' 'clippy::fallible_impl_from' '--warn' 'clippy::explicit_into_iter_loop' '--warn' 'clippy::explicit_deref_methods' '--warn' 'clippy::expl_impl_clone_on_copy' '--warn' 'clippy::enum_glob_use' '--warn' 'clippy::empty_enum' '--warn' 'clippy::doc_markdown' '--warn' 'clippy::debug_assert_with_mut_call' '--warn' 'clippy::dbg_macro' '--warn' 'clippy::create_dir' '--allow' 'clippy::collapsible_else_if' '--warn' 'clippy::checked_conversions' '--allow' 'clippy::branches_sharing_code' '--allow' 'clippy::bool_assert_comparison' '--cfg' 'feature="parse"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "display", "indexmap", "parse", "preserve_order"))' '-C' 'metadata=cf2ebbc3f5e123cf' '-C' 'extra-filename=-7b6c235fb7422577' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_spanned=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta' '--extern' 'toml_datetime=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta' '--extern' 'toml_edit=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/toml-0.8.15/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7b6c235fb7422577-errcode'''
## 
## [[stages]]
## name = "out-7b6c235fb7422577"
## script = """
## FROM scratch AS out-7b6c235fb7422577
## COPY --from=dep-n-toml-0.8.15-7b6c235fb7422577 /tmp/clis-ntpd_1-2-3/release/deps/*-7b6c235fb7422577* /"""

FROM scratch AS cratesio-overload-0.1.1
ADD --chmod=0664 --unpack=true --checksum=sha256:b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39 \
  https://static.crates.io/crates/overload/overload-0.1.1.crate /
FROM rust-base AS dep-n-overload-0.1.1-94fa3b5a5c6dc522
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-overload-0.1.1,source=/overload-0.1.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="overload" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Daniel Salvadori <danaugrs@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Provides a macro to simplify operator overloading." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="overload" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/danaugrs/overload" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'overload' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=4c018e9f6ab20139' '-C' 'extra-filename=-94fa3b5a5c6dc522' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-errcode
FROM scratch AS out-94fa3b5a5c6dc522
COPY --from=dep-n-overload-0.1.1-94fa3b5a5c6dc522 /tmp/clis-ntpd_1-2-3/release/deps/*-94fa3b5a5c6dc522* /

## this = "94fa3b5a5c6dc522"
## writes = [
##     "deps/overload-94fa3b5a5c6dc522.d",
##     "deps/liboverload-94fa3b5a5c6dc522.rmeta",
##     "deps/liboverload-94fa3b5a5c6dc522.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/overload-94fa3b5a5c6dc522.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib","emit":"link"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-overload-0.1.1"
## script = '''
## FROM scratch AS cratesio-overload-0.1.1
## ADD --chmod=0664 --unpack=true --checksum=sha256:b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39 \
##   https://static.crates.io/crates/overload/overload-0.1.1.crate /'''
## 
## [[stages]]
## name = "dep-n-overload-0.1.1-94fa3b5a5c6dc522"
## script = '''
## FROM rust-base AS dep-n-overload-0.1.1-94fa3b5a5c6dc522
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-overload-0.1.1,source=/overload-0.1.1,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="overload" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Daniel Salvadori <danaugrs@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Provides a macro to simplify operator overloading." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="overload" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/danaugrs/overload" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.1.1" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="1" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'overload' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=4c018e9f6ab20139' '-C' 'extra-filename=-94fa3b5a5c6dc522' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/overload-0.1.1/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-94fa3b5a5c6dc522-errcode'''
## 
## [[stages]]
## name = "out-94fa3b5a5c6dc522"
## script = """
## FROM scratch AS out-94fa3b5a5c6dc522
## COPY --from=dep-n-overload-0.1.1-94fa3b5a5c6dc522 /tmp/clis-ntpd_1-2-3/release/deps/*-94fa3b5a5c6dc522* /"""

FROM scratch AS cratesio-nu-ansi-term-0.46.0
ADD --chmod=0664 --unpack=true --checksum=sha256:77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84 \
  https://static.crates.io/crates/nu-ansi-term/nu-ansi-term-0.46.0.crate /
FROM rust-base AS dep-n-nu-ansi-term-0.46.0-c42192675aa050dd
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-nu-ansi-term-0.46.0,source=/nu-ansi-term-0.46.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0 \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="nu_ansi_term" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="ogham@bsago.me:Ryan Scheel (Havvy) <ryan.havvy@gmail.com>:Josh Triplett <josh@joshtriplett.org>:The Nushell Project Developers" \
        CARGO_PKG_DESCRIPTION="Library for ANSI terminal colors and styles (bold, underline)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="nu-ansi-term" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/nushell/nu-ansi-term" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.46.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="46" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'nu_ansi_term' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("derive_serde_style", "serde"))' '-C' 'metadata=97ff9102a3ba1599' '-C' 'extra-filename=-c42192675aa050dd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'overload=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-errcode
FROM scratch AS out-c42192675aa050dd
COPY --from=dep-n-nu-ansi-term-0.46.0-c42192675aa050dd /tmp/clis-ntpd_1-2-3/release/deps/*-c42192675aa050dd* /

## this = "c42192675aa050dd"
## deps = ["94fa3b5a5c6dc522"]
## short_externs = ["94fa3b5a5c6dc522"]
## writes = [
##     "deps/nu_ansi_term-c42192675aa050dd.d",
##     "deps/libnu_ansi_term-c42192675aa050dd.rmeta",
##     "deps/libnu_ansi_term-c42192675aa050dd.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/nu_ansi_term-c42192675aa050dd.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"unused import: `windows::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/src/lib.rs","byte_start":9901,"byte_end":9911,"line_start":261,"line_end":261,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/src/lib.rs","byte_start":9893,"byte_end":9913,"line_start":261,"line_end":262,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use windows::*;","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `windows::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/src/lib.rs:261:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use windows::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rmeta"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-nu-ansi-term-0.46.0"
## script = '''
## FROM scratch AS cratesio-nu-ansi-term-0.46.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84 \
##   https://static.crates.io/crates/nu-ansi-term/nu-ansi-term-0.46.0.crate /'''
## 
## [[stages]]
## name = "dep-n-nu-ansi-term-0.46.0-c42192675aa050dd"
## script = '''
## FROM rust-base AS dep-n-nu-ansi-term-0.46.0-c42192675aa050dd
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-nu-ansi-term-0.46.0,source=/nu-ansi-term-0.46.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0 \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="nu_ansi_term" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="ogham@bsago.me:Ryan Scheel (Havvy) <ryan.havvy@gmail.com>:Josh Triplett <josh@joshtriplett.org>:The Nushell Project Developers" \
##         CARGO_PKG_DESCRIPTION="Library for ANSI terminal colors and styles (bold, underline)" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="nu-ansi-term" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/nushell/nu-ansi-term" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="0.46.0" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="46" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'nu_ansi_term' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("derive_serde_style", "serde"))' '-C' 'metadata=97ff9102a3ba1599' '-C' 'extra-filename=-c42192675aa050dd' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'overload=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nu-ansi-term-0.46.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-c42192675aa050dd-errcode'''
## 
## [[stages]]
## name = "out-c42192675aa050dd"
## script = """
## FROM scratch AS out-c42192675aa050dd
## COPY --from=dep-n-nu-ansi-term-0.46.0-c42192675aa050dd /tmp/clis-ntpd_1-2-3/release/deps/*-c42192675aa050dd* /"""

FROM scratch AS cratesio-lazy_static-1.5.0
ADD --chmod=0664 --unpack=true --checksum=sha256:bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe \
  https://static.crates.io/crates/lazy_static/lazy_static-1.5.0.crate /
FROM rust-base AS dep-n-lazy_static-1.5.0-f91da618dd3f72e5
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-lazy_static-1.5.0,source=/lazy_static-1.5.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="lazy_static" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Marvin Löbel <loebel.marvin@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A macro for declaring lazily evaluated statics in Rust." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="lazy_static" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang-nursery/lazy-static.rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.5.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'lazy_static' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("spin", "spin_no_std"))' '-C' 'metadata=e07f8572ff794986' '-C' 'extra-filename=-f91da618dd3f72e5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-errcode
FROM scratch AS out-f91da618dd3f72e5
COPY --from=dep-n-lazy_static-1.5.0-f91da618dd3f72e5 /tmp/clis-ntpd_1-2-3/release/deps/*-f91da618dd3f72e5* /

## this = "f91da618dd3f72e5"
## writes = [
##     "deps/lazy_static-f91da618dd3f72e5.d",
##     "deps/liblazy_static-f91da618dd3f72e5.rmeta",
##     "deps/liblazy_static-f91da618dd3f72e5.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/lazy_static-f91da618dd3f72e5.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"elided lifetime has a name","code":{"code":"elided_named_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/src/inline_lazy.rs","byte_start":843,"byte_end":844,"line_start":26,"line_end":26,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn get<F>(&'static self, f: F) -> &T","highlight_start":43,"highlight_end":44}],"label":"this elided lifetime gets resolved as `'static`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(elided_named_lifetimes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider specifying it explicitly","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/src/inline_lazy.rs","byte_start":844,"byte_end":844,"line_start":26,"line_end":26,"column_start":44,"column_end":44,"is_primary":true,"text":[{"text":"    pub fn get<F>(&'static self, f: F) -> &T","highlight_start":44,"highlight_end":44}],"label":null,"suggested_replacement":"'static ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: elided lifetime has a name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/src/inline_lazy.rs:26:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get<F>(&'static self, f: F) -> &T\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis elided lifetime gets resolved as `'static`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(elided_named_lifetimes)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider specifying it explicitly\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get<F>(&'static self, f: F) -> &\u001b[0m\u001b[0m\u001b[38;5;10m'static \u001b[0m\u001b[0mT\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}',
## ]
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-lazy_static-1.5.0"
## script = '''
## FROM scratch AS cratesio-lazy_static-1.5.0
## ADD --chmod=0664 --unpack=true --checksum=sha256:bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe \
##   https://static.crates.io/crates/lazy_static/lazy_static-1.5.0.crate /'''
## 
## [[stages]]
## name = "dep-n-lazy_static-1.5.0-f91da618dd3f72e5"
## script = '''
## FROM rust-base AS dep-n-lazy_static-1.5.0-f91da618dd3f72e5
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-lazy_static-1.5.0,source=/lazy_static-1.5.0,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0 \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="lazy_static" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Marvin Löbel <loebel.marvin@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="A macro for declaring lazily evaluated statics in Rust." \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="lazy_static" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/rust-lang-nursery/lazy-static.rs" \
##         CARGO_PKG_RUST_VERSION= \
##         CARGO_PKG_VERSION="1.5.0" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="5" \
##         CARGO_PKG_VERSION_PATCH="0" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'lazy_static' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("spin", "spin_no_std"))' '-C' 'metadata=e07f8572ff794986' '-C' 'extra-filename=-f91da618dd3f72e5' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.5.0/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-f91da618dd3f72e5-errcode'''
## 
## [[stages]]
## name = "out-f91da618dd3f72e5"
## script = """
## FROM scratch AS out-f91da618dd3f72e5
## COPY --from=dep-n-lazy_static-1.5.0-f91da618dd3f72e5 /tmp/clis-ntpd_1-2-3/release/deps/*-f91da618dd3f72e5* /"""

FROM scratch AS cratesio-sharded-slab-0.1.7
ADD --chmod=0664 --unpack=true --checksum=sha256:f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6 \
  https://static.crates.io/crates/sharded-slab/sharded-slab-0.1.7.crate /
FROM rust-base AS dep-n-sharded-slab-0.1.7-b9545388d9527f67
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-sharded-slab-0.1.7,source=/sharded-slab-0.1.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7 \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="sharded_slab" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>" \
        CARGO_PKG_DESCRIPTION="A lock-free concurrent slab.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/hawkw/sharded-slab" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="sharded-slab" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/hawkw/sharded-slab" \
        CARGO_PKG_RUST_VERSION="1.42.0" \
        CARGO_PKG_VERSION="0.1.7" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'sharded_slab' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("loom"))' '-C' 'metadata=4ef5b49d9aea40b3' '-C' 'extra-filename=-b9545388d9527f67' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'lazy_static=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-errcode
FROM scratch AS out-b9545388d9527f67
COPY --from=dep-n-sharded-slab-0.1.7-b9545388d9527f67 /tmp/clis-ntpd_1-2-3/release/deps/*-b9545388d9527f67* /

## this = "b9545388d9527f67"
## deps = ["f91da618dd3f72e5"]
## short_externs = ["f91da618dd3f72e5"]
## writes = [
##     "deps/sharded_slab-b9545388d9527f67.d",
##     "deps/libsharded_slab-b9545388d9527f67.rmeta",
##     "deps/libsharded_slab-b9545388d9527f67.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/sharded_slab-b9545388d9527f67.d","emit":"dep-info"}',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":583,"byte_end":587,"line_start":15,"line_end":15,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(all(test, loom))]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":583,"byte_end":587,"line_start":15,"line_end":15,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"#[cfg(all(test, loom))]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:15:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(test, loom))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":15133,"byte_end":15172,"line_start":453,"line_end":453,"column_start":9,"column_end":48,"is_primary":false,"text":[{"text":"        test_println!(\"pool: create {:?}\", tid);","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:453:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"pool: create {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":21408,"byte_end":21453,"line_start":621,"line_end":621,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        test_println!(\"pool: create_owned {:?}\", tid);","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:621:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m621\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"pool: create_owned {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":22706,"byte_end":22740,"line_start":655,"line_end":655,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        test_println!(\"pool: create_with\");","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:655:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m655\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"pool: create_with\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":23479,"byte_end":23549,"line_start":678,"line_end":678,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        test_println!(\"pool: get{:?}; current={:?}\", tid, Tid::<C>::current());","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:678:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m678\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"pool: get{:?}; current={:?}\", tid, Tid::<C>::current());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":26857,"byte_end":26927,"line_start":769,"line_end":769,"column_start":9,"column_end":79,"is_primary":false,"text":[{"text":"        test_println!(\"pool: get{:?}; current={:?}\", tid, Tid::<C>::current());","highlight_start":9,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:769:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m769\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"pool: get{:?}; current={:?}\", tid, Tid::<C>::current());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":30720,"byte_end":30764,"line_start":914,"line_end":914,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        test_println!(\"drop Ref: try clearing data\");","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:914:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m914\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"drop Ref: try clearing data\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":34506,"byte_end":34557,"line_start":1049,"line_end":1049,"column_start":9,"column_end":60,"is_primary":false,"text":[{"text":"        test_println!(\" -> drop RefMut: try clearing data\");","highlight_start":9,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1049:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\" -> drop RefMut: try clearing data\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":36325,"byte_end":36374,"line_start":1124,"line_end":1124,"column_start":9,"column_end":58,"is_primary":false,"text":[{"text":"        test_println!(\"drop OwnedRef: try clearing data\");","highlight_start":9,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1124:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"drop OwnedRef: try clearing data\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":36892,"byte_end":36933,"line_start":1135,"line_end":1135,"column_start":13,"column_end":54,"is_primary":false,"text":[{"text":"            test_println!(\"-> shard={:?}\", shard_idx);","highlight_start":13,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1135:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> shard={:?}\", shard_idx);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":37103,"byte_end":37174,"line_start":1139,"line_end":1139,"column_start":17,"column_end":88,"is_primary":false,"text":[{"text":"                test_println!(\"-> shard={:?} does not exist! THIS IS A BUG\", shard_idx);","highlight_start":17,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1139:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> shard={:?} does not exist! THIS IS A BUG\", shard_idx);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":39830,"byte_end":39871,"line_start":1238,"line_end":1238,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        test_println!(\"-> shard={:?}\", shard_idx);","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1238:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> shard={:?}\", shard_idx);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":41354,"byte_end":41406,"line_start":1290,"line_end":1290,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        test_println!(\"drop OwnedRefMut: try clearing data\");","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1290:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"drop OwnedRefMut: try clearing data\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs","byte_start":41995,"byte_end":42050,"line_start":1303,"line_end":1303,"column_start":17,"column_end":72,"is_primary":false,"text":[{"text":"                test_println!(\"-> shard does not exist! THIS IS A BUG\");","highlight_start":17,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/pool.rs:1303:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> shard does not exist! THIS IS A BUG\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m              [lints.rust]\u001b[0m\n\u001b[0m              unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs","byte_start":42,"byte_end":46,"line_start":3,"line_end":3,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, any(test, feature = \"loom\")))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs","byte_start":42,"byte_end":46,"line_start":3,"line_end":3,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, any(test, feature = \"loom\")))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs:3:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(loom, any(test, feature = \"loom\")))]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m           [lints.rust]\u001b[0m\n\u001b[0m           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs","byte_start":1733,"byte_end":1737,"line_start":63,"line_end":63,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg(not(all(loom, any(feature = \"loom\", test))))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs","byte_start":1733,"byte_end":1737,"line_start":63,"line_end":63,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg(not(all(loom, any(feature = \"loom\", test))))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/sync.rs:63:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(all(loom, any(feature = \"loom\", test))))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/clear.rs","byte_start":2578,"byte_end":2582,"line_start":95,"line_end":95,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, test))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/clear.rs","byte_start":2578,"byte_end":2582,"line_start":95,"line_end":95,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, test))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/clear.rs:95:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(loom, test))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":599,"byte_end":632,"line_start":18,"line_end":18,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        test_println!(\"UniqueIter::next\");","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"UniqueIter::next\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":661,"byte_end":694,"line_start":20,"line_end":20,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            test_println!(\"-> try next slot\");","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:20:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> try next slot\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":797,"byte_end":831,"line_start":22,"line_end":22,"column_start":17,"column_end":51,"is_primary":false,"text":[{"text":"                test_println!(\"-> found an item!\");","highlight_start":17,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:22:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> found an item!\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":895,"byte_end":928,"line_start":26,"line_end":26,"column_start":13,"column_end":46,"is_primary":false,"text":[{"text":"            test_println!(\"-> try next page\");","highlight_start":13,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> try next page\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":998,"byte_end":1036,"line_start":28,"line_end":28,"column_start":17,"column_end":55,"is_primary":false,"text":[{"text":"                test_println!(\"-> found another page\");","highlight_start":17,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:28:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> found another page\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":1133,"byte_end":1167,"line_start":33,"line_end":33,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            test_println!(\"-> try next shard\");","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:33:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> try next shard\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":1239,"byte_end":1278,"line_start":35,"line_end":35,"column_start":17,"column_end":56,"is_primary":false,"text":[{"text":"                test_println!(\"-> found another shard\");","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:35:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> found another shard\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs","byte_start":1360,"byte_end":1389,"line_start":38,"line_end":38,"column_start":17,"column_end":46,"is_primary":false,"text":[{"text":"                test_println!(\"-> all done!\");","highlight_start":17,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/iter.rs:38:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> all done!\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":2808,"byte_end":3048,"line_start":115,"line_end":122,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(","highlight_start":13,"highlight_end":27},{"text":"                \"-> get {:?}; current_gen={:?}; lifecycle={:#x}; state={:?}; refs={:?};\",","highlight_start":1,"highlight_end":90},{"text":"                gen,","highlight_start":1,"highlight_end":21},{"text":"                current_gen,","highlight_start":1,"highlight_end":29},{"text":"                lifecycle,","highlight_start":1,"highlight_end":27},{"text":"                state,","highlight_start":1,"highlight_end":23},{"text":"                refs,","highlight_start":1,"highlight_end":22},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:115:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"-> get {:?}; current_gen={:?}; lifecycle={:#x}; state={:?}; refs={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                current_gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                refs,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":3401,"byte_end":3443,"line_start":129,"line_end":129,"column_start":17,"column_end":59,"is_primary":false,"text":[{"text":"                test_println!(\"-> get: no longer exists!\");","highlight_start":17,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:129:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> get: no longer exists!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":3843,"byte_end":3877,"line_start":142,"line_end":142,"column_start":21,"column_end":55,"is_primary":false,"text":[{"text":"                    test_println!(\"-> {:?}\", new_refs);","highlight_start":21,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:142:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> {:?}\", new_refs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":4428,"byte_end":4487,"line_start":154,"line_end":154,"column_start":21,"column_end":80,"is_primary":false,"text":[{"text":"                    test_println!(\"-> get: retrying; lifecycle={:#x};\", actual);","highlight_start":21,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> get: retrying; lifecycle={:#x};\", actual);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":5378,"byte_end":5516,"line_start":175,"line_end":179,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(","highlight_start":13,"highlight_end":27},{"text":"                \"-> mark_release; gen={:?}; current_gen={:?};\",","highlight_start":1,"highlight_end":64},{"text":"                gen,","highlight_start":1,"highlight_end":21},{"text":"                curr_gen","highlight_start":1,"highlight_end":25},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:175:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"-> mark_release; gen={:?}; current_gen={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                curr_gen\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":5754,"byte_end":5806,"line_start":187,"line_end":187,"column_start":13,"column_end":65,"is_primary":false,"text":[{"text":"            test_println!(\"-> mark_release; state={:?};\", state);","highlight_start":13,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:187:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> mark_release; state={:?};\", state);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":5891,"byte_end":5959,"line_start":190,"line_end":190,"column_start":21,"column_end":89,"is_primary":false,"text":[{"text":"                    test_println!(\"--> mark_release; cannot release (already removed!)\");","highlight_start":21,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:190:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"--> mark_release; cannot release (already removed!)\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":6067,"byte_end":6117,"line_start":194,"line_end":194,"column_start":21,"column_end":71,"is_primary":false,"text":[{"text":"                    test_println!(\"--> mark_release; already marked;\");","highlight_start":21,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:194:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"--> mark_release; already marked;\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":6347,"byte_end":6510,"line_start":202,"line_end":206,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(","highlight_start":13,"highlight_end":27},{"text":"                \"-> mark_release; old_lifecycle={:#x}; new_lifecycle={:#x};\",","highlight_start":1,"highlight_end":78},{"text":"                lifecycle,","highlight_start":1,"highlight_end":27},{"text":"                new_lifecycle","highlight_start":1,"highlight_end":30},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:202:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"-> mark_release; old_lifecycle={:#x}; new_lifecycle={:#x};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                lifecycle,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                new_lifecycle\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":6792,"byte_end":6834,"line_start":216,"line_end":216,"column_start":21,"column_end":63,"is_primary":false,"text":[{"text":"                    test_println!(\"-> mark_release; retrying\");","highlight_start":21,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:216:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> mark_release; retrying\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":7069,"byte_end":7127,"line_start":224,"line_end":224,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        test_println!(\"-> mark_release: marked; refs={:?};\", refs);","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> mark_release: marked; refs={:?};\", refs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":7964,"byte_end":8182,"line_start":246,"line_end":251,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(\"-> release_with; lifecycle={:#x}; expected_gen={:?}; current_gen={:?}; next_gen={:?};\",","highlight_start":13,"highlight_end":115},{"text":"                lifecycle,","highlight_start":1,"highlight_end":27},{"text":"                gen,","highlight_start":1,"highlight_end":21},{"text":"                current_gen,","highlight_start":1,"highlight_end":29},{"text":"                next_gen","highlight_start":1,"highlight_end":25},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:246:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> release_with; lifecycle={:#x}; expected_gen={:?}; current_gen={:?}; next_gen={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                lifecycle,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                current_gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                next_gen\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":8531,"byte_end":8567,"line_start":258,"line_end":258,"column_start":17,"column_end":53,"is_primary":false,"text":[{"text":"                test_println!(\"-> already removed!\");","highlight_start":17,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:258:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> already removed!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":9197,"byte_end":9272,"line_start":275,"line_end":275,"column_start":21,"column_end":96,"is_primary":false,"text":[{"text":"                    test_println!(\"-> advanced gen; lifecycle={:#x}; refs={:?};\", actual, refs);","highlight_start":21,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:275:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> advanced gen; lifecycle={:#x}; refs={:?};\", actual, refs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":9339,"byte_end":9372,"line_start":277,"line_end":277,"column_start":25,"column_end":58,"is_primary":false,"text":[{"text":"                        test_println!(\"-> ok to remove!\");","highlight_start":25,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:277:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        test_println!(\"-> ok to remove!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":10078,"byte_end":10122,"line_start":290,"line_end":290,"column_start":21,"column_end":65,"is_primary":false,"text":[{"text":"                    test_println!(\"-> refs={:?}; spin...\", refs);","highlight_start":21,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:290:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> refs={:?}; spin...\", refs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":10317,"byte_end":10371,"line_start":296,"line_end":296,"column_start":21,"column_end":75,"is_primary":false,"text":[{"text":"                    test_println!(\"-> retrying; lifecycle={:#x};\", actual);","highlight_start":21,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:296:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> retrying; lifecycle={:#x};\", actual);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":11168,"byte_end":11348,"line_start":316,"line_end":321,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        test_println!(","highlight_start":9,"highlight_end":23},{"text":"            \"-> initialize_state; state={:?}; gen={:?}; refs={:?};\",","highlight_start":1,"highlight_end":69},{"text":"            Lifecycle::<C>::from_packed(lifecycle),","highlight_start":1,"highlight_end":52},{"text":"            gen,","highlight_start":1,"highlight_end":17},{"text":"            refs,","highlight_start":1,"highlight_end":18},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:316:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"-> initialize_state; state={:?}; gen={:?}; refs={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Lifecycle::<C>::from_packed(lifecycle),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            refs,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":11392,"byte_end":11451,"line_start":324,"line_end":324,"column_start":13,"column_end":72,"is_primary":false,"text":[{"text":"            test_println!(\"-> initialize while referenced! cancelling\");","highlight_start":13,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:324:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> initialize while referenced! cancelling\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":12745,"byte_end":12786,"line_start":363,"line_end":363,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        test_println!(\"-> inserted at {:?}\", gen);","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:363:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> inserted at {:?}\", gen);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":13811,"byte_end":13945,"line_start":389,"line_end":392,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                test_println!(","highlight_start":17,"highlight_end":31},{"text":"                    \"-> try_remove_value; nothing exists at generation={:?}\",","highlight_start":1,"highlight_end":78},{"text":"                    gen","highlight_start":1,"highlight_end":24},{"text":"                );","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:389:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"-> try_remove_value; nothing exists at generation={:?}\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    gen\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":14011,"byte_end":14056,"line_start":397,"line_end":397,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        test_println!(\"-> try_remove_value; marked!\");","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:397:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> try_remove_value; marked!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":14151,"byte_end":14203,"line_start":401,"line_end":401,"column_start":13,"column_end":65,"is_primary":false,"text":[{"text":"            test_println!(\"-> try_remove_value; can remove now\");","highlight_start":13,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:401:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> try_remove_value; can remove now\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":15775,"byte_end":15910,"line_start":453,"line_end":456,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                test_println!(","highlight_start":17,"highlight_end":31},{"text":"                    \"-> try_clear_storage; nothing exists at generation={:?}\",","highlight_start":1,"highlight_end":79},{"text":"                    gen","highlight_start":1,"highlight_end":24},{"text":"                );","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:453:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"-> try_clear_storage; nothing exists at generation={:?}\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    gen\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":15976,"byte_end":16022,"line_start":461,"line_end":461,"column_start":9,"column_end":55,"is_primary":false,"text":[{"text":"        test_println!(\"-> try_clear_storage; marked!\");","highlight_start":9,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:461:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> try_clear_storage; marked!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":16116,"byte_end":16167,"line_start":465,"line_end":465,"column_start":13,"column_end":64,"is_primary":false,"text":[{"text":"            test_println!(\"-> try_remove_value; can clear now\");","highlight_start":13,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:465:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m465\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> try_remove_value; can clear now\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":16818,"byte_end":16858,"line_start":485,"line_end":485,"column_start":13,"column_end":53,"is_primary":false,"text":[{"text":"            test_println!(\"-> cleared: {}\", cleared);","highlight_start":13,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:485:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> cleared: {}\", cleared);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":17787,"byte_end":18083,"line_start":510,"line_end":518,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(","highlight_start":13,"highlight_end":27},{"text":"                \"-> drop guard: state={:?}; gen={:?}; refs={:?}; lifecycle={:#x}; new_lifecycle={:#x}; dropping={:?}\",","highlight_start":1,"highlight_end":119},{"text":"                state,","highlight_start":1,"highlight_end":23},{"text":"                gen,","highlight_start":1,"highlight_end":21},{"text":"                refs,","highlight_start":1,"highlight_end":22},{"text":"                lifecycle,","highlight_start":1,"highlight_end":27},{"text":"                new_lifecycle,","highlight_start":1,"highlight_end":31},{"text":"                dropping","highlight_start":1,"highlight_end":25},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:510:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m511\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"-> drop guard: state={:?}; gen={:?}; refs={:?}; lifecycle={:#x}; new_lifecycle={:#x}; dropping={:?}\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                state,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                gen,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                dropping\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m518\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":18326,"byte_end":18388,"line_start":526,"line_end":526,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    test_println!(\"-> drop guard: done;  dropping={:?}\", dropping);","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:526:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> drop guard: done;  dropping={:?}\", dropping);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":18498,"byte_end":18557,"line_start":530,"line_end":530,"column_start":21,"column_end":80,"is_primary":false,"text":[{"text":"                    test_println!(\"-> drop guard; retry, actual={:#x}\", actual);","highlight_start":21,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:530:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> drop guard; retry, actual={:#x}\", actual);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":23366,"byte_end":23433,"line_start":710,"line_end":710,"column_start":13,"column_end":80,"is_primary":false,"text":[{"text":"            test_println!(\"-> get: {}; MAX={}\", self.value, RefCount::<C>::MAX);","highlight_start":13,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:710:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m710\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> get: {}; MAX={}\", self.value, RefCount::<C>::MAX);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":26987,"byte_end":27171,"line_start":830,"line_end":834,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        test_println!(","highlight_start":9,"highlight_end":23},{"text":"            \"InitGuard::release; curr_lifecycle={:?}; downgrading={}\",","highlight_start":1,"highlight_end":71},{"text":"            Lifecycle::<C>::from_packed(self.curr_lifecycle),","highlight_start":1,"highlight_end":62},{"text":"            new_refs != 0,","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:830:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m830\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"InitGuard::release; curr_lifecycle={:?}; downgrading={}\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Lifecycle::<C>::from_packed(self.curr_lifecycle),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m833\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            new_refs != 0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m834\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":27212,"byte_end":27249,"line_start":836,"line_end":836,"column_start":13,"column_end":50,"is_primary":false,"text":[{"text":"            test_println!(\"-> already released!\");","highlight_start":13,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:836:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m836\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> already released!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":27764,"byte_end":27810,"line_start":852,"line_end":852,"column_start":17,"column_end":63,"is_primary":false,"text":[{"text":"                test_println!(\"--> advanced to PRESENT; done\");","highlight_start":17,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:852:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m852\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"--> advanced to PRESENT; done\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":27901,"byte_end":28047,"line_start":856,"line_end":859,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"                test_println!(","highlight_start":17,"highlight_end":31},{"text":"                    \"--> lifecycle changed; actual={:?}\",","highlight_start":1,"highlight_end":58},{"text":"                    Lifecycle::<C>::from_packed(actual)","highlight_start":1,"highlight_end":56},{"text":"                );","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:856:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"--> lifecycle changed; actual={:?}\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    Lifecycle::<C>::from_packed(actual)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m859\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":28398,"byte_end":28585,"line_start":870,"line_end":875,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            test_println!(","highlight_start":13,"highlight_end":27},{"text":"                \"-> InitGuard::release; lifecycle={:#x}; state={:?}; refs={:?};\",","highlight_start":1,"highlight_end":82},{"text":"                curr_lifecycle,","highlight_start":1,"highlight_end":32},{"text":"                state,","highlight_start":1,"highlight_end":23},{"text":"                refs,","highlight_start":1,"highlight_end":22},{"text":"            );","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:870:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"-> InitGuard::release; lifecycle={:#x}; state={:?}; refs={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m872\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                curr_lifecycle,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                state,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m874\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                refs,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m875\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":29296,"byte_end":29341,"line_start":889,"line_end":889,"column_start":21,"column_end":66,"is_primary":false,"text":[{"text":"                    test_println!(\"-> InitGuard::RELEASE: done!\");","highlight_start":21,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:889:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> InitGuard::RELEASE: done!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs","byte_start":29544,"byte_end":29611,"line_start":894,"line_end":894,"column_start":21,"column_end":88,"is_primary":false,"text":[{"text":"                    test_println!(\"-> InitGuard::release; retry, actual={:#x}\", actual);","highlight_start":21,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/slot.rs:894:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m894\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> InitGuard::release; retry, actual={:#x}\", actual);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":2097,"byte_end":2101,"line_start":72,"line_end":72,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, test))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":2097,"byte_end":2101,"line_start":72,"line_end":72,"column_start":11,"column_end":15,"is_primary":true,"text":[{"text":"#[cfg(all(loom, test))]","highlight_start":11,"highlight_end":15}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs:72:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(loom, test))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":552,"byte_end":586,"line_start":20,"line_end":20,"column_start":9,"column_end":43,"is_primary":false,"text":[{"text":"        test_println!(\"-> pop {:#x}\", val);","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> pop {:#x}\", val);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":1025,"byte_end":1061,"line_start":34,"line_end":34,"column_start":13,"column_end":49,"is_primary":false,"text":[{"text":"            test_println!(\"-> next {:#x}\", next);","highlight_start":13,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs:34:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> next {:#x}\", next);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":1324,"byte_end":1350,"line_start":43,"line_end":43,"column_start":21,"column_end":47,"is_primary":false,"text":[{"text":"                    test_println!(\"-> retry!\");","highlight_start":21,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs:43:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> retry!\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs","byte_start":1452,"byte_end":1500,"line_start":47,"line_end":47,"column_start":21,"column_end":69,"is_primary":false,"text":[{"text":"                    test_println!(\"-> successful; next={:#x}\", next);","highlight_start":21,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/stack.rs:47:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    test_println!(\"-> successful; next={:#x}\", next);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":4157,"byte_end":4198,"line_start":146,"line_end":146,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        test_println!(\"-> local head {:?}\", head);","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:146:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> local head {:?}\", head);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":4519,"byte_end":4561,"line_start":156,"line_end":156,"column_start":13,"column_end":55,"is_primary":false,"text":[{"text":"            test_println!(\"-> remote head {:?}\", head);","highlight_start":13,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:156:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> remote head {:?}\", head);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":4779,"byte_end":4815,"line_start":163,"line_end":163,"column_start":13,"column_end":49,"is_primary":false,"text":[{"text":"            test_println!(\"-> NULL! {:?}\", head);","highlight_start":13,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:163:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> NULL! {:?}\", head);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":5327,"byte_end":5364,"line_start":185,"line_end":185,"column_start":9,"column_end":46,"is_primary":false,"text":[{"text":"        test_println!(\"-> offset {:?}\", poff);","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:185:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> offset {:?}\", poff);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":5920,"byte_end":5965,"line_start":214,"line_end":214,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        test_println!(\"-> take: offset {:?}\", offset);","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:214:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> take: offset {:?}\", offset);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":6379,"byte_end":6418,"line_start":231,"line_end":231,"column_start":9,"column_end":48,"is_primary":false,"text":[{"text":"        test_println!(\"-> offset {:?}\", offset);","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> offset {:?}\", offset);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":8080,"byte_end":8138,"line_start":287,"line_end":287,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        test_println!(\"-> init_with: insert at offset: {}\", index);","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:287:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> init_with: insert at offset: {}\", index);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":8261,"byte_end":8311,"line_start":294,"line_end":294,"column_start":9,"column_end":59,"is_primary":false,"text":[{"text":"        test_println!(\"-> alloc new page ({})\", self.size);","highlight_start":9,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:294:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> alloc new page ({})\", self.size);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":9112,"byte_end":9151,"line_start":318,"line_end":318,"column_start":9,"column_end":48,"is_primary":false,"text":[{"text":"        test_println!(\"-> offset {:?}\", offset);","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:318:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> offset {:?}\", offset);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs","byte_start":9660,"byte_end":9699,"line_start":338,"line_end":338,"column_start":9,"column_end":48,"is_primary":false,"text":[{"text":"        test_println!(\"-> offset {:?}\", offset);","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/page/mod.rs:338:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> offset {:?}\", offset);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":2790,"byte_end":2820,"line_start":79,"line_end":79,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        test_println!(\"-> {:?}\", addr);","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:79:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> {:?}\", addr);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":3757,"byte_end":3800,"line_start":111,"line_end":111,"column_start":9,"column_end":52,"is_primary":false,"text":[{"text":"        test_println!(\"-> remove_local {:?}\", addr);","highlight_start":9,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:111:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> remove_local {:?}\", addr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":4293,"byte_end":4358,"line_start":125,"line_end":125,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        test_println!(\"-> take_remote {:?}; page {:?}\", addr, page_index);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:125:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> take_remote {:?}; page {:?}\", addr, page_index);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":5784,"byte_end":5846,"line_start":172,"line_end":172,"column_start":13,"column_end":75,"is_primary":false,"text":[{"text":"            test_println!(\"-> page {}; {:?}; {:?}\", page_idx, local, page);","highlight_start":13,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:172:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> page {}; {:?}; {:?}\", page_idx, local, page);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":6990,"byte_end":7124,"line_start":208,"line_end":212,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        test_println!(","highlight_start":9,"highlight_end":23},{"text":"            \"-> clear_after_release; self.tid={:?}; current.tid={:?};\",","highlight_start":1,"highlight_end":72},{"text":"            tid,","highlight_start":1,"highlight_end":17},{"text":"            self.tid","highlight_start":1,"highlight_end":21},{"text":"        );","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:208:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"-> clear_after_release; self.tid={:?}; current.tid={:?};\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tid,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            self.tid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":9162,"byte_end":9199,"line_start":286,"line_end":286,"column_start":9,"column_end":46,"is_primary":false,"text":[{"text":"        test_println!(\"-> get shard={}\", idx);","highlight_start":9,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:286:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> get shard={}\", idx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":9374,"byte_end":9409,"line_start":293,"line_end":293,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        test_println!(\"current: {:?}\", tid);","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:293:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"current: {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":9991,"byte_end":10061,"line_start":306,"line_end":306,"column_start":13,"column_end":83,"is_primary":false,"text":[{"text":"            test_println!(\"-> allocated new shard for index {} at {:p}\", idx, ptr);","highlight_start":13,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:306:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> allocated new shard for index {} at {:p}\", idx, ptr);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":10388,"byte_end":10463,"line_start":315,"line_end":315,"column_start":13,"column_end":88,"is_primary":false,"text":[{"text":"            test_println!(\"-> highest index={}, prev={}\", std::cmp::max(max, idx), max);","highlight_start":13,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:315:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> highest index={}, prev={}\", std::cmp::max(max, idx), max);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":10703,"byte_end":10735,"line_start":326,"line_end":326,"column_start":9,"column_end":41,"is_primary":false,"text":[{"text":"        test_println!(\"Array::iter_mut\");","highlight_start":9,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:326:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"Array::iter_mut\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":10787,"byte_end":10828,"line_start":328,"line_end":328,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        test_println!(\"-> highest index={}\", max);","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:328:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"-> highest index={}\", max);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":12603,"byte_end":12661,"line_start":381,"line_end":381,"column_start":9,"column_end":67,"is_primary":false,"text":[{"text":"        test_println!(\"---> loaded={:p} (order={:?})\", ptr, order);","highlight_start":9,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:381:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"---> loaded={:p} (order={:?})\", ptr, order);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":12702,"byte_end":12728,"line_start":383,"line_end":383,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            test_println!(\"---> null\");","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:383:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"---> null\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":13849,"byte_end":13879,"line_start":418,"line_end":418,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        test_println!(\"IterMut::next\");","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:418:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"IterMut::next\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":14222,"byte_end":14273,"line_start":425,"line_end":425,"column_start":13,"column_end":64,"is_primary":false,"text":[{"text":"            test_println!(\"-> next.is_some={}\", next.is_some());","highlight_start":13,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:425:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> next.is_some={}\", next.is_some());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs","byte_start":14346,"byte_end":14370,"line_start":427,"line_end":427,"column_start":17,"column_end":41,"is_primary":false,"text":[{"text":"                test_println!(\"-> done\");","highlight_start":17,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/shard.rs:427:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> done\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs","byte_start":4250,"byte_end":4254,"line_start":185,"line_end":185,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg(not(all(loom, any(feature = \"loom\", test))))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs","byte_start":4250,"byte_end":4254,"line_start":185,"line_end":185,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"#[cfg(not(all(loom, any(feature = \"loom\", test))))]","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs:185:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(not(all(loom, any(feature = \"loom\", test))))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `loom`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs","byte_start":4590,"byte_end":4594,"line_start":197,"line_end":197,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"#[cfg(all(test, not(loom)))]","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found config with similar value","code":null,"level":"help","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs","byte_start":4590,"byte_end":4594,"line_start":197,"line_end":197,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"#[cfg(all(test, not(loom)))]","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"feature = \"loom\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `loom`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/tid.rs:197:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[cfg(all(test, not(loom)))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: found config with similar value: `feature = \"loom\"`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(loom)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(loom)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":15473,"byte_end":15506,"line_start":422,"line_end":422,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        test_println!(\"insert {:?}\", tid);","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:422:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"insert {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":16606,"byte_end":16645,"line_start":457,"line_end":457,"column_start":9,"column_end":48,"is_primary":false,"text":[{"text":"        test_println!(\"vacant_entry {:?}\", tid);","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:457:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m457\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"vacant_entry {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":18747,"byte_end":18785,"line_start":518,"line_end":518,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        test_println!(\"rm_deferred {:?}\", tid);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:518:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m518\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"rm_deferred {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":21183,"byte_end":21212,"line_start":584,"line_end":584,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        test_println!(\"rm {:?}\", tid);","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:584:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"rm {:?}\", tid);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":22053,"byte_end":22118,"line_start":611,"line_end":611,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        test_println!(\"get {:?}; current={:?}\", tid, Tid::<C>::current());","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:611:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m611\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"get {:?}; current={:?}\", tid, Tid::<C>::current());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":25440,"byte_end":25511,"line_start":709,"line_end":709,"column_start":9,"column_end":80,"is_primary":false,"text":[{"text":"        test_println!(\"get_owned {:?}; current={:?}\", tid, Tid::<C>::current());","highlight_start":9,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:709:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m709\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"get_owned {:?}; current={:?}\", tid, Tid::<C>::current());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":32320,"byte_end":32371,"line_start":960,"line_end":960,"column_start":9,"column_end":60,"is_primary":false,"text":[{"text":"        test_println!(\"drop OwnedEntry: try clearing data\");","highlight_start":9,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:960:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m960\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        test_println!(\"drop OwnedEntry: try clearing data\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":32893,"byte_end":32934,"line_start":971,"line_end":971,"column_start":13,"column_end":54,"is_primary":false,"text":[{"text":"            test_println!(\"-> shard={:?}\", shard_idx);","highlight_start":13,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:971:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m971\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            test_println!(\"-> shard={:?}\", shard_idx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '''{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `slab_print`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":81,"byte_end":91,"line_start":3,"line_end":3,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        if cfg!(test) && cfg!(slab_print) {","highlight_start":31,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs","byte_start":33103,"byte_end":33174,"line_start":975,"line_end":975,"column_start":17,"column_end":88,"is_primary":false,"text":[{"text":"                test_println!(\"-> shard={:?} does not exist! THIS IS A BUG\", shard_idx);","highlight_start":17,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"test_println!","def_site_span":{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! test_println {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `slab_print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/macros.rs:3:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if cfg!(test) && cfg!(slab_print) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs:975:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m975\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                test_println!(\"-> shard={:?} does not exist! THIS IS A BUG\", shard_idx);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(slab_print)'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(slab_print)\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"105 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 105 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rmeta"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-sharded-slab-0.1.7"
## script = '''
## FROM scratch AS cratesio-sharded-slab-0.1.7
## ADD --chmod=0664 --unpack=true --checksum=sha256:f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6 \
##   https://static.crates.io/crates/sharded-slab/sharded-slab-0.1.7.crate /'''
## 
## [[stages]]
## name = "dep-n-sharded-slab-0.1.7-b9545388d9527f67"
## script = '''
## FROM rust-base AS dep-n-sharded-slab-0.1.7-b9545388d9527f67
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-sharded-slab-0.1.7,source=/sharded-slab-0.1.7,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7 \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="sharded_slab" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>" \
##         CARGO_PKG_DESCRIPTION="A lock-free concurrent slab.\n" \
##         CARGO_PKG_HOMEPAGE="https://github.com/hawkw/sharded-slab" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="sharded-slab" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/hawkw/sharded-slab" \
##         CARGO_PKG_RUST_VERSION="1.42.0" \
##         CARGO_PKG_VERSION="0.1.7" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="7" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'sharded_slab' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("loom"))' '-C' 'metadata=4ef5b49d9aea40b3' '-C' 'extra-filename=-b9545388d9527f67' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'lazy_static=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/sharded-slab-0.1.7/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-b9545388d9527f67-errcode'''
## 
## [[stages]]
## name = "out-b9545388d9527f67"
## script = """
## FROM scratch AS out-b9545388d9527f67
## COPY --from=dep-n-sharded-slab-0.1.7-b9545388d9527f67 /tmp/clis-ntpd_1-2-3/release/deps/*-b9545388d9527f67* /"""

FROM scratch AS cratesio-thread_local-1.1.8
ADD --chmod=0664 --unpack=true --checksum=sha256:8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c \
  https://static.crates.io/crates/thread_local/thread_local-1.1.8.crate /
FROM rust-base AS dep-n-thread_local-1.1.8-6893ca5c870c6e37
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-thread_local-1.1.8,source=/thread_local-1.1.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8 \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="thread_local" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Per-object thread-local storage" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="thread_local" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Amanieu/thread_local-rs" \
        CARGO_PKG_RUST_VERSION="1.59" \
        CARGO_PKG_VERSION="1.1.8" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="8" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'thread_local' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("nightly"))' '-C' 'metadata=40f6b266d7a2c112' '-C' 'extra-filename=-6893ca5c870c6e37' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-errcode
FROM scratch AS out-6893ca5c870c6e37
COPY --from=dep-n-thread_local-1.1.8-6893ca5c870c6e37 /tmp/clis-ntpd_1-2-3/release/deps/*-6893ca5c870c6e37* /

## this = "6893ca5c870c6e37"
## deps = [
##     "da34da6838abd7f1",
##     "6ed51fafe322ecba",
## ]
## short_externs = [
##     "da34da6838abd7f1",
##     "6ed51fafe322ecba",
## ]
## writes = [
##     "deps/thread_local-6893ca5c870c6e37.d",
##     "deps/libthread_local-6893ca5c870c6e37.rmeta",
##     "deps/libthread_local-6893ca5c870c6e37.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/thread_local-6893ca5c870c6e37.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"methods `unchecked_unwrap` and `unchecked_unwrap_none` are never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs","byte_start":461,"byte_end":479,"line_start":11,"line_end":11,"column_start":11,"column_end":29,"is_primary":false,"text":[{"text":"pub trait UncheckedOptionExt<T> {","highlight_start":11,"highlight_end":29}],"label":"methods in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs","byte_start":567,"byte_end":583,"line_start":13,"line_end":13,"column_start":15,"column_end":31,"is_primary":true,"text":[{"text":"    unsafe fn unchecked_unwrap(self) -> T;","highlight_start":15,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs","byte_start":671,"byte_end":692,"line_start":16,"line_end":16,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"    unsafe fn unchecked_unwrap_none(self);","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: methods `unchecked_unwrap` and `unchecked_unwrap_none` are never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs:13:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait UncheckedOptionExt<T> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethods in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// Get the value out of this Option without checking for None.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe fn unchecked_unwrap(self) -> T;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe fn unchecked_unwrap_none(self);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}',
##     '{"$message_type":"diagnostic","message":"method `unchecked_unwrap_err` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs","byte_start":795,"byte_end":813,"line_start":20,"line_end":20,"column_start":11,"column_end":29,"is_primary":false,"text":[{"text":"pub trait UncheckedResultExt<T, E> {","highlight_start":11,"highlight_end":29}],"label":"method in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs","byte_start":1016,"byte_end":1036,"line_start":25,"line_end":25,"column_start":15,"column_end":35,"is_primary":true,"text":[{"text":"    unsafe fn unchecked_unwrap_err(self) -> E;","highlight_start":15,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `unchecked_unwrap_err` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/unreachable.rs:25:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait UncheckedResultExt<T, E> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe fn unchecked_unwrap_err(self) -> E;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-thread_local-1.1.8"
## script = '''
## FROM scratch AS cratesio-thread_local-1.1.8
## ADD --chmod=0664 --unpack=true --checksum=sha256:8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c \
##   https://static.crates.io/crates/thread_local/thread_local-1.1.8.crate /'''
## 
## [[stages]]
## name = "dep-n-thread_local-1.1.8-6893ca5c870c6e37"
## script = '''
## FROM rust-base AS dep-n-thread_local-1.1.8-6893ca5c870c6e37
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-thread_local-1.1.8,source=/thread_local-1.1.8,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8 \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="thread_local" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
##         CARGO_PKG_DESCRIPTION="Per-object thread-local storage" \
##         CARGO_PKG_HOMEPAGE= \
##         CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="thread_local" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/Amanieu/thread_local-rs" \
##         CARGO_PKG_RUST_VERSION="1.59" \
##         CARGO_PKG_VERSION="1.1.8" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="1" \
##         CARGO_PKG_VERSION_PATCH="8" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'thread_local' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("nightly"))' '-C' 'metadata=40f6b266d7a2c112' '-C' 'extra-filename=-6893ca5c870c6e37' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'cfg_if=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta' '--extern' 'once_cell=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.1.8/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-6893ca5c870c6e37-errcode'''
## 
## [[stages]]
## name = "out-6893ca5c870c6e37"
## script = """
## FROM scratch AS out-6893ca5c870c6e37
## COPY --from=dep-n-thread_local-1.1.8-6893ca5c870c6e37 /tmp/clis-ntpd_1-2-3/release/deps/*-6893ca5c870c6e37* /"""

FROM scratch AS cratesio-tracing-subscriber-0.3.18
ADD --chmod=0664 --unpack=true --checksum=sha256:ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b \
  https://static.crates.io/crates/tracing-subscriber/tracing-subscriber-0.3.18.crate /
FROM rust-base AS dep-n-tracing-subscriber-0.3.18-63f992d9454962cc
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-tracing-subscriber-0.3.18,source=/tracing-subscriber-0.3.18,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18 \
  --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta,source=/libnu_ansi_term-c42192675aa050dd.rmeta \
  --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
  --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta,source=/libsharded_slab-b9545388d9527f67.rmeta \
  --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
  --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta,source=/libthread_local-6893ca5c870c6e37.rmeta \
  --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="tracing_subscriber" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/Cargo.toml" \
        CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>:David Barsky <me@davidbarsky.com>:Tokio Contributors <team@tokio.rs>" \
        CARGO_PKG_DESCRIPTION="Utilities for implementing and composing `tracing` subscribers.\n" \
        CARGO_PKG_HOMEPAGE="https://tokio.rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="tracing-subscriber" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
        CARGO_PKG_RUST_VERSION="1.63.0" \
        CARGO_PKG_VERSION="0.3.18" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="18" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'tracing_subscriber' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="ansi"' '--cfg' 'feature="fmt"' '--cfg' 'feature="nu-ansi-term"' '--cfg' 'feature="registry"' '--cfg' 'feature="sharded-slab"' '--cfg' 'feature="std"' '--cfg' 'feature="thread_local"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "ansi", "chrono", "default", "env-filter", "fmt", "json", "local-time", "matchers", "nu-ansi-term", "once_cell", "parking_lot", "regex", "registry", "serde", "serde_json", "sharded-slab", "smallvec", "std", "thread_local", "time", "tracing", "tracing-log", "tracing-serde", "valuable", "valuable-serde", "valuable_crate"))' '-C' 'metadata=47149c4da5c68ff3' '-C' 'extra-filename=-63f992d9454962cc' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'nu_ansi_term=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta' '--extern' 'sharded_slab=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta' '--extern' 'thread_local=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta' '--extern' 'tracing_core=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-errcode
FROM scratch AS out-63f992d9454962cc
COPY --from=dep-n-tracing-subscriber-0.3.18-63f992d9454962cc /tmp/clis-ntpd_1-2-3/release/deps/*-63f992d9454962cc* /

## this = "63f992d9454962cc"
## deps = [
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
##     "da34da6838abd7f1",
##     "6ed51fafe322ecba",
##     "100f3fe23952e4be",
## ]
## short_externs = [
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
##     "da34da6838abd7f1",
##     "6ed51fafe322ecba",
##     "100f3fe23952e4be",
## ]
## writes = [
##     "deps/tracing_subscriber-63f992d9454962cc.d",
##     "deps/libtracing_subscriber-63f992d9454962cc.rmeta",
##     "deps/libtracing_subscriber-63f992d9454962cc.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/tracing_subscriber-63f992d9454962cc.d","emit":"dep-info"}',
##     '{"$message_type":"diagnostic","message":"lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information","code":{"code":"renamed_and_removed_lints","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/lib.rs","byte_start":8217,"byte_end":8234,"line_start":189,"line_end":189,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    private_in_public,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(renamed_and_removed_lints)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/lib.rs:189:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    private_in_public,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(renamed_and_removed_lints)]` on by default\u001b[0m\n\n"}',
##     '''{"$message_type":"diagnostic","message":"elided lifetime has a name","code":{"code":"elided_named_lifetimes","explanation":null},"level":"warning","spans":[{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/registry/mod.rs","byte_start":4240,"byte_end":4242,"line_start":118,"line_end":118,"column_start":50,"column_end":52,"is_primary":true,"text":[{"text":"    fn span(&'a self, id: &Id) -> Option<SpanRef<'_, Self>>","highlight_start":50,"highlight_end":52}],"label":"this elided lifetime gets resolved as `'a`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/registry/mod.rs","byte_start":2991,"byte_end":2993,"line_start":92,"line_end":92,"column_start":22,"column_end":24,"is_primary":false,"text":[{"text":"pub trait LookupSpan<'a> {","highlight_start":22,"highlight_end":24}],"label":"lifetime `'a` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(elided_named_lifetimes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: elided lifetime has a name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/registry/mod.rs:118:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait LookupSpan<'a> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mlifetime `'a` declared here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn span(&'a self, id: &Id) -> Option<SpanRef<'_, Self>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis elided lifetime gets resolved as `'a`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(elided_named_lifetimes)]` on by default\u001b[0m\n\n"}''',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib","emit":"link"}',
##     '{"$message_type":"diagnostic","message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}',
## ]
## 
## [[externs]]
## from = "out-c42192675aa050dd"
## xtern = "libnu_ansi_term-c42192675aa050dd.rmeta"
## 
## [[externs]]
## from = "out-c42192675aa050dd"
## xtern = "libnu_ansi_term-c42192675aa050dd.rlib"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rmeta"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rlib"
## 
## [[externs]]
## from = "out-b9545388d9527f67"
## xtern = "libsharded_slab-b9545388d9527f67.rmeta"
## 
## [[externs]]
## from = "out-b9545388d9527f67"
## xtern = "libsharded_slab-b9545388d9527f67.rlib"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rmeta"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rlib"
## 
## [[externs]]
## from = "out-6893ca5c870c6e37"
## xtern = "libthread_local-6893ca5c870c6e37.rmeta"
## 
## [[externs]]
## from = "out-6893ca5c870c6e37"
## xtern = "libthread_local-6893ca5c870c6e37.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rmeta"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-tracing-subscriber-0.3.18"
## script = '''
## FROM scratch AS cratesio-tracing-subscriber-0.3.18
## ADD --chmod=0664 --unpack=true --checksum=sha256:ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b \
##   https://static.crates.io/crates/tracing-subscriber/tracing-subscriber-0.3.18.crate /'''
## 
## [[stages]]
## name = "dep-n-tracing-subscriber-0.3.18-63f992d9454962cc"
## script = '''
## FROM rust-base AS dep-n-tracing-subscriber-0.3.18-63f992d9454962cc
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-tracing-subscriber-0.3.18,source=/tracing-subscriber-0.3.18,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18 \
##   --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta,source=/libnu_ansi_term-c42192675aa050dd.rmeta \
##   --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
##   --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta,source=/libsharded_slab-b9545388d9527f67.rmeta \
##   --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
##   --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta,source=/libthread_local-6893ca5c870c6e37.rmeta \
##   --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="tracing_subscriber" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/Cargo.toml" \
##         CARGO_PKG_AUTHORS="Eliza Weisman <eliza@buoyant.io>:David Barsky <me@davidbarsky.com>:Tokio Contributors <team@tokio.rs>" \
##         CARGO_PKG_DESCRIPTION="Utilities for implementing and composing `tracing` subscribers.\n" \
##         CARGO_PKG_HOMEPAGE="https://tokio.rs" \
##         CARGO_PKG_LICENSE="MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="tracing-subscriber" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/tokio-rs/tracing" \
##         CARGO_PKG_RUST_VERSION="1.63.0" \
##         CARGO_PKG_VERSION="0.3.18" \
##         CARGO_PKG_VERSION_MAJOR="0" \
##         CARGO_PKG_VERSION_MINOR="3" \
##         CARGO_PKG_VERSION_PATCH="18" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'tracing_subscriber' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="ansi"' '--cfg' 'feature="fmt"' '--cfg' 'feature="nu-ansi-term"' '--cfg' 'feature="registry"' '--cfg' 'feature="sharded-slab"' '--cfg' 'feature="std"' '--cfg' 'feature="thread_local"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "ansi", "chrono", "default", "env-filter", "fmt", "json", "local-time", "matchers", "nu-ansi-term", "once_cell", "parking_lot", "regex", "registry", "serde", "serde_json", "sharded-slab", "smallvec", "std", "thread_local", "time", "tracing", "tracing-log", "tracing-serde", "valuable", "valuable-serde", "valuable_crate"))' '-C' 'metadata=47149c4da5c68ff3' '-C' 'extra-filename=-63f992d9454962cc' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'nu_ansi_term=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta' '--extern' 'sharded_slab=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta' '--extern' 'thread_local=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta' '--extern' 'tracing_core=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/tracing-subscriber-0.3.18/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-63f992d9454962cc-errcode'''
## 
## [[stages]]
## name = "out-63f992d9454962cc"
## script = """
## FROM scratch AS out-63f992d9454962cc
## COPY --from=dep-n-tracing-subscriber-0.3.18-63f992d9454962cc /tmp/clis-ntpd_1-2-3/release/deps/*-63f992d9454962cc* /"""

FROM scratch AS cratesio-ntpd-1.2.3
ADD --chmod=0664 --unpack=true --checksum=sha256:9f848dc6ea4c2b8d55d47eb3037112c083c56ea59893a71c398df2781ce3f020 \
  https://static.crates.io/crates/ntpd/ntpd-1.2.3.crate /
FROM rust-base AS dep-n-ntpd-1.2.3-7974610cfc5e520c
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ntpd-1.2.3,source=/ntpd-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3 \
  --mount=from=out-2b00e18c8782890c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so,source=/libasync_trait-2b00e18c8782890c.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rmeta,source=/libclock_steering-7adc6d6ce8be0538.rmeta \
  --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib,source=/libclock_steering-7adc6d6ce8be0538.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rmeta,source=/libntp_proto-5a810c5444456e7d.rmeta \
  --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib,source=/libntp_proto-5a810c5444456e7d.rlib \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta,source=/libaes_siv-e0325614c1d7d6ab.rmeta \
  --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
  --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta,source=/libmd5-f0775f4337e7a668.rmeta \
  --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
  --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta,source=/librand-5161209caf71d483.rmeta \
  --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
  --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta,source=/librustls-fd2c262888e3ecb5.rmeta \
  --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
  --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rmeta,source=/librustls_native_certs-9a69f5c8c648a58b.rmeta \
  --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib,source=/librustls_native_certs-9a69f5c8c648a58b.rlib \
  --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta,source=/libopenssl_probe-0ee236ae7bf0c632.rmeta \
  --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
  --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta,source=/librustls_pemfile-e86acdc6389f12a9.rmeta \
  --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
  --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rmeta,source=/libserde_json-2a345737f765283a.rmeta \
  --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib,source=/libserde_json-2a345737f765283a.rlib \
  --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta,source=/libitoa-95ec35c9faa8fa43.rmeta \
  --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
  --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta,source=/libryu-56a874feb6525857.rmeta \
  --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
  --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rmeta,source=/libtimestamped_socket-2f59881207cd7c68.rmeta \
  --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib,source=/libtimestamped_socket-2f59881207cd7c68.rlib \
  --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta,source=/libtokio-e6ed429a0a7450c0.rmeta \
  --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
  --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
  --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rmeta,source=/libtoml-7b6c235fb7422577.rmeta \
  --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib,source=/libtoml-7b6c235fb7422577.rlib \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
  --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta,source=/libtoml_edit-90c6c24e7a16fdd6.rmeta \
  --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
  --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rmeta,source=/libtracing_subscriber-63f992d9454962cc.rmeta \
  --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib,source=/libtracing_subscriber-63f992d9454962cc.rlib \
  --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta,source=/libnu_ansi_term-c42192675aa050dd.rmeta \
  --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
  --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta,source=/libsharded_slab-b9545388d9527f67.rmeta \
  --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
  --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta,source=/libthread_local-6893ca5c870c6e37.rmeta \
  --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ntpd" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Full-featured implementation of NTP with NTS support" \
        CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ntpd" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_RUST_VERSION="1.70" \
        CARGO_PKG_VERSION="1.2.3" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ntpd-5112a70c08bbb891/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ntpd' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "hardware-timestamping", "unstable_ntpv5", "unstable_nts-pool"))' '-C' 'metadata=6a632aca8f277a0f' '-C' 'extra-filename=-7974610cfc5e520c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'async_trait=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so' '--extern' 'clock_steering=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'ntp_proto=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rmeta' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta' '--extern' 'rustls_native_certs=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rmeta' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_json=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rmeta' '--extern' 'timestamped_socket=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rmeta' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta' '--extern' 'toml=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--extern' 'tracing_subscriber=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/src/lib.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-errcode
FROM scratch AS out-7974610cfc5e520c
COPY --from=dep-n-ntpd-1.2.3-7974610cfc5e520c /tmp/clis-ntpd_1-2-3/release/deps/*-7974610cfc5e520c* /

## this = "7974610cfc5e520c"
## deps = [
##     "2b00e18c8782890c",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7adc6d6ce8be0538",
##     "a7905fdc410bdfce",
##     "5a810c5444456e7d",
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "9a69f5c8c648a58b",
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "2a345737f765283a",
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "2f59881207cd7c68",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7b6c235fb7422577",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
##     "63f992d9454962cc",
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
## ]
## short_externs = [
##     "2b00e18c8782890c",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7adc6d6ce8be0538",
##     "a7905fdc410bdfce",
##     "5a810c5444456e7d",
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "9a69f5c8c648a58b",
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "2a345737f765283a",
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "2f59881207cd7c68",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7b6c235fb7422577",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
##     "63f992d9454962cc",
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
## ]
## writes = [
##     "deps/ntpd-7974610cfc5e520c.d",
##     "deps/libntpd-7974610cfc5e520c.rmeta",
##     "deps/libntpd-7974610cfc5e520c.rlib",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ntpd-7974610cfc5e520c.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rmeta","emit":"metadata"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rlib","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2b00e18c8782890c"
## xtern = "libasync_trait-2b00e18c8782890c.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rmeta"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rmeta"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rmeta"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rmeta"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-7adc6d6ce8be0538"
## xtern = "libclock_steering-7adc6d6ce8be0538.rmeta"
## 
## [[externs]]
## from = "out-7adc6d6ce8be0538"
## xtern = "libclock_steering-7adc6d6ce8be0538.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rmeta"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-5a810c5444456e7d"
## xtern = "libntp_proto-5a810c5444456e7d.rmeta"
## 
## [[externs]]
## from = "out-5a810c5444456e7d"
## xtern = "libntp_proto-5a810c5444456e7d.rlib"
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rmeta"
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rmeta"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rmeta"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rmeta"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rmeta"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rmeta"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rmeta"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-e0325614c1d7d6ab"
## xtern = "libaes_siv-e0325614c1d7d6ab.rmeta"
## 
## [[externs]]
## from = "out-e0325614c1d7d6ab"
## xtern = "libaes_siv-e0325614c1d7d6ab.rlib"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rmeta"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rlib"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rmeta"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rmeta"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rmeta"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rlib"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rmeta"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rlib"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rmeta"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rmeta"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rmeta"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rmeta"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rmeta"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rlib"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rmeta"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rlib"
## 
## [[externs]]
## from = "out-f0775f4337e7a668"
## xtern = "libmd5-f0775f4337e7a668.rmeta"
## 
## [[externs]]
## from = "out-f0775f4337e7a668"
## xtern = "libmd5-f0775f4337e7a668.rlib"
## 
## [[externs]]
## from = "out-5161209caf71d483"
## xtern = "librand-5161209caf71d483.rmeta"
## 
## [[externs]]
## from = "out-5161209caf71d483"
## xtern = "librand-5161209caf71d483.rlib"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rmeta"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rlib"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rmeta"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rlib"
## 
## [[externs]]
## from = "out-fd2c262888e3ecb5"
## xtern = "librustls-fd2c262888e3ecb5.rmeta"
## 
## [[externs]]
## from = "out-fd2c262888e3ecb5"
## xtern = "librustls-fd2c262888e3ecb5.rlib"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rmeta"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rmeta"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rmeta"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rmeta"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rmeta"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rmeta"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rmeta"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rmeta"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rmeta"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rmeta"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-ff2e92028461b3cf"
## xtern = "libtracing_attributes-ff2e92028461b3cf.so"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rmeta"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[externs]]
## from = "out-9a69f5c8c648a58b"
## xtern = "librustls_native_certs-9a69f5c8c648a58b.rmeta"
## 
## [[externs]]
## from = "out-9a69f5c8c648a58b"
## xtern = "librustls_native_certs-9a69f5c8c648a58b.rlib"
## 
## [[externs]]
## from = "out-0ee236ae7bf0c632"
## xtern = "libopenssl_probe-0ee236ae7bf0c632.rmeta"
## 
## [[externs]]
## from = "out-0ee236ae7bf0c632"
## xtern = "libopenssl_probe-0ee236ae7bf0c632.rlib"
## 
## [[externs]]
## from = "out-e86acdc6389f12a9"
## xtern = "librustls_pemfile-e86acdc6389f12a9.rmeta"
## 
## [[externs]]
## from = "out-e86acdc6389f12a9"
## xtern = "librustls_pemfile-e86acdc6389f12a9.rlib"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rmeta"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rlib"
## 
## [[externs]]
## from = "out-2a345737f765283a"
## xtern = "libserde_json-2a345737f765283a.rmeta"
## 
## [[externs]]
## from = "out-2a345737f765283a"
## xtern = "libserde_json-2a345737f765283a.rlib"
## 
## [[externs]]
## from = "out-95ec35c9faa8fa43"
## xtern = "libitoa-95ec35c9faa8fa43.rmeta"
## 
## [[externs]]
## from = "out-95ec35c9faa8fa43"
## xtern = "libitoa-95ec35c9faa8fa43.rlib"
## 
## [[externs]]
## from = "out-56a874feb6525857"
## xtern = "libryu-56a874feb6525857.rmeta"
## 
## [[externs]]
## from = "out-56a874feb6525857"
## xtern = "libryu-56a874feb6525857.rlib"
## 
## [[externs]]
## from = "out-2f59881207cd7c68"
## xtern = "libtimestamped_socket-2f59881207cd7c68.rmeta"
## 
## [[externs]]
## from = "out-2f59881207cd7c68"
## xtern = "libtimestamped_socket-2f59881207cd7c68.rlib"
## 
## [[externs]]
## from = "out-e6ed429a0a7450c0"
## xtern = "libtokio-e6ed429a0a7450c0.rmeta"
## 
## [[externs]]
## from = "out-e6ed429a0a7450c0"
## xtern = "libtokio-e6ed429a0a7450c0.rlib"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rmeta"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rlib"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rmeta"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rlib"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rmeta"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rlib"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rmeta"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rlib"
## 
## [[externs]]
## from = "out-56d9f1f76b7466fe"
## xtern = "libtokio_macros-56d9f1f76b7466fe.so"
## 
## [[externs]]
## from = "out-7b6c235fb7422577"
## xtern = "libtoml-7b6c235fb7422577.rmeta"
## 
## [[externs]]
## from = "out-7b6c235fb7422577"
## xtern = "libtoml-7b6c235fb7422577.rlib"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rmeta"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rlib"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rmeta"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rlib"
## 
## [[externs]]
## from = "out-90c6c24e7a16fdd6"
## xtern = "libtoml_edit-90c6c24e7a16fdd6.rmeta"
## 
## [[externs]]
## from = "out-90c6c24e7a16fdd6"
## xtern = "libtoml_edit-90c6c24e7a16fdd6.rlib"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rmeta"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rlib"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rmeta"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rlib"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rmeta"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rlib"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rmeta"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rlib"
## 
## [[externs]]
## from = "out-63f992d9454962cc"
## xtern = "libtracing_subscriber-63f992d9454962cc.rmeta"
## 
## [[externs]]
## from = "out-63f992d9454962cc"
## xtern = "libtracing_subscriber-63f992d9454962cc.rlib"
## 
## [[externs]]
## from = "out-c42192675aa050dd"
## xtern = "libnu_ansi_term-c42192675aa050dd.rmeta"
## 
## [[externs]]
## from = "out-c42192675aa050dd"
## xtern = "libnu_ansi_term-c42192675aa050dd.rlib"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rmeta"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rlib"
## 
## [[externs]]
## from = "out-b9545388d9527f67"
## xtern = "libsharded_slab-b9545388d9527f67.rmeta"
## 
## [[externs]]
## from = "out-b9545388d9527f67"
## xtern = "libsharded_slab-b9545388d9527f67.rlib"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rmeta"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rlib"
## 
## [[externs]]
## from = "out-6893ca5c870c6e37"
## xtern = "libthread_local-6893ca5c870c6e37.rmeta"
## 
## [[externs]]
## from = "out-6893ca5c870c6e37"
## xtern = "libthread_local-6893ca5c870c6e37.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ntpd-1.2.3"
## script = '''
## FROM scratch AS cratesio-ntpd-1.2.3
## ADD --chmod=0664 --unpack=true --checksum=sha256:9f848dc6ea4c2b8d55d47eb3037112c083c56ea59893a71c398df2781ce3f020 \
##   https://static.crates.io/crates/ntpd/ntpd-1.2.3.crate /'''
## 
## [[stages]]
## name = "dep-n-ntpd-1.2.3-7974610cfc5e520c"
## script = '''
## FROM rust-base AS dep-n-ntpd-1.2.3-7974610cfc5e520c
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ntpd-1.2.3,source=/ntpd-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3 \
##   --mount=from=out-2b00e18c8782890c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so,source=/libasync_trait-2b00e18c8782890c.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rmeta,source=/libproc_macro2-4be32d01ee2a9db1.rmeta \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rmeta,source=/libunicode_ident-4c1dc76c11b3deb8.rmeta \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rmeta,source=/libquote-36ed05d339fc79f9.rmeta \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rmeta,source=/libsyn-5c1d3e18a7dfcf78.rmeta \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rmeta,source=/libclock_steering-7adc6d6ce8be0538.rmeta \
##   --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib,source=/libclock_steering-7adc6d6ce8be0538.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta,source=/liblibc-a7905fdc410bdfce.rmeta \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rmeta,source=/libntp_proto-5a810c5444456e7d.rmeta \
##   --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib,source=/libntp_proto-5a810c5444456e7d.rlib \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rmeta,source=/libaead-2ba1712ad50273ba.rmeta \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rmeta,source=/libcrypto_common-1009fce94369ad6b.rmeta \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rmeta,source=/libgeneric_array-2d6ea4fd5d7ef666.rmeta \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rmeta,source=/libtypenum-981b1f3c4161234a.rmeta \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rmeta,source=/librand_core-434e8a9dd58e4456.rmeta \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rmeta,source=/libgetrandom-84473f2ddfbb434a.rmeta \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rmeta,source=/libcfg_if-da34da6838abd7f1.rmeta \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rmeta,source=/libaes_siv-e0325614c1d7d6ab.rmeta \
##   --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rmeta,source=/libaes-81c9db97d7f9be78.rmeta \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rmeta,source=/libcipher-ca1baada07864a60.rmeta \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rmeta,source=/libinout-56f37e149446be27.rmeta \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rmeta,source=/libcpufeatures-4ab791033e58debd.rmeta \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rmeta,source=/libcmac-568874dfd4c5be74.rmeta \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rmeta,source=/libdbl-19f9a0f198045bc5.rmeta \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rmeta,source=/libdigest-65e96f3f500a3098.rmeta \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rmeta,source=/libblock_buffer-bc12f6e8b62af3c6.rmeta \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rmeta,source=/libsubtle-8b6e21d4a5a6c6ed.rmeta \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rmeta,source=/libctr-aca4c84266bacfb7.rmeta \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rmeta,source=/libzeroize-caf2b0ffe78763b7.rmeta \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
##   --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rmeta,source=/libmd5-f0775f4337e7a668.rmeta \
##   --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
##   --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta,source=/librand-5161209caf71d483.rmeta \
##   --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rmeta,source=/librand_chacha-8e2f025dcc32e9af.rmeta \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rmeta,source=/libppv_lite86-af198cb5433f3d0c.rmeta \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
##   --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta,source=/librustls-fd2c262888e3ecb5.rmeta \
##   --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rmeta,source=/liblog-b564a3159bfcf688.rmeta \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rmeta,source=/libonce_cell-6ed51fafe322ecba.rmeta \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rmeta,source=/libring-162d4bd1f192637c.rmeta \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rmeta,source=/libspin-126f99f44d356e93.rmeta \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rmeta,source=/libuntrusted-2cf0189e0a6f5785.rmeta \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rmeta,source=/librustls_pki_types-0bd417676bde33fe.rmeta \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rmeta,source=/libwebpki-0b45a7938c797eef.rmeta \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta,source=/libserde-986325a49dffbcd1.rmeta \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta,source=/libtracing-7d2675bffdb63c95.rmeta \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rmeta,source=/libpin_project_lite-32982cb980ef9328.rmeta \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rmeta,source=/libtracing_core-100f3fe23952e4be.rmeta \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##   --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rmeta,source=/librustls_native_certs-9a69f5c8c648a58b.rmeta \
##   --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib,source=/librustls_native_certs-9a69f5c8c648a58b.rlib \
##   --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rmeta,source=/libopenssl_probe-0ee236ae7bf0c632.rmeta \
##   --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
##   --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta,source=/librustls_pemfile-e86acdc6389f12a9.rmeta \
##   --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rmeta,source=/libbase64-b08e25582a8fdf7e.rmeta \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
##   --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rmeta,source=/libserde_json-2a345737f765283a.rmeta \
##   --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib,source=/libserde_json-2a345737f765283a.rlib \
##   --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rmeta,source=/libitoa-95ec35c9faa8fa43.rmeta \
##   --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
##   --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rmeta,source=/libryu-56a874feb6525857.rmeta \
##   --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
##   --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rmeta,source=/libtimestamped_socket-2f59881207cd7c68.rmeta \
##   --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib,source=/libtimestamped_socket-2f59881207cd7c68.rlib \
##   --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta,source=/libtokio-e6ed429a0a7450c0.rmeta \
##   --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rmeta,source=/libbytes-17cf73a7d3f13d95.rmeta \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rmeta,source=/libmio-57de3125ece5b1fd.rmeta \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rmeta,source=/libnum_cpus-516d6049f106f6a2.rmeta \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rmeta,source=/libsocket2-4f06700ac893bf17.rmeta \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
##   --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
##   --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rmeta,source=/libtoml-7b6c235fb7422577.rmeta \
##   --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib,source=/libtoml-7b6c235fb7422577.rlib \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rmeta,source=/libserde_spanned-dc39aa05fabf8bb2.rmeta \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rmeta,source=/libtoml_datetime-f1d69a8e9c76a596.rmeta \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
##   --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rmeta,source=/libtoml_edit-90c6c24e7a16fdd6.rmeta \
##   --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rmeta,source=/libindexmap-bd5f37b7de678bd9.rmeta \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rmeta,source=/libequivalent-bd5b9404126e35a1.rmeta \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rmeta,source=/libhashbrown-8bb46fd37d0b1c2d.rmeta \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rmeta,source=/libwinnow-f45e6953436548b2.rmeta \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
##   --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rmeta,source=/libtracing_subscriber-63f992d9454962cc.rmeta \
##   --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib,source=/libtracing_subscriber-63f992d9454962cc.rlib \
##   --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rmeta,source=/libnu_ansi_term-c42192675aa050dd.rmeta \
##   --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rmeta,source=/liboverload-94fa3b5a5c6dc522.rmeta \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
##   --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rmeta,source=/libsharded_slab-b9545388d9527f67.rmeta \
##   --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rmeta,source=/liblazy_static-f91da618dd3f72e5.rmeta \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
##   --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rmeta,source=/libthread_local-6893ca5c870c6e37.rmeta \
##   --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_CRATE_NAME="ntpd" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Full-featured implementation of NTP with NTS support" \
##         CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ntpd" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_RUST_VERSION="1.70" \
##         CARGO_PKG_VERSION="1.2.3" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="3" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGO_PRIMARY_PACKAGE="1" \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ntpd-5112a70c08bbb891/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ntpd' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "hardware-timestamping", "unstable_ntpv5", "unstable_nts-pool"))' '-C' 'metadata=6a632aca8f277a0f' '-C' 'extra-filename=-7974610cfc5e520c' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'async_trait=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so' '--extern' 'clock_steering=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rmeta' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rmeta' '--extern' 'ntp_proto=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rmeta' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rmeta' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rmeta' '--extern' 'rustls_native_certs=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rmeta' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rmeta' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rmeta' '--extern' 'serde_json=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rmeta' '--extern' 'timestamped_socket=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rmeta' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rmeta' '--extern' 'toml=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rmeta' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rmeta' '--extern' 'tracing_subscriber=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rmeta' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/src/lib.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-7974610cfc5e520c-errcode'''
## 
## [[stages]]
## name = "out-7974610cfc5e520c"
## script = """
## FROM scratch AS out-7974610cfc5e520c
## COPY --from=dep-n-ntpd-1.2.3-7974610cfc5e520c /tmp/clis-ntpd_1-2-3/release/deps/*-7974610cfc5e520c* /"""


FROM rust-base AS dep-n-ntpd-1.2.3-88b4a2cd7d00f909
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
RUN \
  --mount=from=cratesio-ntpd-1.2.3,source=/ntpd-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3 \
  --mount=from=out-2b00e18c8782890c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so,source=/libasync_trait-2b00e18c8782890c.so \
  --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
  --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
  --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
  --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
  --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib,source=/libclock_steering-7adc6d6ce8be0538.rlib \
  --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
  --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib,source=/libntp_proto-5a810c5444456e7d.rlib \
  --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
  --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
  --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
  --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
  --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
  --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
  --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
  --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
  --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
  --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
  --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
  --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
  --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
  --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
  --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
  --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
  --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
  --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
  --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
  --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
  --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
  --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
  --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
  --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
  --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
  --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
  --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
  --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
  --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
  --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
  --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
  --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
  --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
  --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
  --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
  --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
  --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
  --mount=from=out-7974610cfc5e520c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rlib,source=/libntpd-7974610cfc5e520c.rlib \
  --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib,source=/librustls_native_certs-9a69f5c8c648a58b.rlib \
  --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
  --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
  --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
  --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib,source=/libserde_json-2a345737f765283a.rlib \
  --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
  --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
  --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib,source=/libtimestamped_socket-2f59881207cd7c68.rlib \
  --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
  --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
  --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
  --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
  --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
  --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
  --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib,source=/libtoml-7b6c235fb7422577.rlib \
  --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
  --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
  --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
  --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
  --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
  --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
  --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
  --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib,source=/libtracing_subscriber-63f992d9454962cc.rlib \
  --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
  --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
  --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
  --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
  --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_BIN_NAME="ntp-daemon" \
        CARGO_CRATE_NAME="ntp_daemon" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS= \
        CARGO_PKG_DESCRIPTION="Full-featured implementation of NTP with NTS support" \
        CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ntpd" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
        CARGO_PKG_RUST_VERSION="1.70" \
        CARGO_PKG_VERSION="1.2.3" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ntpd-5112a70c08bbb891/out" \
        CARGOGREEN=1 \
        NTPD_RS_GIT_DATE="2025-05-09" \
        NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
      rustc '--crate-name' 'ntp_daemon' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'bin' '--emit' 'dep-info,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "hardware-timestamping", "unstable_ntpv5", "unstable_nts-pool"))' '-C' 'metadata=52cef03e832d528d' '-C' 'extra-filename=-88b4a2cd7d00f909' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'async_trait=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so' '--extern' 'clock_steering=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib' '--extern' 'ntp_proto=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib' '--extern' 'ntpd=/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rlib' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib' '--extern' 'rustls_native_certs=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib' '--extern' 'serde_json=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib' '--extern' 'timestamped_socket=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib' '--extern' 'toml=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib' '--extern' 'tracing_subscriber=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/bin/ntp-daemon.rs \
        1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-stdout) \
        2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-stderr >&2) \
        || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-errcode
FROM scratch AS out-88b4a2cd7d00f909
COPY --from=dep-n-ntpd-1.2.3-88b4a2cd7d00f909 /tmp/clis-ntpd_1-2-3/release/deps/*-88b4a2cd7d00f909* /

# Pipe this file to (not portable due to usage of local build contexts):
# DOCKER_BUILDKIT="1" \
#   docker build --network=none --output=. --build-context=crate_out-e5fe159846b3109b=/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out --build-context=crate_out-a7d381539c9ce48d=/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out --build-context=crate_out-a0b19822430eae69=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out - <THIS_FILE

## this = "88b4a2cd7d00f909"
## deps = [
##     "2b00e18c8782890c",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7adc6d6ce8be0538",
##     "a7905fdc410bdfce",
##     "5a810c5444456e7d",
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "7974610cfc5e520c",
##     "9a69f5c8c648a58b",
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "2a345737f765283a",
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "2f59881207cd7c68",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7b6c235fb7422577",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
##     "63f992d9454962cc",
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
## ]
## short_externs = [
##     "2b00e18c8782890c",
##     "4be32d01ee2a9db1",
##     "4c1dc76c11b3deb8",
##     "36ed05d339fc79f9",
##     "5c1d3e18a7dfcf78",
##     "7adc6d6ce8be0538",
##     "a7905fdc410bdfce",
##     "5a810c5444456e7d",
##     "2ba1712ad50273ba",
##     "1009fce94369ad6b",
##     "2d6ea4fd5d7ef666",
##     "981b1f3c4161234a",
##     "434e8a9dd58e4456",
##     "84473f2ddfbb434a",
##     "da34da6838abd7f1",
##     "e0325614c1d7d6ab",
##     "81c9db97d7f9be78",
##     "ca1baada07864a60",
##     "56f37e149446be27",
##     "4ab791033e58debd",
##     "568874dfd4c5be74",
##     "19f9a0f198045bc5",
##     "65e96f3f500a3098",
##     "bc12f6e8b62af3c6",
##     "8b6e21d4a5a6c6ed",
##     "aca4c84266bacfb7",
##     "caf2b0ffe78763b7",
##     "f0775f4337e7a668",
##     "5161209caf71d483",
##     "8e2f025dcc32e9af",
##     "af198cb5433f3d0c",
##     "fd2c262888e3ecb5",
##     "b564a3159bfcf688",
##     "6ed51fafe322ecba",
##     "162d4bd1f192637c",
##     "126f99f44d356e93",
##     "2cf0189e0a6f5785",
##     "0bd417676bde33fe",
##     "0b45a7938c797eef",
##     "986325a49dffbcd1",
##     "b74741511dfa898a",
##     "7d2675bffdb63c95",
##     "32982cb980ef9328",
##     "ff2e92028461b3cf",
##     "100f3fe23952e4be",
##     "7974610cfc5e520c",
##     "9a69f5c8c648a58b",
##     "0ee236ae7bf0c632",
##     "e86acdc6389f12a9",
##     "b08e25582a8fdf7e",
##     "2a345737f765283a",
##     "95ec35c9faa8fa43",
##     "56a874feb6525857",
##     "2f59881207cd7c68",
##     "e6ed429a0a7450c0",
##     "17cf73a7d3f13d95",
##     "57de3125ece5b1fd",
##     "516d6049f106f6a2",
##     "4f06700ac893bf17",
##     "56d9f1f76b7466fe",
##     "7b6c235fb7422577",
##     "dc39aa05fabf8bb2",
##     "f1d69a8e9c76a596",
##     "90c6c24e7a16fdd6",
##     "bd5f37b7de678bd9",
##     "bd5b9404126e35a1",
##     "8bb46fd37d0b1c2d",
##     "f45e6953436548b2",
##     "63f992d9454962cc",
##     "c42192675aa050dd",
##     "94fa3b5a5c6dc522",
##     "b9545388d9527f67",
##     "f91da618dd3f72e5",
##     "6893ca5c870c6e37",
## ]
## writes = [
##     "deps/ntp_daemon-88b4a2cd7d00f909.d",
##     "deps/ntp_daemon-88b4a2cd7d00f909",
## ]
## stderr = [
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ntp_daemon-88b4a2cd7d00f909.d","emit":"dep-info"}',
##     '{"$message_type":"artifact","artifact":"/tmp/clis-ntpd_1-2-3/release/deps/ntp_daemon-88b4a2cd7d00f909","emit":"link"}',
## ]
## 
## [[externs]]
## from = "out-2b00e18c8782890c"
## xtern = "libasync_trait-2b00e18c8782890c.so"
## 
## [[externs]]
## from = "out-4be32d01ee2a9db1"
## xtern = "libproc_macro2-4be32d01ee2a9db1.rlib"
## 
## [[externs]]
## from = "out-4c1dc76c11b3deb8"
## xtern = "libunicode_ident-4c1dc76c11b3deb8.rlib"
## 
## [[externs]]
## from = "out-36ed05d339fc79f9"
## xtern = "libquote-36ed05d339fc79f9.rlib"
## 
## [[externs]]
## from = "out-5c1d3e18a7dfcf78"
## xtern = "libsyn-5c1d3e18a7dfcf78.rlib"
## 
## [[externs]]
## from = "out-7adc6d6ce8be0538"
## xtern = "libclock_steering-7adc6d6ce8be0538.rlib"
## 
## [[externs]]
## from = "out-a7905fdc410bdfce"
## xtern = "liblibc-a7905fdc410bdfce.rlib"
## 
## [[externs]]
## from = "out-5a810c5444456e7d"
## xtern = "libntp_proto-5a810c5444456e7d.rlib"
## 
## [[externs]]
## from = "out-2ba1712ad50273ba"
## xtern = "libaead-2ba1712ad50273ba.rlib"
## 
## [[externs]]
## from = "out-1009fce94369ad6b"
## xtern = "libcrypto_common-1009fce94369ad6b.rlib"
## 
## [[externs]]
## from = "out-2d6ea4fd5d7ef666"
## xtern = "libgeneric_array-2d6ea4fd5d7ef666.rlib"
## 
## [[externs]]
## from = "out-981b1f3c4161234a"
## xtern = "libtypenum-981b1f3c4161234a.rlib"
## 
## [[externs]]
## from = "out-434e8a9dd58e4456"
## xtern = "librand_core-434e8a9dd58e4456.rlib"
## 
## [[externs]]
## from = "out-84473f2ddfbb434a"
## xtern = "libgetrandom-84473f2ddfbb434a.rlib"
## 
## [[externs]]
## from = "out-da34da6838abd7f1"
## xtern = "libcfg_if-da34da6838abd7f1.rlib"
## 
## [[externs]]
## from = "out-e0325614c1d7d6ab"
## xtern = "libaes_siv-e0325614c1d7d6ab.rlib"
## 
## [[externs]]
## from = "out-81c9db97d7f9be78"
## xtern = "libaes-81c9db97d7f9be78.rlib"
## 
## [[externs]]
## from = "out-ca1baada07864a60"
## xtern = "libcipher-ca1baada07864a60.rlib"
## 
## [[externs]]
## from = "out-56f37e149446be27"
## xtern = "libinout-56f37e149446be27.rlib"
## 
## [[externs]]
## from = "out-4ab791033e58debd"
## xtern = "libcpufeatures-4ab791033e58debd.rlib"
## 
## [[externs]]
## from = "out-568874dfd4c5be74"
## xtern = "libcmac-568874dfd4c5be74.rlib"
## 
## [[externs]]
## from = "out-19f9a0f198045bc5"
## xtern = "libdbl-19f9a0f198045bc5.rlib"
## 
## [[externs]]
## from = "out-65e96f3f500a3098"
## xtern = "libdigest-65e96f3f500a3098.rlib"
## 
## [[externs]]
## from = "out-bc12f6e8b62af3c6"
## xtern = "libblock_buffer-bc12f6e8b62af3c6.rlib"
## 
## [[externs]]
## from = "out-8b6e21d4a5a6c6ed"
## xtern = "libsubtle-8b6e21d4a5a6c6ed.rlib"
## 
## [[externs]]
## from = "out-aca4c84266bacfb7"
## xtern = "libctr-aca4c84266bacfb7.rlib"
## 
## [[externs]]
## from = "out-caf2b0ffe78763b7"
## xtern = "libzeroize-caf2b0ffe78763b7.rlib"
## 
## [[externs]]
## from = "out-f0775f4337e7a668"
## xtern = "libmd5-f0775f4337e7a668.rlib"
## 
## [[externs]]
## from = "out-5161209caf71d483"
## xtern = "librand-5161209caf71d483.rlib"
## 
## [[externs]]
## from = "out-8e2f025dcc32e9af"
## xtern = "librand_chacha-8e2f025dcc32e9af.rlib"
## 
## [[externs]]
## from = "out-af198cb5433f3d0c"
## xtern = "libppv_lite86-af198cb5433f3d0c.rlib"
## 
## [[externs]]
## from = "out-fd2c262888e3ecb5"
## xtern = "librustls-fd2c262888e3ecb5.rlib"
## 
## [[externs]]
## from = "out-b564a3159bfcf688"
## xtern = "liblog-b564a3159bfcf688.rlib"
## 
## [[externs]]
## from = "out-6ed51fafe322ecba"
## xtern = "libonce_cell-6ed51fafe322ecba.rlib"
## 
## [[externs]]
## from = "out-162d4bd1f192637c"
## xtern = "libring-162d4bd1f192637c.rlib"
## 
## [[externs]]
## from = "out-126f99f44d356e93"
## xtern = "libspin-126f99f44d356e93.rlib"
## 
## [[externs]]
## from = "out-2cf0189e0a6f5785"
## xtern = "libuntrusted-2cf0189e0a6f5785.rlib"
## 
## [[externs]]
## from = "out-0bd417676bde33fe"
## xtern = "librustls_pki_types-0bd417676bde33fe.rlib"
## 
## [[externs]]
## from = "out-0b45a7938c797eef"
## xtern = "libwebpki-0b45a7938c797eef.rlib"
## 
## [[externs]]
## from = "out-986325a49dffbcd1"
## xtern = "libserde-986325a49dffbcd1.rlib"
## 
## [[externs]]
## from = "out-b74741511dfa898a"
## xtern = "libserde_derive-b74741511dfa898a.so"
## 
## [[externs]]
## from = "out-7d2675bffdb63c95"
## xtern = "libtracing-7d2675bffdb63c95.rlib"
## 
## [[externs]]
## from = "out-32982cb980ef9328"
## xtern = "libpin_project_lite-32982cb980ef9328.rlib"
## 
## [[externs]]
## from = "out-ff2e92028461b3cf"
## xtern = "libtracing_attributes-ff2e92028461b3cf.so"
## 
## [[externs]]
## from = "out-100f3fe23952e4be"
## xtern = "libtracing_core-100f3fe23952e4be.rlib"
## 
## [[externs]]
## from = "out-7974610cfc5e520c"
## xtern = "libntpd-7974610cfc5e520c.rlib"
## 
## [[externs]]
## from = "out-9a69f5c8c648a58b"
## xtern = "librustls_native_certs-9a69f5c8c648a58b.rlib"
## 
## [[externs]]
## from = "out-0ee236ae7bf0c632"
## xtern = "libopenssl_probe-0ee236ae7bf0c632.rlib"
## 
## [[externs]]
## from = "out-e86acdc6389f12a9"
## xtern = "librustls_pemfile-e86acdc6389f12a9.rlib"
## 
## [[externs]]
## from = "out-b08e25582a8fdf7e"
## xtern = "libbase64-b08e25582a8fdf7e.rlib"
## 
## [[externs]]
## from = "out-2a345737f765283a"
## xtern = "libserde_json-2a345737f765283a.rlib"
## 
## [[externs]]
## from = "out-95ec35c9faa8fa43"
## xtern = "libitoa-95ec35c9faa8fa43.rlib"
## 
## [[externs]]
## from = "out-56a874feb6525857"
## xtern = "libryu-56a874feb6525857.rlib"
## 
## [[externs]]
## from = "out-2f59881207cd7c68"
## xtern = "libtimestamped_socket-2f59881207cd7c68.rlib"
## 
## [[externs]]
## from = "out-e6ed429a0a7450c0"
## xtern = "libtokio-e6ed429a0a7450c0.rlib"
## 
## [[externs]]
## from = "out-17cf73a7d3f13d95"
## xtern = "libbytes-17cf73a7d3f13d95.rlib"
## 
## [[externs]]
## from = "out-57de3125ece5b1fd"
## xtern = "libmio-57de3125ece5b1fd.rlib"
## 
## [[externs]]
## from = "out-516d6049f106f6a2"
## xtern = "libnum_cpus-516d6049f106f6a2.rlib"
## 
## [[externs]]
## from = "out-4f06700ac893bf17"
## xtern = "libsocket2-4f06700ac893bf17.rlib"
## 
## [[externs]]
## from = "out-56d9f1f76b7466fe"
## xtern = "libtokio_macros-56d9f1f76b7466fe.so"
## 
## [[externs]]
## from = "out-7b6c235fb7422577"
## xtern = "libtoml-7b6c235fb7422577.rlib"
## 
## [[externs]]
## from = "out-dc39aa05fabf8bb2"
## xtern = "libserde_spanned-dc39aa05fabf8bb2.rlib"
## 
## [[externs]]
## from = "out-f1d69a8e9c76a596"
## xtern = "libtoml_datetime-f1d69a8e9c76a596.rlib"
## 
## [[externs]]
## from = "out-90c6c24e7a16fdd6"
## xtern = "libtoml_edit-90c6c24e7a16fdd6.rlib"
## 
## [[externs]]
## from = "out-bd5f37b7de678bd9"
## xtern = "libindexmap-bd5f37b7de678bd9.rlib"
## 
## [[externs]]
## from = "out-bd5b9404126e35a1"
## xtern = "libequivalent-bd5b9404126e35a1.rlib"
## 
## [[externs]]
## from = "out-8bb46fd37d0b1c2d"
## xtern = "libhashbrown-8bb46fd37d0b1c2d.rlib"
## 
## [[externs]]
## from = "out-f45e6953436548b2"
## xtern = "libwinnow-f45e6953436548b2.rlib"
## 
## [[externs]]
## from = "out-63f992d9454962cc"
## xtern = "libtracing_subscriber-63f992d9454962cc.rlib"
## 
## [[externs]]
## from = "out-c42192675aa050dd"
## xtern = "libnu_ansi_term-c42192675aa050dd.rlib"
## 
## [[externs]]
## from = "out-94fa3b5a5c6dc522"
## xtern = "liboverload-94fa3b5a5c6dc522.rlib"
## 
## [[externs]]
## from = "out-b9545388d9527f67"
## xtern = "libsharded_slab-b9545388d9527f67.rlib"
## 
## [[externs]]
## from = "out-f91da618dd3f72e5"
## xtern = "liblazy_static-f91da618dd3f72e5.rlib"
## 
## [[externs]]
## from = "out-6893ca5c870c6e37"
## xtern = "libthread_local-6893ca5c870c6e37.rlib"
## 
## [[contexts]]
## name = "crate_out-e5fe159846b3109b"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/proc-macro2-e5fe159846b3109b/out"
## 
## [[contexts]]
## name = "crate_out-a7d381539c9ce48d"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/typenum-a7d381539c9ce48d/out"
## 
## [[contexts]]
## name = "crate_out-a0b19822430eae69"
## uri = "/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out"
## 
## [[stages]]
## name = "rust-base"
## script = "FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:57d415bbd61ce11e2d5f73de068103c7bd9f3188dc132c97cef4a8f62989e944 AS rust-base"
## 
## [[stages]]
## name = "cratesio-ntpd-1.2.3"
## script = '''
## FROM scratch AS cratesio-ntpd-1.2.3
## ADD --chmod=0664 --unpack=true --checksum=sha256:9f848dc6ea4c2b8d55d47eb3037112c083c56ea59893a71c398df2781ce3f020 \
##   https://static.crates.io/crates/ntpd/ntpd-1.2.3.crate /'''
## 
## [[stages]]
## name = "dep-n-ntpd-1.2.3-88b4a2cd7d00f909"
## script = '''
## FROM rust-base AS dep-n-ntpd-1.2.3-88b4a2cd7d00f909
## SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
## WORKDIR /tmp/clis-ntpd_1-2-3/release/deps
## RUN \
##   --mount=from=cratesio-ntpd-1.2.3,source=/ntpd-1.2.3,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3 \
##   --mount=from=out-2b00e18c8782890c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so,source=/libasync_trait-2b00e18c8782890c.so \
##   --mount=from=out-4be32d01ee2a9db1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libproc_macro2-4be32d01ee2a9db1.rlib,source=/libproc_macro2-4be32d01ee2a9db1.rlib \
##   --mount=from=out-4c1dc76c11b3deb8,dst=/tmp/clis-ntpd_1-2-3/release/deps/libunicode_ident-4c1dc76c11b3deb8.rlib,source=/libunicode_ident-4c1dc76c11b3deb8.rlib \
##   --mount=from=out-36ed05d339fc79f9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libquote-36ed05d339fc79f9.rlib,source=/libquote-36ed05d339fc79f9.rlib \
##   --mount=from=out-5c1d3e18a7dfcf78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsyn-5c1d3e18a7dfcf78.rlib,source=/libsyn-5c1d3e18a7dfcf78.rlib \
##   --mount=from=out-7adc6d6ce8be0538,dst=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib,source=/libclock_steering-7adc6d6ce8be0538.rlib \
##   --mount=from=out-a7905fdc410bdfce,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib,source=/liblibc-a7905fdc410bdfce.rlib \
##   --mount=from=out-5a810c5444456e7d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib,source=/libntp_proto-5a810c5444456e7d.rlib \
##   --mount=from=out-2ba1712ad50273ba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaead-2ba1712ad50273ba.rlib,source=/libaead-2ba1712ad50273ba.rlib \
##   --mount=from=out-1009fce94369ad6b,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcrypto_common-1009fce94369ad6b.rlib,source=/libcrypto_common-1009fce94369ad6b.rlib \
##   --mount=from=out-2d6ea4fd5d7ef666,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgeneric_array-2d6ea4fd5d7ef666.rlib,source=/libgeneric_array-2d6ea4fd5d7ef666.rlib \
##   --mount=from=out-981b1f3c4161234a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtypenum-981b1f3c4161234a.rlib,source=/libtypenum-981b1f3c4161234a.rlib \
##   --mount=from=out-434e8a9dd58e4456,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_core-434e8a9dd58e4456.rlib,source=/librand_core-434e8a9dd58e4456.rlib \
##   --mount=from=out-84473f2ddfbb434a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libgetrandom-84473f2ddfbb434a.rlib,source=/libgetrandom-84473f2ddfbb434a.rlib \
##   --mount=from=out-da34da6838abd7f1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcfg_if-da34da6838abd7f1.rlib,source=/libcfg_if-da34da6838abd7f1.rlib \
##   --mount=from=out-e0325614c1d7d6ab,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes_siv-e0325614c1d7d6ab.rlib,source=/libaes_siv-e0325614c1d7d6ab.rlib \
##   --mount=from=out-81c9db97d7f9be78,dst=/tmp/clis-ntpd_1-2-3/release/deps/libaes-81c9db97d7f9be78.rlib,source=/libaes-81c9db97d7f9be78.rlib \
##   --mount=from=out-ca1baada07864a60,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcipher-ca1baada07864a60.rlib,source=/libcipher-ca1baada07864a60.rlib \
##   --mount=from=out-56f37e149446be27,dst=/tmp/clis-ntpd_1-2-3/release/deps/libinout-56f37e149446be27.rlib,source=/libinout-56f37e149446be27.rlib \
##   --mount=from=out-4ab791033e58debd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcpufeatures-4ab791033e58debd.rlib,source=/libcpufeatures-4ab791033e58debd.rlib \
##   --mount=from=out-568874dfd4c5be74,dst=/tmp/clis-ntpd_1-2-3/release/deps/libcmac-568874dfd4c5be74.rlib,source=/libcmac-568874dfd4c5be74.rlib \
##   --mount=from=out-19f9a0f198045bc5,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdbl-19f9a0f198045bc5.rlib,source=/libdbl-19f9a0f198045bc5.rlib \
##   --mount=from=out-65e96f3f500a3098,dst=/tmp/clis-ntpd_1-2-3/release/deps/libdigest-65e96f3f500a3098.rlib,source=/libdigest-65e96f3f500a3098.rlib \
##   --mount=from=out-bc12f6e8b62af3c6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libblock_buffer-bc12f6e8b62af3c6.rlib,source=/libblock_buffer-bc12f6e8b62af3c6.rlib \
##   --mount=from=out-8b6e21d4a5a6c6ed,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsubtle-8b6e21d4a5a6c6ed.rlib,source=/libsubtle-8b6e21d4a5a6c6ed.rlib \
##   --mount=from=out-aca4c84266bacfb7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libctr-aca4c84266bacfb7.rlib,source=/libctr-aca4c84266bacfb7.rlib \
##   --mount=from=out-caf2b0ffe78763b7,dst=/tmp/clis-ntpd_1-2-3/release/deps/libzeroize-caf2b0ffe78763b7.rlib,source=/libzeroize-caf2b0ffe78763b7.rlib \
##   --mount=from=out-f0775f4337e7a668,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmd5-f0775f4337e7a668.rlib,source=/libmd5-f0775f4337e7a668.rlib \
##   --mount=from=out-5161209caf71d483,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib,source=/librand-5161209caf71d483.rlib \
##   --mount=from=out-8e2f025dcc32e9af,dst=/tmp/clis-ntpd_1-2-3/release/deps/librand_chacha-8e2f025dcc32e9af.rlib,source=/librand_chacha-8e2f025dcc32e9af.rlib \
##   --mount=from=out-af198cb5433f3d0c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libppv_lite86-af198cb5433f3d0c.rlib,source=/libppv_lite86-af198cb5433f3d0c.rlib \
##   --mount=from=out-fd2c262888e3ecb5,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib,source=/librustls-fd2c262888e3ecb5.rlib \
##   --mount=from=out-b564a3159bfcf688,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblog-b564a3159bfcf688.rlib,source=/liblog-b564a3159bfcf688.rlib \
##   --mount=from=out-6ed51fafe322ecba,dst=/tmp/clis-ntpd_1-2-3/release/deps/libonce_cell-6ed51fafe322ecba.rlib,source=/libonce_cell-6ed51fafe322ecba.rlib \
##   --mount=from=out-162d4bd1f192637c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libring-162d4bd1f192637c.rlib,source=/libring-162d4bd1f192637c.rlib \
##   --mount=from=out-126f99f44d356e93,dst=/tmp/clis-ntpd_1-2-3/release/deps/libspin-126f99f44d356e93.rlib,source=/libspin-126f99f44d356e93.rlib \
##   --mount=from=out-2cf0189e0a6f5785,dst=/tmp/clis-ntpd_1-2-3/release/deps/libuntrusted-2cf0189e0a6f5785.rlib,source=/libuntrusted-2cf0189e0a6f5785.rlib \
##   --mount=from=out-0bd417676bde33fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pki_types-0bd417676bde33fe.rlib,source=/librustls_pki_types-0bd417676bde33fe.rlib \
##   --mount=from=out-0b45a7938c797eef,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwebpki-0b45a7938c797eef.rlib,source=/libwebpki-0b45a7938c797eef.rlib \
##   --mount=from=out-986325a49dffbcd1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib,source=/libserde-986325a49dffbcd1.rlib \
##   --mount=from=out-b74741511dfa898a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_derive-b74741511dfa898a.so,source=/libserde_derive-b74741511dfa898a.so \
##   --mount=from=out-7d2675bffdb63c95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib,source=/libtracing-7d2675bffdb63c95.rlib \
##   --mount=from=out-32982cb980ef9328,dst=/tmp/clis-ntpd_1-2-3/release/deps/libpin_project_lite-32982cb980ef9328.rlib,source=/libpin_project_lite-32982cb980ef9328.rlib \
##   --mount=from=out-ff2e92028461b3cf,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_attributes-ff2e92028461b3cf.so,source=/libtracing_attributes-ff2e92028461b3cf.so \
##   --mount=from=out-100f3fe23952e4be,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_core-100f3fe23952e4be.rlib,source=/libtracing_core-100f3fe23952e4be.rlib \
##   --mount=from=out-7974610cfc5e520c,dst=/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rlib,source=/libntpd-7974610cfc5e520c.rlib \
##   --mount=from=out-9a69f5c8c648a58b,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib,source=/librustls_native_certs-9a69f5c8c648a58b.rlib \
##   --mount=from=out-0ee236ae7bf0c632,dst=/tmp/clis-ntpd_1-2-3/release/deps/libopenssl_probe-0ee236ae7bf0c632.rlib,source=/libopenssl_probe-0ee236ae7bf0c632.rlib \
##   --mount=from=out-e86acdc6389f12a9,dst=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib,source=/librustls_pemfile-e86acdc6389f12a9.rlib \
##   --mount=from=out-b08e25582a8fdf7e,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbase64-b08e25582a8fdf7e.rlib,source=/libbase64-b08e25582a8fdf7e.rlib \
##   --mount=from=out-2a345737f765283a,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib,source=/libserde_json-2a345737f765283a.rlib \
##   --mount=from=out-95ec35c9faa8fa43,dst=/tmp/clis-ntpd_1-2-3/release/deps/libitoa-95ec35c9faa8fa43.rlib,source=/libitoa-95ec35c9faa8fa43.rlib \
##   --mount=from=out-56a874feb6525857,dst=/tmp/clis-ntpd_1-2-3/release/deps/libryu-56a874feb6525857.rlib,source=/libryu-56a874feb6525857.rlib \
##   --mount=from=out-2f59881207cd7c68,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib,source=/libtimestamped_socket-2f59881207cd7c68.rlib \
##   --mount=from=out-e6ed429a0a7450c0,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib,source=/libtokio-e6ed429a0a7450c0.rlib \
##   --mount=from=out-17cf73a7d3f13d95,dst=/tmp/clis-ntpd_1-2-3/release/deps/libbytes-17cf73a7d3f13d95.rlib,source=/libbytes-17cf73a7d3f13d95.rlib \
##   --mount=from=out-57de3125ece5b1fd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libmio-57de3125ece5b1fd.rlib,source=/libmio-57de3125ece5b1fd.rlib \
##   --mount=from=out-516d6049f106f6a2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnum_cpus-516d6049f106f6a2.rlib,source=/libnum_cpus-516d6049f106f6a2.rlib \
##   --mount=from=out-4f06700ac893bf17,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsocket2-4f06700ac893bf17.rlib,source=/libsocket2-4f06700ac893bf17.rlib \
##   --mount=from=out-56d9f1f76b7466fe,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtokio_macros-56d9f1f76b7466fe.so,source=/libtokio_macros-56d9f1f76b7466fe.so \
##   --mount=from=out-7b6c235fb7422577,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib,source=/libtoml-7b6c235fb7422577.rlib \
##   --mount=from=out-dc39aa05fabf8bb2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libserde_spanned-dc39aa05fabf8bb2.rlib,source=/libserde_spanned-dc39aa05fabf8bb2.rlib \
##   --mount=from=out-f1d69a8e9c76a596,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_datetime-f1d69a8e9c76a596.rlib,source=/libtoml_datetime-f1d69a8e9c76a596.rlib \
##   --mount=from=out-90c6c24e7a16fdd6,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtoml_edit-90c6c24e7a16fdd6.rlib,source=/libtoml_edit-90c6c24e7a16fdd6.rlib \
##   --mount=from=out-bd5f37b7de678bd9,dst=/tmp/clis-ntpd_1-2-3/release/deps/libindexmap-bd5f37b7de678bd9.rlib,source=/libindexmap-bd5f37b7de678bd9.rlib \
##   --mount=from=out-bd5b9404126e35a1,dst=/tmp/clis-ntpd_1-2-3/release/deps/libequivalent-bd5b9404126e35a1.rlib,source=/libequivalent-bd5b9404126e35a1.rlib \
##   --mount=from=out-8bb46fd37d0b1c2d,dst=/tmp/clis-ntpd_1-2-3/release/deps/libhashbrown-8bb46fd37d0b1c2d.rlib,source=/libhashbrown-8bb46fd37d0b1c2d.rlib \
##   --mount=from=out-f45e6953436548b2,dst=/tmp/clis-ntpd_1-2-3/release/deps/libwinnow-f45e6953436548b2.rlib,source=/libwinnow-f45e6953436548b2.rlib \
##   --mount=from=out-63f992d9454962cc,dst=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib,source=/libtracing_subscriber-63f992d9454962cc.rlib \
##   --mount=from=out-c42192675aa050dd,dst=/tmp/clis-ntpd_1-2-3/release/deps/libnu_ansi_term-c42192675aa050dd.rlib,source=/libnu_ansi_term-c42192675aa050dd.rlib \
##   --mount=from=out-94fa3b5a5c6dc522,dst=/tmp/clis-ntpd_1-2-3/release/deps/liboverload-94fa3b5a5c6dc522.rlib,source=/liboverload-94fa3b5a5c6dc522.rlib \
##   --mount=from=out-b9545388d9527f67,dst=/tmp/clis-ntpd_1-2-3/release/deps/libsharded_slab-b9545388d9527f67.rlib,source=/libsharded_slab-b9545388d9527f67.rlib \
##   --mount=from=out-f91da618dd3f72e5,dst=/tmp/clis-ntpd_1-2-3/release/deps/liblazy_static-f91da618dd3f72e5.rlib,source=/liblazy_static-f91da618dd3f72e5.rlib \
##   --mount=from=out-6893ca5c870c6e37,dst=/tmp/clis-ntpd_1-2-3/release/deps/libthread_local-6893ca5c870c6e37.rlib,source=/libthread_local-6893ca5c870c6e37.rlib \
##     { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
##     env CARGO="$(which cargo)" \
##         CARGO_BIN_NAME="ntp-daemon" \
##         CARGO_CRATE_NAME="ntp_daemon" \
##         CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3" \
##         CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/Cargo.toml" \
##         CARGO_PKG_AUTHORS= \
##         CARGO_PKG_DESCRIPTION="Full-featured implementation of NTP with NTS support" \
##         CARGO_PKG_HOMEPAGE="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
##         CARGO_PKG_LICENSE_FILE= \
##         CARGO_PKG_NAME="ntpd" \
##         CARGO_PKG_README="README.md" \
##         CARGO_PKG_REPOSITORY="https://github.com/pendulum-project/ntpd-rs" \
##         CARGO_PKG_RUST_VERSION="1.70" \
##         CARGO_PKG_VERSION="1.2.3" \
##         CARGO_PKG_VERSION_MAJOR="1" \
##         CARGO_PKG_VERSION_MINOR="2" \
##         CARGO_PKG_VERSION_PATCH="3" \
##         CARGO_PKG_VERSION_PRE= \
##         CARGO_PRIMARY_PACKAGE="1" \
##         OUT_DIR="/tmp/clis-ntpd_1-2-3/release/build/ntpd-5112a70c08bbb891/out" \
##         CARGOGREEN=1 \
##         NTPD_RS_GIT_DATE="2025-05-09" \
##         NTPD_RS_GIT_REV="c7945250c378f65f65b2a75748132edf75063b3b" \
##       rustc '--crate-name' 'ntp_daemon' '--edition' '2021' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'bin' '--emit' 'dep-info,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "hardware-timestamping", "unstable_ntpv5", "unstable_nts-pool"))' '-C' 'metadata=52cef03e832d528d' '-C' 'extra-filename=-88b4a2cd7d00f909' '--out-dir' '/tmp/clis-ntpd_1-2-3/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-ntpd_1-2-3/release/deps' '--extern' 'async_trait=/tmp/clis-ntpd_1-2-3/release/deps/libasync_trait-2b00e18c8782890c.so' '--extern' 'clock_steering=/tmp/clis-ntpd_1-2-3/release/deps/libclock_steering-7adc6d6ce8be0538.rlib' '--extern' 'libc=/tmp/clis-ntpd_1-2-3/release/deps/liblibc-a7905fdc410bdfce.rlib' '--extern' 'ntp_proto=/tmp/clis-ntpd_1-2-3/release/deps/libntp_proto-5a810c5444456e7d.rlib' '--extern' 'ntpd=/tmp/clis-ntpd_1-2-3/release/deps/libntpd-7974610cfc5e520c.rlib' '--extern' 'rand=/tmp/clis-ntpd_1-2-3/release/deps/librand-5161209caf71d483.rlib' '--extern' 'rustls=/tmp/clis-ntpd_1-2-3/release/deps/librustls-fd2c262888e3ecb5.rlib' '--extern' 'rustls_native_certs=/tmp/clis-ntpd_1-2-3/release/deps/librustls_native_certs-9a69f5c8c648a58b.rlib' '--extern' 'rustls_pemfile=/tmp/clis-ntpd_1-2-3/release/deps/librustls_pemfile-e86acdc6389f12a9.rlib' '--extern' 'serde=/tmp/clis-ntpd_1-2-3/release/deps/libserde-986325a49dffbcd1.rlib' '--extern' 'serde_json=/tmp/clis-ntpd_1-2-3/release/deps/libserde_json-2a345737f765283a.rlib' '--extern' 'timestamped_socket=/tmp/clis-ntpd_1-2-3/release/deps/libtimestamped_socket-2f59881207cd7c68.rlib' '--extern' 'tokio=/tmp/clis-ntpd_1-2-3/release/deps/libtokio-e6ed429a0a7450c0.rlib' '--extern' 'toml=/tmp/clis-ntpd_1-2-3/release/deps/libtoml-7b6c235fb7422577.rlib' '--extern' 'tracing=/tmp/clis-ntpd_1-2-3/release/deps/libtracing-7d2675bffdb63c95.rlib' '--extern' 'tracing_subscriber=/tmp/clis-ntpd_1-2-3/release/deps/libtracing_subscriber-63f992d9454962cc.rlib' '--cap-lints' 'warn' '-L' 'native=/tmp/clis-ntpd_1-2-3/release/build/ring-a0b19822430eae69/out' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ntpd-1.2.3/bin/ntp-daemon.rs \
##         1> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-stdout) \
##         2> >(tee    /tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-stderr >&2) \
##         || echo $? >/tmp/clis-ntpd_1-2-3/release/deps/out-88b4a2cd7d00f909-errcode'''
## 
## [[stages]]
## name = "out-88b4a2cd7d00f909"
## script = """
## FROM scratch AS out-88b4a2cd7d00f909
## COPY --from=dep-n-ntpd-1.2.3-88b4a2cd7d00f909 /tmp/clis-ntpd_1-2-3/release/deps/*-88b4a2cd7d00f909* /"""

FROM scratch
COPY --from=out-88b4a2cd7d00f909 /ntp_daemon-88b4a2cd7d00f909 /ntp_daemon
