# syntax=docker.io/docker/dockerfile:1@sha256:9857836c9ee4268391bb5b09f9f157f3c91bb15821bb77969642813b0d00518d
# check=error=true
# Generated by https://github.com/fenollp/supergreen v0.11.0

FROM --platform=$BUILDPLATFORM docker.io/library/rust:1.86.0-slim@sha256:3f391b0678a6e0c88fd26f13e399c9c515ac47354e3cadfee7daee3b21651a4f AS rust-base

FROM scratch AS cratesio-memchr-2.3.3
ADD --chmod=0664 --checksum=sha256:3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400 \
  https://static.crates.io/crates/memchr/memchr-2.3.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-memchr-2.3.3-c93fd10415a641fd
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-memchr-2.3.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.3.3 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="memchr" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.3.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.3.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>:bluss" \
        CARGO_PKG_DESCRIPTION="Safe interface to memchr." \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/rust-memchr" \
        CARGO_PKG_LICENSE="Unlicense/MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="memchr" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/rust-memchr" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.3.3" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/memchr-3e5e06c429d97718/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'memchr' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--cfg' 'feature="use_std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "libc", "std", "use_std"))' '-C' 'metadata=a11f98a351ba84dd' '-C' 'extra-filename=-c93fd10415a641fd' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' '--cfg' 'memchr_runtime_simd' '--cfg' 'memchr_runtime_sse2' '--cfg' 'memchr_runtime_sse42' '--cfg' 'memchr_runtime_avx' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/memchr-2.3.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-c93fd10415a641fd
COPY --from=dep-l-memchr-2.3.3-c93fd10415a641fd /tmp/clis-dbcc_2-2-1/release/deps/*-c93fd10415a641fd* /

FROM scratch AS cratesio-aho-corasick-0.7.14
ADD --chmod=0664 --checksum=sha256:b476ce7103678b0c6d3d395dbbae31d48ff910bd28be979ba5d48c6351131d0d \
  https://static.crates.io/crates/aho-corasick/aho-corasick-0.7.14.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-aho-corasick-0.7.14-014f7ab42daca0d7
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-aho-corasick-0.7.14,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-0.7.14 \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="aho_corasick" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-0.7.14" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-0.7.14/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Fast multiple substring searching." \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/aho-corasick" \
        CARGO_PKG_LICENSE="Unlicense/MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="aho-corasick" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/aho-corasick" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.7.14" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="14" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'aho_corasick' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "std"))' '-C' 'metadata=3f47cc43fa81dcc3' '-C' 'extra-filename=-014f7ab42daca0d7' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'memchr=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/aho-corasick-0.7.14/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-014f7ab42daca0d7
COPY --from=dep-l-aho-corasick-0.7.14-014f7ab42daca0d7 /tmp/clis-dbcc_2-2-1/release/deps/*-014f7ab42daca0d7* /

FROM scratch AS cratesio-ansi_term-0.11.0
ADD --chmod=0664 --checksum=sha256:ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b \
  https://static.crates.io/crates/ansi_term/ansi_term-0.11.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-ansi_term-0.11.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="ansi_term" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="ogham@bsago.me:Ryan Scheel (Havvy) <ryan.havvy@gmail.com>:Josh Triplett <josh@joshtriplett.org>" \
        CARGO_PKG_DESCRIPTION="Library for ANSI terminal colours and styles (bold, underline)" \
        CARGO_PKG_HOMEPAGE="https://github.com/ogham/rust-ansi-term" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="ansi_term" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY= \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.11.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="11" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'ansi_term' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=b83c48034e26d540' '-C' 'extra-filename=-320ef4b8ee2e57f9' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/ansi_term-0.11.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-320ef4b8ee2e57f9
COPY --from=dep-l-ansi_term-0.11.0-320ef4b8ee2e57f9 /tmp/clis-dbcc_2-2-1/release/deps/*-320ef4b8ee2e57f9* /

FROM scratch AS cratesio-libc-0.2.79
ADD --chmod=0664 --checksum=sha256:2448f6066e80e3bfc792e9c98bf705b4b0fc6e8ef5b43e5889aff0eaa9c58743 \
  https://static.crates.io/crates/libc/libc-0.2.79.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-libc-0.2.79-087afb0c1713a9a6
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-libc-0.2.79,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.79 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="libc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.79" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.79/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="Raw FFI bindings to platform libraries like libc.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/libc" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="libc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/libc" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.79" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="79" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/libc-6e365980216c917e/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'libc' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' '-C' 'metadata=58c6b7d495767a66' '-C' 'extra-filename=-087afb0c1713a9a6' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' '--cfg' 'freebsd11' '--cfg' 'libc_priv_mod_use' '--cfg' 'libc_union' '--cfg' 'libc_const_size_of' '--cfg' 'libc_align' '--cfg' 'libc_core_cvoid' '--cfg' 'libc_packedN' '--cfg' 'libc_cfg_target_vendor' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/libc-0.2.79/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-087afb0c1713a9a6
COPY --from=dep-l-libc-0.2.79-087afb0c1713a9a6 /tmp/clis-dbcc_2-2-1/release/deps/*-087afb0c1713a9a6* /

FROM scratch AS cratesio-atty-0.2.14
ADD --chmod=0664 --checksum=sha256:d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8 \
  https://static.crates.io/crates/atty/atty-0.2.14.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-atty-0.2.14-737035cdf92a82de
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-atty-0.2.14,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14 \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="atty" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14/Cargo.toml" \
        CARGO_PKG_AUTHORS="softprops <d.tangren@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple interface for querying atty" \
        CARGO_PKG_HOMEPAGE="https://github.com/softprops/atty" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="atty" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/softprops/atty" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.14" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="14" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'atty' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=1f9cf5e9732c64b7' '-C' 'extra-filename=-737035cdf92a82de' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'libc=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/atty-0.2.14/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-737035cdf92a82de
COPY --from=dep-l-atty-0.2.14-737035cdf92a82de /tmp/clis-dbcc_2-2-1/release/deps/*-737035cdf92a82de* /

FROM scratch AS cratesio-bitflags-1.2.1
ADD --chmod=0664 --checksum=sha256:cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693 \
  https://static.crates.io/crates/bitflags/bitflags-1.2.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-bitflags-1.2.1-d19718ebe5a0c815
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-bitflags-1.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.2.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bitflags" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A macro to generate structures which behave like bitflags.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/bitflags/bitflags" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bitflags" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/bitflags/bitflags" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.2.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/bitflags-57d98863263b7a3c/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'bitflags' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "example_generated"))' '-C' 'metadata=5262e28377aa4313' '-C' 'extra-filename=-d19718ebe5a0c815' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' '--cfg' 'bitflags_const_fn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-1.2.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-d19718ebe5a0c815
COPY --from=dep-l-bitflags-1.2.1-d19718ebe5a0c815 /tmp/clis-dbcc_2-2-1/release/deps/*-d19718ebe5a0c815* /

FROM scratch AS cratesio-bitflags-0.4.0
ADD --chmod=0664 --checksum=sha256:8dead7461c1127cf637931a1e50934eb6eee8bff2f74433ac7909e9afcee04a3 \
  https://static.crates.io/crates/bitflags/bitflags-0.4.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-bitflags-0.4.0-e976848f96abbbd4
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-bitflags-0.4.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="bitflags" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A macro to generate structures which behave like bitflags.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/bitflags" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="bitflags" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/bitflags" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'bitflags' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no_std"))' '-C' 'metadata=c40fd9a620d26196' '-C' 'extra-filename=-e976848f96abbbd4' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/bitflags-0.4.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-e976848f96abbbd4
COPY --from=dep-l-bitflags-0.4.0-e976848f96abbbd4 /tmp/clis-dbcc_2-2-1/release/deps/*-e976848f96abbbd4* /

FROM scratch AS cratesio-byte-tools-0.3.1
ADD --chmod=0664 --checksum=sha256:e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7 \
  https://static.crates.io/crates/byte-tools/byte-tools-0.3.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-byte-tools-0.3.1-208f428f6e945660
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-byte-tools-0.3.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byte-tools-0.3.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="byte_tools" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byte-tools-0.3.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byte-tools-0.3.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Bytes related utility functions" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="byte-tools" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'byte_tools' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=bc0228cfae750508' '-C' 'extra-filename=-208f428f6e945660' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/byte-tools-0.3.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-208f428f6e945660
COPY --from=dep-l-byte-tools-0.3.1-208f428f6e945660 /tmp/clis-dbcc_2-2-1/release/deps/*-208f428f6e945660* /

FROM scratch AS cratesio-typenum-1.12.0
ADD --chmod=0664 --checksum=sha256:373c8a200f9e67a0c95e62a4f52fbf80c23b4381c05a17845531982fa99e6b33 \
  https://static.crates.io/crates/typenum/typenum-1.12.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-typenum-1.12.0-0c59626b95871fe7
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-typenum-1.12.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.12.0 \
  --mount=from=crate_out-3cf9e442dfddd505,dst=/tmp/clis-dbcc_2-2-1/release/build/typenum-3cf9e442dfddd505/out \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="typenum" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.12.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.12.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Typenum is a Rust library for type-level numbers evaluated at compile time. It currently supports bits, unsigned integers, and signed integers. It also provides a type-level array of type-level numbers, but its implementation is incomplete." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="typenum" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/paholg/typenum" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.12.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="12" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/typenum-3cf9e442dfddd505/out" \
        CARGOGREEN=1 \
        TYPENUM_BUILD_CONSTS="/tmp/clis-dbcc_2-2-1/release/build/typenum-3cf9e442dfddd505/out/consts.rs" \
        TYPENUM_BUILD_OP="/tmp/clis-dbcc_2-2-1/release/build/typenum-3cf9e442dfddd505/out/op.rs" \
      rustc '--crate-name' 'typenum' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("force_unix_path_separator", "i128", "no_std", "strict"))' '-C' 'metadata=9b72b0a35302172d' '-C' 'extra-filename=-0c59626b95871fe7' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/typenum-1.12.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0c59626b95871fe7
COPY --from=dep-l-typenum-1.12.0-0c59626b95871fe7 /tmp/clis-dbcc_2-2-1/release/deps/*-0c59626b95871fe7* /

FROM scratch AS cratesio-generic-array-0.12.3
ADD --chmod=0664 --checksum=sha256:c68f0274ae0e023facc3c97b2e00f076be70e254bc851d972503b328db79b2ec \
  https://static.crates.io/crates/generic-array/generic-array-0.12.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-generic-array-0.12.3-0afa135837d93e68
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-generic-array-0.12.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.12.3 \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta,source=/libtypenum-0c59626b95871fe7.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="generic_array" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.12.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.12.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Generic types implementing functionality of arrays" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="generic-array" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/fizyk20/generic-array.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.12.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="12" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'generic_array' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde"))' '-C' 'metadata=b88e8b871eb088ce' '-C' 'extra-filename=-0afa135837d93e68' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'typenum=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/generic-array-0.12.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0afa135837d93e68
COPY --from=dep-l-generic-array-0.12.3-0afa135837d93e68 /tmp/clis-dbcc_2-2-1/release/deps/*-0afa135837d93e68* /

FROM scratch AS cratesio-subtle-1.0.0
ADD --chmod=0664 --checksum=sha256:2d67a5a62ba6e01cb2192ff309324cb4875d0c451d55fe2319433abe7a05a8ee \
  https://static.crates.io/crates/subtle/subtle-1.0.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-subtle-1.0.0-fe593aa0503da824
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-subtle-1.0.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-1.0.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="subtle" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-1.0.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-1.0.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>" \
        CARGO_PKG_DESCRIPTION="Pure-Rust traits and utilities for constant-time cryptographic implementations." \
        CARGO_PKG_HOMEPAGE="https://dalek.rs/" \
        CARGO_PKG_LICENSE="BSD-3-Clause" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="subtle" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dalek-cryptography/subtle" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'subtle' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "i128", "nightly", "std"))' '-C' 'metadata=40c172ea47432436' '-C' 'extra-filename=-fe593aa0503da824' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/subtle-1.0.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-fe593aa0503da824
COPY --from=dep-l-subtle-1.0.0-fe593aa0503da824 /tmp/clis-dbcc_2-2-1/release/deps/*-fe593aa0503da824* /

FROM scratch AS cratesio-crypto-mac-0.7.0
ADD --chmod=0664 --checksum=sha256:4434400df11d95d556bac068ddfedd482915eb18fe8bea89bc80b6e4b1c179e5 \
  https://static.crates.io/crates/crypto-mac/crypto-mac-0.7.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-crypto-mac-0.7.0-c92b10e2fa1c82cb
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-crypto-mac-0.7.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-mac-0.7.0 \
  --mount=from=out-0afa135837d93e68,dst=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta,source=/libgeneric_array-0afa135837d93e68.rmeta \
  --mount=from=out-fe593aa0503da824,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsubtle-fe593aa0503da824.rmeta,source=/libsubtle-fe593aa0503da824.rmeta \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta,source=/libtypenum-0c59626b95871fe7.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="crypto_mac" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-mac-0.7.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-mac-0.7.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Trait for Message Authentication Code (MAC) algorithms" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="crypto-mac" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.7.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'crypto_mac' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("blobby", "dev", "std"))' '-C' 'metadata=eca871e5fe137624' '-C' 'extra-filename=-c92b10e2fa1c82cb' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'generic_array=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta' '--extern' 'subtle=/tmp/clis-dbcc_2-2-1/release/deps/libsubtle-fe593aa0503da824.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/crypto-mac-0.7.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-c92b10e2fa1c82cb
COPY --from=dep-l-crypto-mac-0.7.0-c92b10e2fa1c82cb /tmp/clis-dbcc_2-2-1/release/deps/*-c92b10e2fa1c82cb* /

FROM scratch AS cratesio-digest-0.8.1
ADD --chmod=0664 --checksum=sha256:f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5 \
  https://static.crates.io/crates/digest/digest-0.8.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-digest-0.8.1-3c7631a805111659
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-digest-0.8.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.8.1 \
  --mount=from=out-0afa135837d93e68,dst=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta,source=/libgeneric_array-0afa135837d93e68.rmeta \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta,source=/libtypenum-0c59626b95871fe7.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="digest" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.8.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.8.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Traits for cryptographic hash functions" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="digest" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/traits" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'digest' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("blobby", "dev", "std"))' '-C' 'metadata=7162f2f9e50280b8' '-C' 'extra-filename=-3c7631a805111659' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'generic_array=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/digest-0.8.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3c7631a805111659
COPY --from=dep-l-digest-0.8.1-3c7631a805111659 /tmp/clis-dbcc_2-2-1/release/deps/*-3c7631a805111659* /

FROM scratch AS cratesio-opaque-debug-0.2.3
ADD --chmod=0664 --checksum=sha256:2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c \
  https://static.crates.io/crates/opaque-debug/opaque-debug-0.2.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-opaque-debug-0.2.3-3e36cb37043b614a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-opaque-debug-0.2.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/opaque-debug-0.2.3 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="opaque_debug" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/opaque-debug-0.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/opaque-debug-0.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="Macro for opaque Debug trait implementation" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="opaque-debug" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/utils" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.3" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'opaque_debug' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=b8563ebc370a96b5' '-C' 'extra-filename=-3e36cb37043b614a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/opaque-debug-0.2.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3e36cb37043b614a
COPY --from=dep-l-opaque-debug-0.2.3-3e36cb37043b614a /tmp/clis-dbcc_2-2-1/release/deps/*-3e36cb37043b614a* /

FROM scratch AS cratesio-blake2-0.8.1
ADD --chmod=0664 --checksum=sha256:94cb07b0da6a73955f8fb85d24c466778e70cda767a568229b104f0264089330 \
  https://static.crates.io/crates/blake2/blake2-0.8.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-blake2-0.8.1-90ca44a8caf54d0f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-blake2-0.8.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/blake2-0.8.1 \
  --mount=from=out-208f428f6e945660,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbyte_tools-208f428f6e945660.rmeta,source=/libbyte_tools-208f428f6e945660.rmeta \
  --mount=from=out-c92b10e2fa1c82cb,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcrypto_mac-c92b10e2fa1c82cb.rmeta,source=/libcrypto_mac-c92b10e2fa1c82cb.rmeta \
  --mount=from=out-3c7631a805111659,dst=/tmp/clis-dbcc_2-2-1/release/deps/libdigest-3c7631a805111659.rmeta,source=/libdigest-3c7631a805111659.rmeta \
  --mount=from=out-0afa135837d93e68,dst=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta,source=/libgeneric_array-0afa135837d93e68.rmeta \
  --mount=from=out-3e36cb37043b614a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libopaque_debug-3e36cb37043b614a.rmeta,source=/libopaque_debug-3e36cb37043b614a.rmeta \
  --mount=from=out-fe593aa0503da824,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsubtle-fe593aa0503da824.rmeta,source=/libsubtle-fe593aa0503da824.rmeta \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta,source=/libtypenum-0c59626b95871fe7.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="blake2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/blake2-0.8.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/blake2-0.8.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="RustCrypto Developers" \
        CARGO_PKG_DESCRIPTION="BLAKE2 hash functions" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="blake2" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/RustCrypto/hashes" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'blake2' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "simd", "simd_asm", "simd_opt", "std"))' '-C' 'metadata=34e446de08958184' '-C' 'extra-filename=-90ca44a8caf54d0f' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'byte_tools=/tmp/clis-dbcc_2-2-1/release/deps/libbyte_tools-208f428f6e945660.rmeta' '--extern' 'crypto_mac=/tmp/clis-dbcc_2-2-1/release/deps/libcrypto_mac-c92b10e2fa1c82cb.rmeta' '--extern' 'digest=/tmp/clis-dbcc_2-2-1/release/deps/libdigest-3c7631a805111659.rmeta' '--extern' 'opaque_debug=/tmp/clis-dbcc_2-2-1/release/deps/libopaque_debug-3e36cb37043b614a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/blake2-0.8.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-90ca44a8caf54d0f
COPY --from=dep-l-blake2-0.8.1-90ca44a8caf54d0f /tmp/clis-dbcc_2-2-1/release/deps/*-90ca44a8caf54d0f* /

FROM scratch AS cratesio-unicode-xid-0.2.1
ADD --chmod=0664 --checksum=sha256:f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564 \
  https://static.crates.io/crates/unicode-xid/unicode-xid-0.2.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-unicode-xid-0.2.1-ca80afcc82eeec0a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-unicode-xid-0.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_xid" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="erick.tryzelaar <erick.tryzelaar@gmail.com>:kwantam <kwantam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/unicode-rs/unicode-xid" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-xid" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/unicode-rs/unicode-xid" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_xid' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bench", "default", "no_std"))' '-C' 'metadata=74af045ac9162114' '-C' 'extra-filename=-ca80afcc82eeec0a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ca80afcc82eeec0a
COPY --from=dep-l-unicode-xid-0.2.1-ca80afcc82eeec0a /tmp/clis-dbcc_2-2-1/release/deps/*-ca80afcc82eeec0a* /

FROM scratch AS cratesio-proc-macro2-1.0.24
ADD --chmod=0664 --checksum=sha256:1e0704ee1a7e00d7bb417d0770ea303c1bccbabf0ef1667dae92b5967f5f8a71 \
  https://static.crates.io/crates/proc-macro2/proc-macro2-1.0.24.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-proc-macro2-1.0.24-80b37ce9903d0def
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-proc-macro2-1.0.24,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24 \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A substitute implementation of the compiler's `proc_macro` API to decouple\ntoken-based libraries from the procedural macro use case.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/proc-macro2" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.24" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="24" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/proc-macro2-c9d8dd2789e1c19f/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'proc_macro2' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' '-C' 'metadata=74632adfdd4ed0d9' '-C' 'extra-filename=-80b37ce9903d0def' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'unicode_xid=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta' '--cap-lints' 'warn' '--cfg' 'lexerror_display' '--cfg' 'hygiene' '--cfg' 'use_proc_macro' '--cfg' 'wrap_proc_macro' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-80b37ce9903d0def
COPY --from=dep-l-proc-macro2-1.0.24-80b37ce9903d0def /tmp/clis-dbcc_2-2-1/release/deps/*-80b37ce9903d0def* /

FROM scratch AS cratesio-quote-1.0.7
ADD --chmod=0664 --checksum=sha256:aa563d17ecb180e500da1cfd2b028310ac758de548efdd203e18f283af693f37 \
  https://static.crates.io/crates/quote/quote-1.0.7.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-quote-1.0.7-dd5debcb2b51fc02
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-quote-1.0.7,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7 \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="quote" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Quasi-quoting macro quote!(...)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="quote" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/quote" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.7" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'quote' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "proc-macro"))' '-C' 'metadata=042d1e8fcb9da129' '-C' 'extra-filename=-dd5debcb2b51fc02' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-dd5debcb2b51fc02
COPY --from=dep-l-quote-1.0.7-dd5debcb2b51fc02 /tmp/clis-dbcc_2-2-1/release/deps/*-dd5debcb2b51fc02* /

FROM scratch AS cratesio-syn-1.0.46
ADD --chmod=0664 --checksum=sha256:5ad5de3220ea04da322618ded2c42233d02baca219d6f160a3e9c87cda16c942 \
  https://static.crates.io/crates/syn/syn-1.0.46.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-syn-1.0.46-bbffa8c7e6a16356
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-syn-1.0.46,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-1.0.46 \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta,source=/libquote-dd5debcb2b51fc02.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="syn" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-1.0.46" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-1.0.46/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Parser for Rust source code" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="syn" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/syn" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.46" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="46" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/syn-6fd417ad443e5221/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'syn' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="clone-impls"' '--cfg' 'feature="default"' '--cfg' 'feature="derive"' '--cfg' 'feature="extra-traits"' '--cfg' 'feature="full"' '--cfg' 'feature="parsing"' '--cfg' 'feature="printing"' '--cfg' 'feature="proc-macro"' '--cfg' 'feature="quote"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "test", "visit", "visit-mut"))' '-C' 'metadata=fa5ca828ba56be39' '-C' 'extra-filename=-bbffa8c7e6a16356' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta' '--extern' 'unicode_xid=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta' '--cap-lints' 'warn' '--cfg' 'syn_disable_nightly_tests' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/syn-1.0.46/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-bbffa8c7e6a16356
COPY --from=dep-l-syn-1.0.46-bbffa8c7e6a16356 /tmp/clis-dbcc_2-2-1/release/deps/*-bbffa8c7e6a16356* /

FROM scratch AS cratesio-derive-getters-0.1.1
ADD --chmod=0664 --checksum=sha256:16dc4e2517f08ca167440ccb11023c1308ee19a4022d7b03c0e652f971171869 \
  https://static.crates.io/crates/derive-getters/derive-getters-0.1.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-derive-getters-0.1.1-10105863fb18eb2a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-derive-getters-0.1.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/derive-getters-0.1.1 \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib,source=/libproc_macro2-80b37ce9903d0def.rlib \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib,source=/libquote-dd5debcb2b51fc02.rlib \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rlib,source=/libsyn-bbffa8c7e6a16356.rlib \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rlib,source=/libunicode_xid-ca80afcc82eeec0a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="derive_getters" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/derive-getters-0.1.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/derive-getters-0.1.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Stephan Luther <kvsari@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Simple boilerplate getters generator." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="derive-getters" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://git.sr.ht/~kvsari/derive-getters" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'derive_getters' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=7483499958518af0' '-C' 'extra-filename=-10105863fb18eb2a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib' '--extern' 'syn=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/derive-getters-0.1.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-10105863fb18eb2a
COPY --from=dep-p-derive-getters-0.1.1-10105863fb18eb2a /tmp/clis-dbcc_2-2-1/release/deps/*-10105863fb18eb2a* /

FROM scratch AS cratesio-nom-4.2.3
ADD --chmod=0664 --checksum=sha256:2ad2a91a8e869eeb30b9cb3119ae87773a8f4ae617f41b1eb9c154b2905f7bd6 \
  https://static.crates.io/crates/nom/nom-4.2.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-nom-4.2.3-cd5fc4bcd4e040ed
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-nom-4.2.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nom-4.2.3 \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="nom" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nom-4.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nom-4.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="contact@geoffroycouprie.com" \
        CARGO_PKG_DESCRIPTION="A byte-oriented, zero-copy, parser combinators library" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="nom" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Geal/nom" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="4.2.3" \
        CARGO_PKG_VERSION_MAJOR="4" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/nom-5d24f54f80b61353/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'nom' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="alloc"' '--cfg' 'feature="default"' '--cfg' 'feature="std"' '--cfg' 'feature="verbose-errors"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("alloc", "default", "lazy_static", "regex", "regexp", "regexp_macros", "std", "verbose-errors"))' '-C' 'metadata=86639ca7531042ec' '-C' 'extra-filename=-cd5fc4bcd4e040ed' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'memchr=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta' '--cap-lints' 'warn' '--cfg' 'stable_i128' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nom-4.2.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-cd5fc4bcd4e040ed
COPY --from=dep-l-nom-4.2.3-cd5fc4bcd4e040ed /tmp/clis-dbcc_2-2-1/release/deps/*-cd5fc4bcd4e040ed* /

FROM scratch AS cratesio-can-dbc-3.0.2
ADD --chmod=0664 --checksum=sha256:5bc2e1f9f6f7fe6f3dbcfc44036eb07596ef1d37517ce822111f0c3d6eeed82a \
  https://static.crates.io/crates/can-dbc/can-dbc-3.0.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-can-dbc-3.0.2-593834cb44ccbead
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-can-dbc-3.0.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/can-dbc-3.0.2 \
  --mount=from=out-10105863fb18eb2a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libderive_getters-10105863fb18eb2a.so,source=/libderive_getters-10105863fb18eb2a.so \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
  --mount=from=out-cd5fc4bcd4e040ed,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rmeta,source=/libnom-cd5fc4bcd4e040ed.rmeta \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta,source=/libquote-dd5debcb2b51fc02.rmeta \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rmeta,source=/libsyn-bbffa8c7e6a16356.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="can_dbc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/can-dbc-3.0.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/can-dbc-3.0.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="marcelbuesing <buesing.marcel@googlemail.com>" \
        CARGO_PKG_DESCRIPTION="A parser for the DBC format. The DBC format is used to exchange CAN network data." \
        CARGO_PKG_HOMEPAGE="https://github.com/marcelbuesing/can-dbc" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="can-dbc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/marcelbuesing/can-dbc.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="3.0.2" \
        CARGO_PKG_VERSION_MAJOR="3" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'can_dbc' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("serde", "serde_derive", "with-serde"))' '-C' 'metadata=fee22bce5cf13fc7' '-C' 'extra-filename=-593834cb44ccbead' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'derive_getters=/tmp/clis-dbcc_2-2-1/release/deps/libderive_getters-10105863fb18eb2a.so' '--extern' 'nom=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/can-dbc-3.0.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-593834cb44ccbead
COPY --from=dep-l-can-dbc-3.0.2-593834cb44ccbead /tmp/clis-dbcc_2-2-1/release/deps/*-593834cb44ccbead* /

FROM scratch AS cratesio-cfg-if-0.1.10
ADD --chmod=0664 --checksum=sha256:4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822 \
  https://static.crates.io/crates/cfg-if/cfg-if-0.1.10.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-cfg-if-0.1.10-abefcc22b095b628
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-cfg-if-0.1.10,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-0.1.10 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="cfg_if" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-0.1.10" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-0.1.10/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>" \
        CARGO_PKG_DESCRIPTION="A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="cfg-if" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/cfg-if" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.10" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="10" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'cfg_if' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))' '-C' 'metadata=c86d40f468e79710' '-C' 'extra-filename=-abefcc22b095b628' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/cfg-if-0.1.10/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-abefcc22b095b628
COPY --from=dep-l-cfg-if-0.1.10-abefcc22b095b628 /tmp/clis-dbcc_2-2-1/release/deps/*-abefcc22b095b628* /

FROM scratch AS cratesio-strsim-0.8.0
ADD --chmod=0664 --checksum=sha256:8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a \
  https://static.crates.io/crates/strsim/strsim-0.8.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-strsim-0.8.0-ada2690f4d94d615
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-strsim-0.8.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.8.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="strsim" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.8.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.8.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Danny Guo <dannyguo91@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Implementations of string similarity metrics.\nIncludes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, and Jaro-Winkler.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/dguo/strsim-rs" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="strsim" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dguo/strsim-rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'strsim' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=6148129c3828fb71' '-C' 'extra-filename=-ada2690f4d94d615' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/strsim-0.8.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-ada2690f4d94d615
COPY --from=dep-l-strsim-0.8.0-ada2690f4d94d615 /tmp/clis-dbcc_2-2-1/release/deps/*-ada2690f4d94d615* /

FROM scratch AS cratesio-unicode-width-0.1.8
ADD --chmod=0664 --checksum=sha256:9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3 \
  https://static.crates.io/crates/unicode-width/unicode-width-0.1.8.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-unicode-width-0.1.8-e55c633902343b3a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-unicode-width-0.1.8,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-width-0.1.8 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_width" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-width-0.1.8" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-width-0.1.8/Cargo.toml" \
        CARGO_PKG_AUTHORS="kwantam <kwantam@gmail.com>:Manish Goregaokar <manishsmail@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Determine displayed width of `char` and `str` types\naccording to Unicode Standard Annex #11 rules.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/unicode-rs/unicode-width" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-width" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/unicode-rs/unicode-width" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.1.8" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="8" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_width' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bench", "compiler_builtins", "core", "default", "no_std", "rustc-dep-of-std", "std"))' '-C' 'metadata=dc2c81fcea1d5b77' '-C' 'extra-filename=-e55c633902343b3a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-width-0.1.8/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-e55c633902343b3a
COPY --from=dep-l-unicode-width-0.1.8-e55c633902343b3a /tmp/clis-dbcc_2-2-1/release/deps/*-e55c633902343b3a* /

FROM scratch AS cratesio-textwrap-0.11.0
ADD --chmod=0664 --checksum=sha256:d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060 \
  https://static.crates.io/crates/textwrap/textwrap-0.11.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-textwrap-0.11.0-b7e82f41d8b26a14
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-textwrap-0.11.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/textwrap-0.11.0 \
  --mount=from=out-e55c633902343b3a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta,source=/libunicode_width-e55c633902343b3a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="textwrap" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/textwrap-0.11.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/textwrap-0.11.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Martin Geisler <martin@geisler.net>" \
        CARGO_PKG_DESCRIPTION="Textwrap is a small library for word wrapping, indenting, and\ndedenting strings.\n\nYou can use it to format strings (such as help and error messages) for\ndisplay in commandline applications. It is designed to be efficient\nand handle Unicode characters correctly.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="textwrap" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/mgeisler/textwrap" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.11.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="11" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'textwrap' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("hyphenation", "term_size"))' '-C' 'metadata=6a61acb476333b63' '-C' 'extra-filename=-b7e82f41d8b26a14' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'unicode_width=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/textwrap-0.11.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b7e82f41d8b26a14
COPY --from=dep-l-textwrap-0.11.0-b7e82f41d8b26a14 /tmp/clis-dbcc_2-2-1/release/deps/*-b7e82f41d8b26a14* /

FROM scratch AS cratesio-vec_map-0.8.2
ADD --chmod=0664 --checksum=sha256:f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191 \
  https://static.crates.io/crates/vec_map/vec_map-0.8.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-vec_map-0.8.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="vec_map" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:Jorge Aparicio <japaricious@gmail.com>:Alexis Beingessner <a.beingessner@gmail.com>:Brian Anderson <>:tbu- <>:Manish Goregaokar <>:Aaron Turon <aturon@mozilla.com>:Adolfo Ochagavía <>:Niko Matsakis <>:Steven Fackler <>:Chase Southwood <csouth3@illinois.edu>:Eduard Burtescu <>:Florian Wilkens <>:Félix Raimundo <>:Tibor Benke <>:Markus Siemens <markus@m-siemens.de>:Josh Branchaud <jbranchaud@gmail.com>:Huon Wilson <dbau.pp@gmail.com>:Corey Farwell <coref@rwell.org>:Aaron Liblong <>:Nick Cameron <nrc@ncameron.org>:Patrick Walton <pcwalton@mimiga.net>:Felix S Klock II <>:Andrew Paseltiner <apaseltiner@gmail.com>:Sean McArthur <sean.monstar@gmail.com>:Vadim Petrochenkov <>" \
        CARGO_PKG_DESCRIPTION="A simple map based on a vector for small integer keys" \
        CARGO_PKG_HOMEPAGE="https://github.com/contain-rs/vec-map" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="vec_map" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/contain-rs/vec-map" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.8.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="8" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'vec_map' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("eders", "serde"))' '-C' 'metadata=e3c2dfe37d7693e9' '-C' 'extra-filename=-3fc8ab5befc6e8f4' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/vec_map-0.8.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3fc8ab5befc6e8f4
COPY --from=dep-l-vec_map-0.8.2-3fc8ab5befc6e8f4 /tmp/clis-dbcc_2-2-1/release/deps/*-3fc8ab5befc6e8f4* /

FROM scratch AS cratesio-clap-2.33.3
ADD --chmod=0664 --checksum=sha256:37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002 \
  https://static.crates.io/crates/clap/clap-2.33.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-clap-2.33.3-5a839c872643e159
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-clap-2.33.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-2.33.3 \
  --mount=from=out-320ef4b8ee2e57f9,dst=/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta,source=/libansi_term-320ef4b8ee2e57f9.rmeta \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta,source=/libatty-737035cdf92a82de.rmeta \
  --mount=from=out-d19718ebe5a0c815,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-d19718ebe5a0c815.rmeta,source=/libbitflags-d19718ebe5a0c815.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-ada2690f4d94d615,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstrsim-ada2690f4d94d615.rmeta,source=/libstrsim-ada2690f4d94d615.rmeta \
  --mount=from=out-b7e82f41d8b26a14,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtextwrap-b7e82f41d8b26a14.rmeta,source=/libtextwrap-b7e82f41d8b26a14.rmeta \
  --mount=from=out-e55c633902343b3a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta,source=/libunicode_width-e55c633902343b3a.rmeta \
  --mount=from=out-3fc8ab5befc6e8f4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libvec_map-3fc8ab5befc6e8f4.rmeta,source=/libvec_map-3fc8ab5befc6e8f4.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="clap" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-2.33.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-2.33.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="Kevin K. <kbknapp@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple to use, efficient, and full-featured Command Line Argument Parser\n" \
        CARGO_PKG_HOMEPAGE="https://clap.rs/" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="clap" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/clap-rs/clap" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.33.3" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="33" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'clap' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="ansi_term"' '--cfg' 'feature="atty"' '--cfg' 'feature="color"' '--cfg' 'feature="default"' '--cfg' 'feature="strsim"' '--cfg' 'feature="suggestions"' '--cfg' 'feature="vec_map"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("ansi_term", "atty", "clippy", "color", "debug", "default", "doc", "lints", "nightly", "no_cargo", "strsim", "suggestions", "term_size", "unstable", "vec_map", "wrap_help", "yaml", "yaml-rust"))' '-C' 'metadata=92692002227a641e' '-C' 'extra-filename=-5a839c872643e159' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'ansi_term=/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta' '--extern' 'atty=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta' '--extern' 'bitflags=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-d19718ebe5a0c815.rmeta' '--extern' 'strsim=/tmp/clis-dbcc_2-2-1/release/deps/libstrsim-ada2690f4d94d615.rmeta' '--extern' 'textwrap=/tmp/clis-dbcc_2-2-1/release/deps/libtextwrap-b7e82f41d8b26a14.rmeta' '--extern' 'unicode_width=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta' '--extern' 'vec_map=/tmp/clis-dbcc_2-2-1/release/deps/libvec_map-3fc8ab5befc6e8f4.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/clap-2.33.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-5a839c872643e159
COPY --from=dep-l-clap-2.33.3-5a839c872643e159 /tmp/clis-dbcc_2-2-1/release/deps/*-5a839c872643e159* /

FROM scratch AS cratesio-quick-error-1.2.3
ADD --chmod=0664 --checksum=sha256:a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0 \
  https://static.crates.io/crates/quick-error/quick-error-1.2.3.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-quick-error-1.2.3-bd3d4e33b0f59f1b
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-quick-error-1.2.3,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quick-error-1.2.3 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="quick_error" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quick-error-1.2.3" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quick-error-1.2.3/Cargo.toml" \
        CARGO_PKG_AUTHORS="Paul Colomiets <paul@colomiets.name>:Colin Kiegel <kiegel@gmx.de>" \
        CARGO_PKG_DESCRIPTION="    A macro which makes error types pleasant to write.\n" \
        CARGO_PKG_HOMEPAGE="http://github.com/tailhook/quick-error" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="quick-error" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="http://github.com/tailhook/quick-error" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.2.3" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="3" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'quick_error' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=55ff0ffe965b7f06' '-C' 'extra-filename=-bd3d4e33b0f59f1b' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quick-error-1.2.3/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-bd3d4e33b0f59f1b
COPY --from=dep-l-quick-error-1.2.3-bd3d4e33b0f59f1b /tmp/clis-dbcc_2-2-1/release/deps/*-bd3d4e33b0f59f1b* /

FROM scratch AS cratesio-humantime-1.3.0
ADD --chmod=0664 --checksum=sha256:df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f \
  https://static.crates.io/crates/humantime/humantime-1.3.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-humantime-1.3.0-3e3dde196d8efa81
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-humantime-1.3.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-1.3.0 \
  --mount=from=out-bd3d4e33b0f59f1b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rmeta,source=/libquick_error-bd3d4e33b0f59f1b.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="humantime" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-1.3.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-1.3.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Paul Colomiets <paul@colomiets.name>" \
        CARGO_PKG_DESCRIPTION="    A parser and formatter for std::time::{Duration, SystemTime}\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/tailhook/humantime" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="humantime" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY= \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.3.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'humantime' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=1635e82c5370c82b' '-C' 'extra-filename=-3e3dde196d8efa81' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'quick_error=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/humantime-1.3.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3e3dde196d8efa81
COPY --from=dep-l-humantime-1.3.0-3e3dde196d8efa81 /tmp/clis-dbcc_2-2-1/release/deps/*-3e3dde196d8efa81* /

FROM scratch AS cratesio-lazy_static-1.4.0
ADD --chmod=0664 --checksum=sha256:e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646 \
  https://static.crates.io/crates/lazy_static/lazy_static-1.4.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-lazy_static-1.4.0-a79af56de238e2b5
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-lazy_static-1.4.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.4.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="lazy_static" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.4.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.4.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Marvin Löbel <loebel.marvin@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A macro for declaring lazily evaluated statics in Rust." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="lazy_static" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang-nursery/lazy-static.rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.4.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'lazy_static' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("spin", "spin_no_std"))' '-C' 'metadata=41a5c3179e73440d' '-C' 'extra-filename=-a79af56de238e2b5' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/lazy_static-1.4.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-a79af56de238e2b5
COPY --from=dep-l-lazy_static-1.4.0-a79af56de238e2b5 /tmp/clis-dbcc_2-2-1/release/deps/*-a79af56de238e2b5* /

FROM scratch AS cratesio-log-0.4.11
ADD --chmod=0664 --checksum=sha256:4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b \
  https://static.crates.io/crates/log/log-0.4.11.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-log-0.4.11-09be6f37eb701f15
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-log-0.4.11,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.11 \
  --mount=from=out-abefcc22b095b628,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rmeta,source=/libcfg_if-abefcc22b095b628.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="log" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.11" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.11/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A lightweight logging facade for Rust\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="log" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/log" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.11" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="11" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/log-d1fe451af816ca5e/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'log' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="std"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("kv_unstable", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval"))' '-C' 'metadata=46ae8ee621802908' '-C' 'extra-filename=-09be6f37eb701f15' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'cfg_if=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rmeta' '--cap-lints' 'warn' '--cfg' 'atomic_cas' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/log-0.4.11/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-09be6f37eb701f15
COPY --from=dep-l-log-0.4.11-09be6f37eb701f15 /tmp/clis-dbcc_2-2-1/release/deps/*-09be6f37eb701f15* /

FROM scratch AS cratesio-regex-syntax-0.6.20
ADD --chmod=0664 --checksum=sha256:8cab7a364d15cde1e505267766a2d3c4e22a843e1a601f0fa7564c0f82ced11c \
  https://static.crates.io/crates/regex-syntax/regex-syntax-0.6.20.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-regex-syntax-0.6.20-eec8efd7d7dadd3c
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-regex-syntax-0.6.20,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.6.20 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="regex_syntax" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.6.20" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.6.20/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A regular expression parser." \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/regex" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="regex-syntax" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/regex" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.6.20" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="20" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'regex_syntax' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="unicode"' '--cfg' 'feature="unicode-age"' '--cfg' 'feature="unicode-bool"' '--cfg' 'feature="unicode-case"' '--cfg' 'feature="unicode-gencat"' '--cfg' 'feature="unicode-perl"' '--cfg' 'feature="unicode-script"' '--cfg' 'feature="unicode-segment"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"))' '-C' 'metadata=25f36bd4ab5f92c8' '-C' 'extra-filename=-eec8efd7d7dadd3c' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-syntax-0.6.20/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-eec8efd7d7dadd3c
COPY --from=dep-l-regex-syntax-0.6.20-eec8efd7d7dadd3c /tmp/clis-dbcc_2-2-1/release/deps/*-eec8efd7d7dadd3c* /

FROM scratch AS cratesio-thread_local-1.0.1
ADD --chmod=0664 --checksum=sha256:d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14 \
  https://static.crates.io/crates/thread_local/thread_local-1.0.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-thread_local-1.0.1-3ace2abd55187163
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-thread_local-1.0.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.0.1 \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="thread_local" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.0.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.0.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Amanieu d'Antras <amanieu@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Per-object thread-local storage" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0/MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="thread_local" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/Amanieu/thread_local-rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'thread_local' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=4c283879b6d3db91' '-C' 'extra-filename=-3ace2abd55187163' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'lazy_static=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/thread_local-1.0.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3ace2abd55187163
COPY --from=dep-l-thread_local-1.0.1-3ace2abd55187163 /tmp/clis-dbcc_2-2-1/release/deps/*-3ace2abd55187163* /

FROM scratch AS cratesio-regex-1.4.1
ADD --chmod=0664 --checksum=sha256:8963b85b8ce3074fecffde43b4b0dded83ce2f367dc8d363afc56679f3ee820b \
  https://static.crates.io/crates/regex/regex-1.4.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-regex-1.4.1-5ba8c6f49cc2732d
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-regex-1.4.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.4.1 \
  --mount=from=out-014f7ab42daca0d7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rmeta,source=/libaho_corasick-014f7ab42daca0d7.rmeta \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
  --mount=from=out-eec8efd7d7dadd3c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rmeta,source=/libregex_syntax-eec8efd7d7dadd3c.rmeta \
  --mount=from=out-3ace2abd55187163,dst=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rmeta,source=/libthread_local-3ace2abd55187163.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="regex" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.4.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.4.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/rust-lang/regex" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="regex" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/rust-lang/regex" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.4.1" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'regex' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="aho-corasick"' '--cfg' 'feature="default"' '--cfg' 'feature="memchr"' '--cfg' 'feature="perf"' '--cfg' 'feature="perf-cache"' '--cfg' 'feature="perf-dfa"' '--cfg' 'feature="perf-inline"' '--cfg' 'feature="perf-literal"' '--cfg' 'feature="std"' '--cfg' 'feature="thread_local"' '--cfg' 'feature="unicode"' '--cfg' 'feature="unicode-age"' '--cfg' 'feature="unicode-bool"' '--cfg' 'feature="unicode-case"' '--cfg' 'feature="unicode-gencat"' '--cfg' 'feature="unicode-perl"' '--cfg' 'feature="unicode-script"' '--cfg' 'feature="unicode-segment"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("aho-corasick", "default", "memchr", "pattern", "perf", "perf-cache", "perf-dfa", "perf-inline", "perf-literal", "std", "thread_local", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unstable", "use_std"))' '-C' 'metadata=37ea37561d556d66' '-C' 'extra-filename=-5ba8c6f49cc2732d' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'aho_corasick=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rmeta' '--extern' 'memchr=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta' '--extern' 'regex_syntax=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rmeta' '--extern' 'thread_local=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/regex-1.4.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-5ba8c6f49cc2732d
COPY --from=dep-l-regex-1.4.1-5ba8c6f49cc2732d /tmp/clis-dbcc_2-2-1/release/deps/*-5ba8c6f49cc2732d* /

FROM scratch AS cratesio-termcolor-1.1.0
ADD --chmod=0664 --checksum=sha256:bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f \
  https://static.crates.io/crates/termcolor/termcolor-1.1.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-termcolor-1.1.0-3d5a70ee74f70e2b
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-termcolor-1.1.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.1.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="termcolor" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.1.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.1.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Andrew Gallant <jamslam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A simple cross platform library for writing colored text to a terminal.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/BurntSushi/termcolor" \
        CARGO_PKG_LICENSE="Unlicense OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="termcolor" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/BurntSushi/termcolor" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.1.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="1" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'termcolor' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=78372cdcfff54a1b' '-C' 'extra-filename=-3d5a70ee74f70e2b' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/termcolor-1.1.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-3d5a70ee74f70e2b
COPY --from=dep-l-termcolor-1.1.0-3d5a70ee74f70e2b /tmp/clis-dbcc_2-2-1/release/deps/*-3d5a70ee74f70e2b* /

FROM scratch AS cratesio-env_logger-0.7.1
ADD --chmod=0664 --checksum=sha256:44533bbbb3bb3c1fa17d9f2e4e38bbbaf8396ba82193c4cb1b6445d711445d36 \
  https://static.crates.io/crates/env_logger/env_logger-0.7.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-env_logger-0.7.1-94c0a2bd3b1451c8
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-env_logger-0.7.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.7.1 \
  --mount=from=out-014f7ab42daca0d7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rmeta,source=/libaho_corasick-014f7ab42daca0d7.rmeta \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta,source=/libatty-737035cdf92a82de.rmeta \
  --mount=from=out-abefcc22b095b628,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rmeta,source=/libcfg_if-abefcc22b095b628.rmeta \
  --mount=from=out-3e3dde196d8efa81,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhumantime-3e3dde196d8efa81.rmeta,source=/libhumantime-3e3dde196d8efa81.rmeta \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-09be6f37eb701f15,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta,source=/liblog-09be6f37eb701f15.rmeta \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
  --mount=from=out-bd3d4e33b0f59f1b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rmeta,source=/libquick_error-bd3d4e33b0f59f1b.rmeta \
  --mount=from=out-5ba8c6f49cc2732d,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex-5ba8c6f49cc2732d.rmeta,source=/libregex-5ba8c6f49cc2732d.rmeta \
  --mount=from=out-eec8efd7d7dadd3c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rmeta,source=/libregex_syntax-eec8efd7d7dadd3c.rmeta \
  --mount=from=out-3d5a70ee74f70e2b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtermcolor-3d5a70ee74f70e2b.rmeta,source=/libtermcolor-3d5a70ee74f70e2b.rmeta \
  --mount=from=out-3ace2abd55187163,dst=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rmeta,source=/libthread_local-3ace2abd55187163.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="env_logger" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.7.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.7.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="The Rust Project Developers" \
        CARGO_PKG_DESCRIPTION="A logging implementation for `log` which is configured via an environment\nvariable.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="env_logger" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/sebasmagri/env_logger/" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.7.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'env_logger' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="atty"' '--cfg' 'feature="default"' '--cfg' 'feature="humantime"' '--cfg' 'feature="regex"' '--cfg' 'feature="termcolor"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("atty", "default", "humantime", "regex", "termcolor"))' '-C' 'metadata=b21cd85cd34aec8a' '-C' 'extra-filename=-94c0a2bd3b1451c8' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'atty=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta' '--extern' 'humantime=/tmp/clis-dbcc_2-2-1/release/deps/libhumantime-3e3dde196d8efa81.rmeta' '--extern' 'log=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta' '--extern' 'regex=/tmp/clis-dbcc_2-2-1/release/deps/libregex-5ba8c6f49cc2732d.rmeta' '--extern' 'termcolor=/tmp/clis-dbcc_2-2-1/release/deps/libtermcolor-3d5a70ee74f70e2b.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/env_logger-0.7.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-94c0a2bd3b1451c8
COPY --from=dep-l-env_logger-0.7.1-94c0a2bd3b1451c8 /tmp/clis-dbcc_2-2-1/release/deps/*-94c0a2bd3b1451c8* /

FROM scratch AS cratesio-unicode-segmentation-1.6.0
ADD --chmod=0664 --checksum=sha256:e83e153d1053cbb5a118eeff7fd5be06ed99153f00dbcd8ae310c5fb2b22edc0 \
  https://static.crates.io/crates/unicode-segmentation/unicode-segmentation-1.6.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-unicode-segmentation-1.6.0-0711d9c6f9e71290
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-unicode-segmentation-1.6.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_segmentation" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="kwantam <kwantam@gmail.com>:Manish Goregaokar <manishsmail@gmail.com>" \
        CARGO_PKG_DESCRIPTION="This crate provides Grapheme Cluster, Word and Sentence boundaries\naccording to Unicode Standard Annex #29 rules.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/unicode-rs/unicode-segmentation" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-segmentation" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/unicode-rs/unicode-segmentation" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.6.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_segmentation' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no_std"))' '-C' 'metadata=de3ad364d6666506' '-C' 'extra-filename=-0711d9c6f9e71290' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0711d9c6f9e71290
COPY --from=dep-l-unicode-segmentation-1.6.0-0711d9c6f9e71290 /tmp/clis-dbcc_2-2-1/release/deps/*-0711d9c6f9e71290* /

FROM scratch AS cratesio-heck-0.3.1
ADD --chmod=0664 --checksum=sha256:20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205 \
  https://static.crates.io/crates/heck/heck-0.3.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-heck-0.3.1-41892b3573d1a97c
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-heck-0.3.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1 \
  --mount=from=out-0711d9c6f9e71290,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rmeta,source=/libunicode_segmentation-0711d9c6f9e71290.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="heck" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Without Boats <woboats@gmail.com>" \
        CARGO_PKG_DESCRIPTION="heck is a case conversion library." \
        CARGO_PKG_HOMEPAGE="https://github.com/withoutboats/heck" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="heck" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/withoutboats/heck" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'heck' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=2f5bfc775a952d4c' '-C' 'extra-filename=-41892b3573d1a97c' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'unicode_segmentation=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-41892b3573d1a97c
COPY --from=dep-l-heck-0.3.1-41892b3573d1a97c /tmp/clis-dbcc_2-2-1/release/deps/*-41892b3573d1a97c* /


FROM rust-base AS dep-l-unicode-segmentation-1.6.0-b06e8bcc96549ef0
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-unicode-segmentation-1.6.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_segmentation" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="kwantam <kwantam@gmail.com>:Manish Goregaokar <manishsmail@gmail.com>" \
        CARGO_PKG_DESCRIPTION="This crate provides Grapheme Cluster, Word and Sentence boundaries\naccording to Unicode Standard Annex #29 rules.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/unicode-rs/unicode-segmentation" \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-segmentation" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/unicode-rs/unicode-segmentation" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.6.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="6" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_segmentation' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("no_std"))' '-C' 'metadata=caefe3ad86024d64' '-C' 'extra-filename=-b06e8bcc96549ef0' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-segmentation-1.6.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-b06e8bcc96549ef0
COPY --from=dep-l-unicode-segmentation-1.6.0-b06e8bcc96549ef0 /tmp/clis-dbcc_2-2-1/release/deps/*-b06e8bcc96549ef0* /


FROM rust-base AS dep-l-heck-0.3.1-7d0dcf7e7b45836f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-heck-0.3.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1 \
  --mount=from=out-b06e8bcc96549ef0,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-b06e8bcc96549ef0.rmeta,source=/libunicode_segmentation-b06e8bcc96549ef0.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="heck" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Without Boats <woboats@gmail.com>" \
        CARGO_PKG_DESCRIPTION="heck is a case conversion library." \
        CARGO_PKG_HOMEPAGE="https://github.com/withoutboats/heck" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="heck" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/withoutboats/heck" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'heck' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=bc369c776ba0d082' '-C' 'extra-filename=-7d0dcf7e7b45836f' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'unicode_segmentation=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-b06e8bcc96549ef0.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/heck-0.3.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7d0dcf7e7b45836f
COPY --from=dep-l-heck-0.3.1-7d0dcf7e7b45836f /tmp/clis-dbcc_2-2-1/release/deps/*-7d0dcf7e7b45836f* /

FROM scratch AS cratesio-hex-0.2.0
ADD --chmod=0664 --checksum=sha256:d6a22814455d41612f41161581c2883c0c6a1c41852729b17d5ed88f01e153aa \
  https://static.crates.io/crates/hex/hex-0.2.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-hex-0.2.0-f065076cf799d91a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-hex-0.2.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hex-0.2.0 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="hex" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hex-0.2.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hex-0.2.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="KokaKiwi <kokakiwi@kokakiwi.net>" \
        CARGO_PKG_DESCRIPTION="A basic crate to encode values to hexadecimal representation." \
        CARGO_PKG_HOMEPAGE="https://github.com/KokaKiwi/rust-hex" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="hex" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/KokaKiwi/rust-hex" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'hex' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=c34604b3193f2443' '-C' 'extra-filename=-f065076cf799d91a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/hex-0.2.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-f065076cf799d91a
COPY --from=dep-l-hex-0.2.0-f065076cf799d91a /tmp/clis-dbcc_2-2-1/release/deps/*-f065076cf799d91a* /

FROM scratch AS cratesio-itertools-0.4.19
ADD --chmod=0664 --checksum=sha256:c4a9b56eb56058f43dc66e58f40a214b2ccbc9f3df51861b63d51dec7b65bc3f \
  https://static.crates.io/crates/itertools/itertools-0.4.19.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-itertools-0.4.19-2505039b047dad1a
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-itertools-0.4.19,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itertools-0.4.19 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="itertools" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itertools-0.4.19" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itertools-0.4.19/Cargo.toml" \
        CARGO_PKG_AUTHORS="bluss" \
        CARGO_PKG_DESCRIPTION="Extra iterator adaptors, iterator methods and macros." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="itertools" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/bluss/rust-itertools" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.19" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="19" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'itertools' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("quickcheck", "unstable"))' '-C' 'metadata=ec365d68050d67a1' '-C' 'extra-filename=-2505039b047dad1a' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/itertools-0.4.19/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-2505039b047dad1a
COPY --from=dep-l-itertools-0.4.19-2505039b047dad1a /tmp/clis-dbcc_2-2-1/release/deps/*-2505039b047dad1a* /

FROM scratch AS cratesio-nix-0.5.1
ADD --chmod=0664 --checksum=sha256:bfb3ddedaa14746434a02041940495bf11325c22f6d36125d3bdd56090d50a79 \
  https://static.crates.io/crates/nix/nix-0.5.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-nix-0.5.1-4ee318c191cb8959
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-nix-0.5.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.5.1 \
  --mount=from=out-e976848f96abbbd4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rmeta,source=/libbitflags-e976848f96abbbd4.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="nix" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.5.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.5.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="Carl Lerche <me@carllerche.com>" \
        CARGO_PKG_DESCRIPTION="Rust friendly bindings to *nix APIs" \
        CARGO_PKG_HOMEPAGE="https://github.com/carllerche/nix-rust" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="nix" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY= \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.5.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="5" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'nix' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("eventfd", "execvpe", "preadv_pwritev", "signalfd"))' '-C' 'metadata=81800accad6947e6' '-C' 'extra-filename=-4ee318c191cb8959' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'bitflags=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rmeta' '--extern' 'libc=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/nix-0.5.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-4ee318c191cb8959
COPY --from=dep-l-nix-0.5.1-4ee318c191cb8959 /tmp/clis-dbcc_2-2-1/release/deps/*-4ee318c191cb8959* /

FROM scratch AS cratesio-pretty_env_logger-0.4.0
ADD --chmod=0664 --checksum=sha256:926d36b9553851b8b0005f1275891b392ee4d2d833852c417ed025477350fb9d \
  https://static.crates.io/crates/pretty_env_logger/pretty_env_logger-0.4.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-pretty_env_logger-0.4.0-682e69746a16e0c7
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-pretty_env_logger-0.4.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pretty_env_logger-0.4.0 \
  --mount=from=out-014f7ab42daca0d7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rmeta,source=/libaho_corasick-014f7ab42daca0d7.rmeta \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta,source=/libatty-737035cdf92a82de.rmeta \
  --mount=from=out-abefcc22b095b628,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rmeta,source=/libcfg_if-abefcc22b095b628.rmeta \
  --mount=from=out-94c0a2bd3b1451c8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libenv_logger-94c0a2bd3b1451c8.rmeta,source=/libenv_logger-94c0a2bd3b1451c8.rmeta \
  --mount=from=out-3e3dde196d8efa81,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhumantime-3e3dde196d8efa81.rmeta,source=/libhumantime-3e3dde196d8efa81.rmeta \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-09be6f37eb701f15,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta,source=/liblog-09be6f37eb701f15.rmeta \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
  --mount=from=out-bd3d4e33b0f59f1b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rmeta,source=/libquick_error-bd3d4e33b0f59f1b.rmeta \
  --mount=from=out-5ba8c6f49cc2732d,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex-5ba8c6f49cc2732d.rmeta,source=/libregex-5ba8c6f49cc2732d.rmeta \
  --mount=from=out-eec8efd7d7dadd3c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rmeta,source=/libregex_syntax-eec8efd7d7dadd3c.rmeta \
  --mount=from=out-3d5a70ee74f70e2b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtermcolor-3d5a70ee74f70e2b.rmeta,source=/libtermcolor-3d5a70ee74f70e2b.rmeta \
  --mount=from=out-3ace2abd55187163,dst=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rmeta,source=/libthread_local-3ace2abd55187163.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="pretty_env_logger" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pretty_env_logger-0.4.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pretty_env_logger-0.4.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Sean McArthur <sean@seanmonstar>" \
        CARGO_PKG_DESCRIPTION="a visually pretty env_logger" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT/Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="pretty_env_logger" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/seanmonstar/pretty-env-logger" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.0" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'pretty_env_logger' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=b32e3928ee0376e0' '-C' 'extra-filename=-682e69746a16e0c7' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'env_logger=/tmp/clis-dbcc_2-2-1/release/deps/libenv_logger-94c0a2bd3b1451c8.rmeta' '--extern' 'log=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/pretty_env_logger-0.4.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-682e69746a16e0c7
COPY --from=dep-l-pretty_env_logger-0.4.0-682e69746a16e0c7 /tmp/clis-dbcc_2-2-1/release/deps/*-682e69746a16e0c7* /


FROM rust-base AS dep-l-unicode-xid-0.2.1-f585407da4c0bf6f
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-unicode-xid-0.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="unicode_xid" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="erick.tryzelaar <erick.tryzelaar@gmail.com>:kwantam <kwantam@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n" \
        CARGO_PKG_HOMEPAGE="https://github.com/unicode-rs/unicode-xid" \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="unicode-xid" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/unicode-rs/unicode-xid" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.1" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'unicode_xid' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("bench", "default", "no_std"))' '-C' 'metadata=547e3cbe880d0bd4' '-C' 'extra-filename=-f585407da4c0bf6f' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/unicode-xid-0.2.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-f585407da4c0bf6f
COPY --from=dep-l-unicode-xid-0.2.1-f585407da4c0bf6f /tmp/clis-dbcc_2-2-1/release/deps/*-f585407da4c0bf6f* /


FROM rust-base AS dep-l-proc-macro2-1.0.24-5eebdd82bed7d9de
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-proc-macro2-1.0.24,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24 \
  --mount=from=out-f585407da4c0bf6f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-f585407da4c0bf6f.rmeta,source=/libunicode_xid-f585407da4c0bf6f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro2" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24/Cargo.toml" \
        CARGO_PKG_AUTHORS="Alex Crichton <alex@alexcrichton.com>:David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="A substitute implementation of the compiler's `proc_macro` API to decouple\ntoken-based libraries from the procedural macro use case.\n" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro2" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/alexcrichton/proc-macro2" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.24" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="24" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/proc-macro2-c7420a74a7aab1f6/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'proc_macro2' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' '-C' 'metadata=7c2486de5ccdc7c0' '-C' 'extra-filename=-5eebdd82bed7d9de' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'unicode_xid=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-f585407da4c0bf6f.rmeta' '--cap-lints' 'warn' '--cfg' 'lexerror_display' '--cfg' 'hygiene' '--cfg' 'use_proc_macro' '--cfg' 'wrap_proc_macro' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro2-1.0.24/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-5eebdd82bed7d9de
COPY --from=dep-l-proc-macro2-1.0.24-5eebdd82bed7d9de /tmp/clis-dbcc_2-2-1/release/deps/*-5eebdd82bed7d9de* /

FROM scratch AS cratesio-proc-macro-error-attr-1.0.4
ADD --chmod=0664 --checksum=sha256:a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869 \
  https://static.crates.io/crates/proc-macro-error-attr/proc-macro-error-attr-1.0.4.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-proc-macro-error-attr-1.0.4-5abbb4d0b3e50e85
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-proc-macro-error-attr-1.0.4,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-attr-1.0.4 \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib,source=/libproc_macro2-80b37ce9903d0def.rlib \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib,source=/libquote-dd5debcb2b51fc02.rlib \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rlib,source=/libunicode_xid-ca80afcc82eeec0a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro_error_attr" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-attr-1.0.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-attr-1.0.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="CreepySkeleton <creepy-skeleton@yandex.ru>" \
        CARGO_PKG_DESCRIPTION="Attribute macro for proc-macro-error crate" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro-error-attr" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://gitlab.com/CreepySkeleton/proc-macro-error" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.4" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/proc-macro-error-attr-9280cbeb00d67650/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'proc_macro_error_attr' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=5a216e554a65b5da' '-C' 'extra-filename=-5abbb4d0b3e50e85' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-attr-1.0.4/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-5abbb4d0b3e50e85
COPY --from=dep-p-proc-macro-error-attr-1.0.4-5abbb4d0b3e50e85 /tmp/clis-dbcc_2-2-1/release/deps/*-5abbb4d0b3e50e85* /

FROM scratch AS cratesio-proc-macro-error-1.0.4
ADD --chmod=0664 --checksum=sha256:da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c \
  https://static.crates.io/crates/proc-macro-error/proc-macro-error-1.0.4.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-proc-macro-error-1.0.4-8d3142ab9efe4ea8
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-proc-macro-error-1.0.4,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-1.0.4 \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-5abbb4d0b3e50e85,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so,source=/libproc_macro_error_attr-5abbb4d0b3e50e85.so \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta,source=/libquote-dd5debcb2b51fc02.rmeta \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rmeta,source=/libsyn-bbffa8c7e6a16356.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="proc_macro_error" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-1.0.4" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-1.0.4/Cargo.toml" \
        CARGO_PKG_AUTHORS="CreepySkeleton <creepy-skeleton@yandex.ru>" \
        CARGO_PKG_DESCRIPTION="Almost drop-in replacement to panics in proc-macros" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="proc-macro-error" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://gitlab.com/CreepySkeleton/proc-macro-error" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.4" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="4" \
        CARGO_PKG_VERSION_PRE= \
        OUT_DIR="/tmp/clis-dbcc_2-2-1/release/build/proc-macro-error-d3ab6ec8e15943fd/out" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'proc_macro_error' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--cfg' 'feature="default"' '--cfg' 'feature="syn"' '--cfg' 'feature="syn-error"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "syn", "syn-error"))' '-C' 'metadata=5f2d351359ab4260' '-C' 'extra-filename=-8d3142ab9efe4ea8' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro_error_attr=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta' '--extern' 'syn=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rmeta' '--cap-lints' 'warn' '--cfg' 'use_fallback' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/proc-macro-error-1.0.4/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-8d3142ab9efe4ea8
COPY --from=dep-l-proc-macro-error-1.0.4-8d3142ab9efe4ea8 /tmp/clis-dbcc_2-2-1/release/deps/*-8d3142ab9efe4ea8* /


FROM rust-base AS dep-l-quote-1.0.7-0298ff41e604ba82
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-quote-1.0.7,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7 \
  --mount=from=out-5eebdd82bed7d9de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rmeta,source=/libproc_macro2-5eebdd82bed7d9de.rmeta \
  --mount=from=out-f585407da4c0bf6f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-f585407da4c0bf6f.rmeta,source=/libunicode_xid-f585407da4c0bf6f.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="quote" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7/Cargo.toml" \
        CARGO_PKG_AUTHORS="David Tolnay <dtolnay@gmail.com>" \
        CARGO_PKG_DESCRIPTION="Quasi-quoting macro quote!(...)" \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT OR Apache-2.0" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="quote" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/dtolnay/quote" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.0.7" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="0" \
        CARGO_PKG_VERSION_PATCH="7" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'quote' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--cfg' 'feature="proc-macro"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("default", "proc-macro"))' '-C' 'metadata=c5904edbd824e07e' '-C' 'extra-filename=-0298ff41e604ba82' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/quote-1.0.7/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0298ff41e604ba82
COPY --from=dep-l-quote-1.0.7-0298ff41e604ba82 /tmp/clis-dbcc_2-2-1/release/deps/*-0298ff41e604ba82* /

FROM scratch AS cratesio-try_from-0.2.2
ADD --chmod=0664 --checksum=sha256:923a7ee3e97dbfe8685261beb4511cc9620a1252405d02693d43169729570111 \
  https://static.crates.io/crates/try_from/try_from-0.2.2.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-try_from-0.2.2-35b125c45c1cafb3
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-try_from-0.2.2,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/try_from-0.2.2 \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="try_from" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/try_from-0.2.2" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/try_from-0.2.2/Cargo.toml" \
        CARGO_PKG_AUTHORS="Derek Williams <derek@fyrie.net>" \
        CARGO_PKG_DESCRIPTION="TryFrom and TryInto traits for failable conversions that return a Result." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="try_from" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/derekjw/try_from" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.2.2" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="2" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'try_from' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=e520d19da200c6fa' '-C' 'extra-filename=-35b125c45c1cafb3' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/try_from-0.2.2/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-35b125c45c1cafb3
COPY --from=dep-l-try_from-0.2.2-35b125c45c1cafb3 /tmp/clis-dbcc_2-2-1/release/deps/*-35b125c45c1cafb3* /

FROM scratch AS cratesio-socketcan-1.7.0
ADD --chmod=0664 --checksum=sha256:3101efc6ef5af6f1c1a488241b469757b7a183baca63af958cd90e4696446c80 \
  https://static.crates.io/crates/socketcan/socketcan-1.7.0.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-socketcan-1.7.0-7d72679ab99cdbe3
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-socketcan-1.7.0,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socketcan-1.7.0 \
  --mount=from=out-e976848f96abbbd4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rmeta,source=/libbitflags-e976848f96abbbd4.rmeta \
  --mount=from=out-f065076cf799d91a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhex-f065076cf799d91a.rmeta,source=/libhex-f065076cf799d91a.rmeta \
  --mount=from=out-2505039b047dad1a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libitertools-2505039b047dad1a.rmeta,source=/libitertools-2505039b047dad1a.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-4ee318c191cb8959,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnix-4ee318c191cb8959.rmeta,source=/libnix-4ee318c191cb8959.rmeta \
  --mount=from=out-35b125c45c1cafb3,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtry_from-35b125c45c1cafb3.rmeta,source=/libtry_from-35b125c45c1cafb3.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="socketcan" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socketcan-1.7.0" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socketcan-1.7.0/Cargo.toml" \
        CARGO_PKG_AUTHORS="Marc Brinkmann <git@marcbrinkmann.de>" \
        CARGO_PKG_DESCRIPTION="Linux SocketCAN library. Send and receive CAN frames via CAN bus on Linux." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="socketcan" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/mbr/socketcan-rs" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="1.7.0" \
        CARGO_PKG_VERSION_MAJOR="1" \
        CARGO_PKG_VERSION_MINOR="7" \
        CARGO_PKG_VERSION_PATCH="0" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'socketcan' '--edition' '2015' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("vcan_tests"))' '-C' 'metadata=eb773bd766dbb556' '-C' 'extra-filename=-7d72679ab99cdbe3' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'hex=/tmp/clis-dbcc_2-2-1/release/deps/libhex-f065076cf799d91a.rmeta' '--extern' 'itertools=/tmp/clis-dbcc_2-2-1/release/deps/libitertools-2505039b047dad1a.rmeta' '--extern' 'libc=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta' '--extern' 'nix=/tmp/clis-dbcc_2-2-1/release/deps/libnix-4ee318c191cb8959.rmeta' '--extern' 'try_from=/tmp/clis-dbcc_2-2-1/release/deps/libtry_from-35b125c45c1cafb3.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/socketcan-1.7.0/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-7d72679ab99cdbe3
COPY --from=dep-l-socketcan-1.7.0-7d72679ab99cdbe3 /tmp/clis-dbcc_2-2-1/release/deps/*-7d72679ab99cdbe3* /

FROM scratch AS cratesio-structopt-derive-0.4.13
ADD --chmod=0664 --checksum=sha256:65e51c492f9e23a220534971ff5afc14037289de430e3c83f9daf6a1b6ae91e8 \
  https://static.crates.io/crates/structopt-derive/structopt-derive-0.4.13.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-p-structopt-derive-0.4.13-0187f3c8576aef3b
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-structopt-derive-0.4.13,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-derive-0.4.13 \
  --mount=from=out-41892b3573d1a97c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-41892b3573d1a97c.rlib,source=/libheck-41892b3573d1a97c.rlib \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib,source=/libproc_macro2-80b37ce9903d0def.rlib \
  --mount=from=out-8d3142ab9efe4ea8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error-8d3142ab9efe4ea8.rlib,source=/libproc_macro_error-8d3142ab9efe4ea8.rlib \
  --mount=from=out-5abbb4d0b3e50e85,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so,source=/libproc_macro_error_attr-5abbb4d0b3e50e85.so \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib,source=/libquote-dd5debcb2b51fc02.rlib \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rlib,source=/libsyn-bbffa8c7e6a16356.rlib \
  --mount=from=out-0711d9c6f9e71290,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rlib,source=/libunicode_segmentation-0711d9c6f9e71290.rlib \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rlib,source=/libunicode_xid-ca80afcc82eeec0a.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="structopt_derive" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-derive-0.4.13" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-derive-0.4.13/Cargo.toml" \
        CARGO_PKG_AUTHORS="Guillaume Pinot <texitoi@texitoi.eu>" \
        CARGO_PKG_DESCRIPTION="Parse command line argument by defining a struct, derive crate." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0/MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="structopt-derive" \
        CARGO_PKG_README= \
        CARGO_PKG_REPOSITORY="https://github.com/TeXitoi/structopt" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.4.13" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="4" \
        CARGO_PKG_VERSION_PATCH="13" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'structopt_derive' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'proc-macro' '--emit' 'dep-info,link' '-C' 'prefer-dynamic' '-C' 'embed-bitcode=no' '-C' 'debug-assertions=off' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("paw"))' '-C' 'metadata=64c40337d2020380' '-C' 'extra-filename=-0187f3c8576aef3b' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'heck=/tmp/clis-dbcc_2-2-1/release/deps/libheck-41892b3573d1a97c.rlib' '--extern' 'proc_macro_error=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error-8d3142ab9efe4ea8.rlib' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib' '--extern' 'syn=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rlib' '--extern' 'proc_macro' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-derive-0.4.13/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-0187f3c8576aef3b
COPY --from=dep-p-structopt-derive-0.4.13-0187f3c8576aef3b /tmp/clis-dbcc_2-2-1/release/deps/*-0187f3c8576aef3b* /

FROM scratch AS cratesio-structopt-0.3.20
ADD --chmod=0664 --checksum=sha256:126d630294ec449fae0b16f964e35bf3c74f940da9dca17ee9b905f7b3112eb8 \
  https://static.crates.io/crates/structopt/structopt-0.3.20.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-structopt-0.3.20-05c5d104c65b93b5
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-structopt-0.3.20,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-0.3.20 \
  --mount=from=out-320ef4b8ee2e57f9,dst=/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta,source=/libansi_term-320ef4b8ee2e57f9.rmeta \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta,source=/libatty-737035cdf92a82de.rmeta \
  --mount=from=out-d19718ebe5a0c815,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-d19718ebe5a0c815.rmeta,source=/libbitflags-d19718ebe5a0c815.rmeta \
  --mount=from=out-5a839c872643e159,dst=/tmp/clis-dbcc_2-2-1/release/deps/libclap-5a839c872643e159.rmeta,source=/libclap-5a839c872643e159.rmeta \
  --mount=from=out-41892b3573d1a97c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-41892b3573d1a97c.rmeta,source=/libheck-41892b3573d1a97c.rmeta \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-8d3142ab9efe4ea8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error-8d3142ab9efe4ea8.rmeta,source=/libproc_macro_error-8d3142ab9efe4ea8.rmeta \
  --mount=from=out-5abbb4d0b3e50e85,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so,source=/libproc_macro_error_attr-5abbb4d0b3e50e85.so \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta,source=/libquote-dd5debcb2b51fc02.rmeta \
  --mount=from=out-ada2690f4d94d615,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstrsim-ada2690f4d94d615.rmeta,source=/libstrsim-ada2690f4d94d615.rmeta \
  --mount=from=out-0187f3c8576aef3b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt_derive-0187f3c8576aef3b.so,source=/libstructopt_derive-0187f3c8576aef3b.so \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rmeta,source=/libsyn-bbffa8c7e6a16356.rmeta \
  --mount=from=out-b7e82f41d8b26a14,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtextwrap-b7e82f41d8b26a14.rmeta,source=/libtextwrap-b7e82f41d8b26a14.rmeta \
  --mount=from=out-0711d9c6f9e71290,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rmeta,source=/libunicode_segmentation-0711d9c6f9e71290.rmeta \
  --mount=from=out-e55c633902343b3a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta,source=/libunicode_width-e55c633902343b3a.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
  --mount=from=out-3fc8ab5befc6e8f4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libvec_map-3fc8ab5befc6e8f4.rmeta,source=/libvec_map-3fc8ab5befc6e8f4.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="structopt" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-0.3.20" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-0.3.20/Cargo.toml" \
        CARGO_PKG_AUTHORS="Guillaume Pinot <texitoi@texitoi.eu>:others" \
        CARGO_PKG_DESCRIPTION="Parse command line argument by defining a struct." \
        CARGO_PKG_HOMEPAGE= \
        CARGO_PKG_LICENSE="Apache-2.0 OR MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="structopt" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/TeXitoi/structopt" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="0.3.20" \
        CARGO_PKG_VERSION_MAJOR="0" \
        CARGO_PKG_VERSION_MINOR="3" \
        CARGO_PKG_VERSION_PATCH="20" \
        CARGO_PKG_VERSION_PRE= \
        CARGOGREEN=1 \
      rustc '--crate-name' 'structopt' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--cfg' 'feature="default"' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values("color", "debug", "default", "doc", "lints", "no_cargo", "paw", "paw_dep", "suggestions", "wrap_help", "yaml"))' '-C' 'metadata=7d5321695520a701' '-C' 'extra-filename=-05c5d104c65b93b5' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'clap=/tmp/clis-dbcc_2-2-1/release/deps/libclap-5a839c872643e159.rmeta' '--extern' 'lazy_static=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta' '--extern' 'structopt_derive=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt_derive-0187f3c8576aef3b.so' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/structopt-0.3.20/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-05c5d104c65b93b5
COPY --from=dep-l-structopt-0.3.20-05c5d104c65b93b5 /tmp/clis-dbcc_2-2-1/release/deps/*-05c5d104c65b93b5* /

FROM scratch AS cratesio-dbcc-2.2.1
ADD --chmod=0664 --checksum=sha256:6bbc56797a8a9d3a4045bdc1c8ac8fc8abd4b6610e085a727e33acaa01de9050 \
  https://static.crates.io/crates/dbcc/dbcc-2.2.1.crate /crate
SHELL ["/usr/bin/dash", "-eux", "-c"]
RUN \
  --mount=from=rust-base,src=/lib,dst=/lib \
  --mount=from=rust-base,src=/lib64,dst=/lib64 \
  --mount=from=rust-base,src=/usr,dst=/usr \
    mkdir /extracted \
 && tar zxf /crate --strip-components=1 -C /extracted
FROM rust-base AS dep-l-dbcc-2.2.1-e0edff43b19741a4
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-dbcc-2.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1 \
  --mount=from=out-014f7ab42daca0d7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rmeta,source=/libaho_corasick-014f7ab42daca0d7.rmeta \
  --mount=from=out-320ef4b8ee2e57f9,dst=/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rmeta,source=/libansi_term-320ef4b8ee2e57f9.rmeta \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rmeta,source=/libatty-737035cdf92a82de.rmeta \
  --mount=from=out-d19718ebe5a0c815,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-d19718ebe5a0c815.rmeta,source=/libbitflags-d19718ebe5a0c815.rmeta \
  --mount=from=out-e976848f96abbbd4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rmeta,source=/libbitflags-e976848f96abbbd4.rmeta \
  --mount=from=out-90ca44a8caf54d0f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libblake2-90ca44a8caf54d0f.rmeta,source=/libblake2-90ca44a8caf54d0f.rmeta \
  --mount=from=out-208f428f6e945660,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbyte_tools-208f428f6e945660.rmeta,source=/libbyte_tools-208f428f6e945660.rmeta \
  --mount=from=out-593834cb44ccbead,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcan_dbc-593834cb44ccbead.rmeta,source=/libcan_dbc-593834cb44ccbead.rmeta \
  --mount=from=out-abefcc22b095b628,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rmeta,source=/libcfg_if-abefcc22b095b628.rmeta \
  --mount=from=out-5a839c872643e159,dst=/tmp/clis-dbcc_2-2-1/release/deps/libclap-5a839c872643e159.rmeta,source=/libclap-5a839c872643e159.rmeta \
  --mount=from=out-c92b10e2fa1c82cb,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcrypto_mac-c92b10e2fa1c82cb.rmeta,source=/libcrypto_mac-c92b10e2fa1c82cb.rmeta \
  --mount=from=out-10105863fb18eb2a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libderive_getters-10105863fb18eb2a.so,source=/libderive_getters-10105863fb18eb2a.so \
  --mount=from=out-3c7631a805111659,dst=/tmp/clis-dbcc_2-2-1/release/deps/libdigest-3c7631a805111659.rmeta,source=/libdigest-3c7631a805111659.rmeta \
  --mount=from=out-94c0a2bd3b1451c8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libenv_logger-94c0a2bd3b1451c8.rmeta,source=/libenv_logger-94c0a2bd3b1451c8.rmeta \
  --mount=from=out-0afa135837d93e68,dst=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta,source=/libgeneric_array-0afa135837d93e68.rmeta \
  --mount=from=out-41892b3573d1a97c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-41892b3573d1a97c.rmeta,source=/libheck-41892b3573d1a97c.rmeta \
  --mount=from=out-7d0dcf7e7b45836f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-7d0dcf7e7b45836f.rmeta,source=/libheck-7d0dcf7e7b45836f.rmeta \
  --mount=from=out-f065076cf799d91a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhex-f065076cf799d91a.rmeta,source=/libhex-f065076cf799d91a.rmeta \
  --mount=from=out-3e3dde196d8efa81,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhumantime-3e3dde196d8efa81.rmeta,source=/libhumantime-3e3dde196d8efa81.rmeta \
  --mount=from=out-2505039b047dad1a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libitertools-2505039b047dad1a.rmeta,source=/libitertools-2505039b047dad1a.rmeta \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rmeta,source=/liblazy_static-a79af56de238e2b5.rmeta \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rmeta,source=/liblibc-087afb0c1713a9a6.rmeta \
  --mount=from=out-09be6f37eb701f15,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta,source=/liblog-09be6f37eb701f15.rmeta \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rmeta,source=/libmemchr-c93fd10415a641fd.rmeta \
  --mount=from=out-4ee318c191cb8959,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnix-4ee318c191cb8959.rmeta,source=/libnix-4ee318c191cb8959.rmeta \
  --mount=from=out-cd5fc4bcd4e040ed,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rmeta,source=/libnom-cd5fc4bcd4e040ed.rmeta \
  --mount=from=out-3e36cb37043b614a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libopaque_debug-3e36cb37043b614a.rmeta,source=/libopaque_debug-3e36cb37043b614a.rmeta \
  --mount=from=out-682e69746a16e0c7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libpretty_env_logger-682e69746a16e0c7.rmeta,source=/libpretty_env_logger-682e69746a16e0c7.rmeta \
  --mount=from=out-5eebdd82bed7d9de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rmeta,source=/libproc_macro2-5eebdd82bed7d9de.rmeta \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rmeta,source=/libproc_macro2-80b37ce9903d0def.rmeta \
  --mount=from=out-8d3142ab9efe4ea8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error-8d3142ab9efe4ea8.rmeta,source=/libproc_macro_error-8d3142ab9efe4ea8.rmeta \
  --mount=from=out-5abbb4d0b3e50e85,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so,source=/libproc_macro_error_attr-5abbb4d0b3e50e85.so \
  --mount=from=out-bd3d4e33b0f59f1b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rmeta,source=/libquick_error-bd3d4e33b0f59f1b.rmeta \
  --mount=from=out-0298ff41e604ba82,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-0298ff41e604ba82.rmeta,source=/libquote-0298ff41e604ba82.rmeta \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rmeta,source=/libquote-dd5debcb2b51fc02.rmeta \
  --mount=from=out-5ba8c6f49cc2732d,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex-5ba8c6f49cc2732d.rmeta,source=/libregex-5ba8c6f49cc2732d.rmeta \
  --mount=from=out-eec8efd7d7dadd3c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rmeta,source=/libregex_syntax-eec8efd7d7dadd3c.rmeta \
  --mount=from=out-7d72679ab99cdbe3,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsocketcan-7d72679ab99cdbe3.rmeta,source=/libsocketcan-7d72679ab99cdbe3.rmeta \
  --mount=from=out-ada2690f4d94d615,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstrsim-ada2690f4d94d615.rmeta,source=/libstrsim-ada2690f4d94d615.rmeta \
  --mount=from=out-05c5d104c65b93b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt-05c5d104c65b93b5.rmeta,source=/libstructopt-05c5d104c65b93b5.rmeta \
  --mount=from=out-0187f3c8576aef3b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt_derive-0187f3c8576aef3b.so,source=/libstructopt_derive-0187f3c8576aef3b.so \
  --mount=from=out-fe593aa0503da824,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsubtle-fe593aa0503da824.rmeta,source=/libsubtle-fe593aa0503da824.rmeta \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rmeta,source=/libsyn-bbffa8c7e6a16356.rmeta \
  --mount=from=out-3d5a70ee74f70e2b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtermcolor-3d5a70ee74f70e2b.rmeta,source=/libtermcolor-3d5a70ee74f70e2b.rmeta \
  --mount=from=out-b7e82f41d8b26a14,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtextwrap-b7e82f41d8b26a14.rmeta,source=/libtextwrap-b7e82f41d8b26a14.rmeta \
  --mount=from=out-3ace2abd55187163,dst=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rmeta,source=/libthread_local-3ace2abd55187163.rmeta \
  --mount=from=out-35b125c45c1cafb3,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtry_from-35b125c45c1cafb3.rmeta,source=/libtry_from-35b125c45c1cafb3.rmeta \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta,source=/libtypenum-0c59626b95871fe7.rmeta \
  --mount=from=out-0711d9c6f9e71290,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rmeta,source=/libunicode_segmentation-0711d9c6f9e71290.rmeta \
  --mount=from=out-b06e8bcc96549ef0,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-b06e8bcc96549ef0.rmeta,source=/libunicode_segmentation-b06e8bcc96549ef0.rmeta \
  --mount=from=out-e55c633902343b3a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rmeta,source=/libunicode_width-e55c633902343b3a.rmeta \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rmeta,source=/libunicode_xid-ca80afcc82eeec0a.rmeta \
  --mount=from=out-f585407da4c0bf6f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-f585407da4c0bf6f.rmeta,source=/libunicode_xid-f585407da4c0bf6f.rmeta \
  --mount=from=out-3fc8ab5befc6e8f4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libvec_map-3fc8ab5befc6e8f4.rmeta,source=/libvec_map-3fc8ab5befc6e8f4.rmeta \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_CRATE_NAME="dbcc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="marcelbuesing <buesing.marcel@googlemail.com>" \
        CARGO_PKG_DESCRIPTION="Compiles `data base CAN` (dbc) files into Rust code." \
        CARGO_PKG_HOMEPAGE="https://github.com/marcelbuesing/dbcc" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="dbcc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/marcelbuesing/dbcc.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.2.1" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'dbcc' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'lib' '--emit' 'dep-info,metadata,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=ed136c30a5077844' '-C' 'extra-filename=-e0edff43b19741a4' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'blake2=/tmp/clis-dbcc_2-2-1/release/deps/libblake2-90ca44a8caf54d0f.rmeta' '--extern' 'can_dbc=/tmp/clis-dbcc_2-2-1/release/deps/libcan_dbc-593834cb44ccbead.rmeta' '--extern' 'generic_array=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rmeta' '--extern' 'heck=/tmp/clis-dbcc_2-2-1/release/deps/libheck-7d0dcf7e7b45836f.rmeta' '--extern' 'log=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rmeta' '--extern' 'nom=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rmeta' '--extern' 'pretty_env_logger=/tmp/clis-dbcc_2-2-1/release/deps/libpretty_env_logger-682e69746a16e0c7.rmeta' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rmeta' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-0298ff41e604ba82.rmeta' '--extern' 'socketcan=/tmp/clis-dbcc_2-2-1/release/deps/libsocketcan-7d72679ab99cdbe3.rmeta' '--extern' 'structopt=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt-05c5d104c65b93b5.rmeta' '--extern' 'typenum=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rmeta' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1/src/lib.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-e0edff43b19741a4
COPY --from=dep-l-dbcc-2.2.1-e0edff43b19741a4 /tmp/clis-dbcc_2-2-1/release/deps/*-e0edff43b19741a4* /


FROM rust-base AS dep-b-dbcc-2.2.1-6cd0852da8e8bf94
SHELL ["/bin/bash", "-eux", "-c"]
WORKDIR /tmp/clis-dbcc_2-2-1/release/deps
RUN \
  --mount=from=cratesio-dbcc-2.2.1,source=/extracted,dst=/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1 \
  --mount=from=out-014f7ab42daca0d7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libaho_corasick-014f7ab42daca0d7.rlib,source=/libaho_corasick-014f7ab42daca0d7.rlib \
  --mount=from=out-320ef4b8ee2e57f9,dst=/tmp/clis-dbcc_2-2-1/release/deps/libansi_term-320ef4b8ee2e57f9.rlib,source=/libansi_term-320ef4b8ee2e57f9.rlib \
  --mount=from=out-737035cdf92a82de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libatty-737035cdf92a82de.rlib,source=/libatty-737035cdf92a82de.rlib \
  --mount=from=out-d19718ebe5a0c815,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-d19718ebe5a0c815.rlib,source=/libbitflags-d19718ebe5a0c815.rlib \
  --mount=from=out-e976848f96abbbd4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbitflags-e976848f96abbbd4.rlib,source=/libbitflags-e976848f96abbbd4.rlib \
  --mount=from=out-90ca44a8caf54d0f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libblake2-90ca44a8caf54d0f.rlib,source=/libblake2-90ca44a8caf54d0f.rlib \
  --mount=from=out-208f428f6e945660,dst=/tmp/clis-dbcc_2-2-1/release/deps/libbyte_tools-208f428f6e945660.rlib,source=/libbyte_tools-208f428f6e945660.rlib \
  --mount=from=out-593834cb44ccbead,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcan_dbc-593834cb44ccbead.rlib,source=/libcan_dbc-593834cb44ccbead.rlib \
  --mount=from=out-abefcc22b095b628,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcfg_if-abefcc22b095b628.rlib,source=/libcfg_if-abefcc22b095b628.rlib \
  --mount=from=out-5a839c872643e159,dst=/tmp/clis-dbcc_2-2-1/release/deps/libclap-5a839c872643e159.rlib,source=/libclap-5a839c872643e159.rlib \
  --mount=from=out-c92b10e2fa1c82cb,dst=/tmp/clis-dbcc_2-2-1/release/deps/libcrypto_mac-c92b10e2fa1c82cb.rlib,source=/libcrypto_mac-c92b10e2fa1c82cb.rlib \
  --mount=from=out-e0edff43b19741a4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libdbcc-e0edff43b19741a4.rlib,source=/libdbcc-e0edff43b19741a4.rlib \
  --mount=from=out-10105863fb18eb2a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libderive_getters-10105863fb18eb2a.so,source=/libderive_getters-10105863fb18eb2a.so \
  --mount=from=out-3c7631a805111659,dst=/tmp/clis-dbcc_2-2-1/release/deps/libdigest-3c7631a805111659.rlib,source=/libdigest-3c7631a805111659.rlib \
  --mount=from=out-94c0a2bd3b1451c8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libenv_logger-94c0a2bd3b1451c8.rlib,source=/libenv_logger-94c0a2bd3b1451c8.rlib \
  --mount=from=out-0afa135837d93e68,dst=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rlib,source=/libgeneric_array-0afa135837d93e68.rlib \
  --mount=from=out-41892b3573d1a97c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-41892b3573d1a97c.rlib,source=/libheck-41892b3573d1a97c.rlib \
  --mount=from=out-7d0dcf7e7b45836f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libheck-7d0dcf7e7b45836f.rlib,source=/libheck-7d0dcf7e7b45836f.rlib \
  --mount=from=out-f065076cf799d91a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhex-f065076cf799d91a.rlib,source=/libhex-f065076cf799d91a.rlib \
  --mount=from=out-3e3dde196d8efa81,dst=/tmp/clis-dbcc_2-2-1/release/deps/libhumantime-3e3dde196d8efa81.rlib,source=/libhumantime-3e3dde196d8efa81.rlib \
  --mount=from=out-2505039b047dad1a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libitertools-2505039b047dad1a.rlib,source=/libitertools-2505039b047dad1a.rlib \
  --mount=from=out-a79af56de238e2b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblazy_static-a79af56de238e2b5.rlib,source=/liblazy_static-a79af56de238e2b5.rlib \
  --mount=from=out-087afb0c1713a9a6,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblibc-087afb0c1713a9a6.rlib,source=/liblibc-087afb0c1713a9a6.rlib \
  --mount=from=out-09be6f37eb701f15,dst=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rlib,source=/liblog-09be6f37eb701f15.rlib \
  --mount=from=out-c93fd10415a641fd,dst=/tmp/clis-dbcc_2-2-1/release/deps/libmemchr-c93fd10415a641fd.rlib,source=/libmemchr-c93fd10415a641fd.rlib \
  --mount=from=out-4ee318c191cb8959,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnix-4ee318c191cb8959.rlib,source=/libnix-4ee318c191cb8959.rlib \
  --mount=from=out-cd5fc4bcd4e040ed,dst=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rlib,source=/libnom-cd5fc4bcd4e040ed.rlib \
  --mount=from=out-3e36cb37043b614a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libopaque_debug-3e36cb37043b614a.rlib,source=/libopaque_debug-3e36cb37043b614a.rlib \
  --mount=from=out-682e69746a16e0c7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libpretty_env_logger-682e69746a16e0c7.rlib,source=/libpretty_env_logger-682e69746a16e0c7.rlib \
  --mount=from=out-5eebdd82bed7d9de,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rlib,source=/libproc_macro2-5eebdd82bed7d9de.rlib \
  --mount=from=out-80b37ce9903d0def,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-80b37ce9903d0def.rlib,source=/libproc_macro2-80b37ce9903d0def.rlib \
  --mount=from=out-8d3142ab9efe4ea8,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error-8d3142ab9efe4ea8.rlib,source=/libproc_macro_error-8d3142ab9efe4ea8.rlib \
  --mount=from=out-5abbb4d0b3e50e85,dst=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro_error_attr-5abbb4d0b3e50e85.so,source=/libproc_macro_error_attr-5abbb4d0b3e50e85.so \
  --mount=from=out-bd3d4e33b0f59f1b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquick_error-bd3d4e33b0f59f1b.rlib,source=/libquick_error-bd3d4e33b0f59f1b.rlib \
  --mount=from=out-0298ff41e604ba82,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-0298ff41e604ba82.rlib,source=/libquote-0298ff41e604ba82.rlib \
  --mount=from=out-dd5debcb2b51fc02,dst=/tmp/clis-dbcc_2-2-1/release/deps/libquote-dd5debcb2b51fc02.rlib,source=/libquote-dd5debcb2b51fc02.rlib \
  --mount=from=out-5ba8c6f49cc2732d,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex-5ba8c6f49cc2732d.rlib,source=/libregex-5ba8c6f49cc2732d.rlib \
  --mount=from=out-eec8efd7d7dadd3c,dst=/tmp/clis-dbcc_2-2-1/release/deps/libregex_syntax-eec8efd7d7dadd3c.rlib,source=/libregex_syntax-eec8efd7d7dadd3c.rlib \
  --mount=from=out-7d72679ab99cdbe3,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsocketcan-7d72679ab99cdbe3.rlib,source=/libsocketcan-7d72679ab99cdbe3.rlib \
  --mount=from=out-ada2690f4d94d615,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstrsim-ada2690f4d94d615.rlib,source=/libstrsim-ada2690f4d94d615.rlib \
  --mount=from=out-05c5d104c65b93b5,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt-05c5d104c65b93b5.rlib,source=/libstructopt-05c5d104c65b93b5.rlib \
  --mount=from=out-0187f3c8576aef3b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt_derive-0187f3c8576aef3b.so,source=/libstructopt_derive-0187f3c8576aef3b.so \
  --mount=from=out-fe593aa0503da824,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsubtle-fe593aa0503da824.rlib,source=/libsubtle-fe593aa0503da824.rlib \
  --mount=from=out-bbffa8c7e6a16356,dst=/tmp/clis-dbcc_2-2-1/release/deps/libsyn-bbffa8c7e6a16356.rlib,source=/libsyn-bbffa8c7e6a16356.rlib \
  --mount=from=out-3d5a70ee74f70e2b,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtermcolor-3d5a70ee74f70e2b.rlib,source=/libtermcolor-3d5a70ee74f70e2b.rlib \
  --mount=from=out-b7e82f41d8b26a14,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtextwrap-b7e82f41d8b26a14.rlib,source=/libtextwrap-b7e82f41d8b26a14.rlib \
  --mount=from=out-3ace2abd55187163,dst=/tmp/clis-dbcc_2-2-1/release/deps/libthread_local-3ace2abd55187163.rlib,source=/libthread_local-3ace2abd55187163.rlib \
  --mount=from=out-35b125c45c1cafb3,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtry_from-35b125c45c1cafb3.rlib,source=/libtry_from-35b125c45c1cafb3.rlib \
  --mount=from=out-0c59626b95871fe7,dst=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rlib,source=/libtypenum-0c59626b95871fe7.rlib \
  --mount=from=out-0711d9c6f9e71290,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-0711d9c6f9e71290.rlib,source=/libunicode_segmentation-0711d9c6f9e71290.rlib \
  --mount=from=out-b06e8bcc96549ef0,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_segmentation-b06e8bcc96549ef0.rlib,source=/libunicode_segmentation-b06e8bcc96549ef0.rlib \
  --mount=from=out-e55c633902343b3a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_width-e55c633902343b3a.rlib,source=/libunicode_width-e55c633902343b3a.rlib \
  --mount=from=out-ca80afcc82eeec0a,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-ca80afcc82eeec0a.rlib,source=/libunicode_xid-ca80afcc82eeec0a.rlib \
  --mount=from=out-f585407da4c0bf6f,dst=/tmp/clis-dbcc_2-2-1/release/deps/libunicode_xid-f585407da4c0bf6f.rlib,source=/libunicode_xid-f585407da4c0bf6f.rlib \
  --mount=from=out-3fc8ab5befc6e8f4,dst=/tmp/clis-dbcc_2-2-1/release/deps/libvec_map-3fc8ab5befc6e8f4.rlib,source=/libvec_map-3fc8ab5befc6e8f4.rlib \
    { cat ./rustc-toolchain{,.toml} 2>/dev/null || true ; } && \
    env CARGO="$(which cargo)" \
        CARGO_BIN_NAME="dbcc" \
        CARGO_CRATE_NAME="dbcc" \
        CARGO_MANIFEST_DIR="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1" \
        CARGO_MANIFEST_PATH="/home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1/Cargo.toml" \
        CARGO_PKG_AUTHORS="marcelbuesing <buesing.marcel@googlemail.com>" \
        CARGO_PKG_DESCRIPTION="Compiles `data base CAN` (dbc) files into Rust code." \
        CARGO_PKG_HOMEPAGE="https://github.com/marcelbuesing/dbcc" \
        CARGO_PKG_LICENSE="MIT" \
        CARGO_PKG_LICENSE_FILE= \
        CARGO_PKG_NAME="dbcc" \
        CARGO_PKG_README="README.md" \
        CARGO_PKG_REPOSITORY="https://github.com/marcelbuesing/dbcc.git" \
        CARGO_PKG_RUST_VERSION= \
        CARGO_PKG_VERSION="2.2.1" \
        CARGO_PKG_VERSION_MAJOR="2" \
        CARGO_PKG_VERSION_MINOR="2" \
        CARGO_PKG_VERSION_PATCH="1" \
        CARGO_PKG_VERSION_PRE= \
        CARGO_PRIMARY_PACKAGE="1" \
        CARGOGREEN=1 \
      rustc '--crate-name' 'dbcc' '--edition' '2018' '--error-format' 'json' '--json' 'diagnostic-rendered-ansi,artifacts,future-incompat' '--crate-type' 'bin' '--emit' 'dep-info,link' '-C' 'opt-level=3' '-C' 'embed-bitcode=no' '--check-cfg' 'cfg(docsrs,test)' '--check-cfg' 'cfg(feature, values())' '-C' 'metadata=8d61b9db7169bea3' '-C' 'extra-filename=-6cd0852da8e8bf94' '--out-dir' '/tmp/clis-dbcc_2-2-1/release/deps' '-C' 'strip=debuginfo' '-L' 'dependency=/tmp/clis-dbcc_2-2-1/release/deps' '--extern' 'blake2=/tmp/clis-dbcc_2-2-1/release/deps/libblake2-90ca44a8caf54d0f.rlib' '--extern' 'can_dbc=/tmp/clis-dbcc_2-2-1/release/deps/libcan_dbc-593834cb44ccbead.rlib' '--extern' 'dbcc=/tmp/clis-dbcc_2-2-1/release/deps/libdbcc-e0edff43b19741a4.rlib' '--extern' 'generic_array=/tmp/clis-dbcc_2-2-1/release/deps/libgeneric_array-0afa135837d93e68.rlib' '--extern' 'heck=/tmp/clis-dbcc_2-2-1/release/deps/libheck-7d0dcf7e7b45836f.rlib' '--extern' 'log=/tmp/clis-dbcc_2-2-1/release/deps/liblog-09be6f37eb701f15.rlib' '--extern' 'nom=/tmp/clis-dbcc_2-2-1/release/deps/libnom-cd5fc4bcd4e040ed.rlib' '--extern' 'pretty_env_logger=/tmp/clis-dbcc_2-2-1/release/deps/libpretty_env_logger-682e69746a16e0c7.rlib' '--extern' 'proc_macro2=/tmp/clis-dbcc_2-2-1/release/deps/libproc_macro2-5eebdd82bed7d9de.rlib' '--extern' 'quote=/tmp/clis-dbcc_2-2-1/release/deps/libquote-0298ff41e604ba82.rlib' '--extern' 'socketcan=/tmp/clis-dbcc_2-2-1/release/deps/libsocketcan-7d72679ab99cdbe3.rlib' '--extern' 'structopt=/tmp/clis-dbcc_2-2-1/release/deps/libstructopt-05c5d104c65b93b5.rlib' '--extern' 'typenum=/tmp/clis-dbcc_2-2-1/release/deps/libtypenum-0c59626b95871fe7.rlib' '--cap-lints' 'warn' /home/runner/.cargo/registry/src/index.crates.io-0000000000000000/dbcc-2.2.1/src/main.rs \
        1> >(sed 's/^/::STDOUT:: /') \
        2> >(sed 's/^/::STDERR:: /' >&2)
FROM scratch AS out-6cd0852da8e8bf94
COPY --from=dep-b-dbcc-2.2.1-6cd0852da8e8bf94 /tmp/clis-dbcc_2-2-1/release/deps/*-6cd0852da8e8bf94* /

# Pipe this file to (not portable due to usage of local build contexts):
# DOCKER_BUILDKIT="1" \
#   docker --debug build --network=none --platform=local --pull=false --target=out-6cd0852da8e8bf94 --output=type=local,dest=/tmp/clis-dbcc_2-2-1/release/deps --build-context=crate_out-3cf9e442dfddd505=/tmp/clis-dbcc_2-2-1/release/build/typenum-3cf9e442dfddd505/out -
